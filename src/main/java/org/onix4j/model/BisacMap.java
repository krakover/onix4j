package org.onix4j.model;

import java.util.HashMap;
import java.util.Map;

/**
 * User: Neta
 * Date: 5/29/14
 * Time: 10:57 AM
 */
public class BisacMap {
    public static Map<String, String> bisacMap = new HashMap<String, String>();
    static {
        bisacMap.put("ANT000000","ANTIQUES & COLLECTIBLES / General");
        bisacMap.put("ANT001000","ANTIQUES & COLLECTIBLES / Americana");
        bisacMap.put("ANT002000","ANTIQUES & COLLECTIBLES / Art");
        bisacMap.put("ANT003000","ANTIQUES & COLLECTIBLES / Autographs");
        bisacMap.put("ANT005000","ANTIQUES & COLLECTIBLES / Books");
        bisacMap.put("ANT006000","ANTIQUES & COLLECTIBLES / Bottles");
        bisacMap.put("ANT007000","ANTIQUES & COLLECTIBLES / Buttons & Pins");
        bisacMap.put("ANT054000","ANTIQUES & COLLECTIBLES / Canadiana");
        bisacMap.put("ANT008000","ANTIQUES & COLLECTIBLES / Care & Restoration");
        bisacMap.put("ANT010000","ANTIQUES & COLLECTIBLES / Clocks & Watches");
        bisacMap.put("ANT011000","ANTIQUES & COLLECTIBLES / Coins, Currency & Medals");
        bisacMap.put("ANT012000","ANTIQUES & COLLECTIBLES / Comics");
        bisacMap.put("ANT015000","ANTIQUES & COLLECTIBLES / Dolls");
        bisacMap.put("ANT053000","ANTIQUES & COLLECTIBLES / Figurines");
        bisacMap.put("ANT016000","ANTIQUES & COLLECTIBLES / Firearms & Weapons");
        bisacMap.put("ANT017000","ANTIQUES & COLLECTIBLES / Furniture");
        bisacMap.put("ANT018000","ANTIQUES & COLLECTIBLES / Glass & Glassware");
        bisacMap.put("ANT021000","ANTIQUES & COLLECTIBLES / Jewelry");
        bisacMap.put("ANT022000","ANTIQUES & COLLECTIBLES / Kitchenware");
        bisacMap.put("ANT023000","ANTIQUES & COLLECTIBLES / Magazines & Newspapers");
        bisacMap.put("ANT024000","ANTIQUES & COLLECTIBLES / Military");
        bisacMap.put("ANT028000","ANTIQUES & COLLECTIBLES / Non-Sports Cards");
        bisacMap.put("ANT029000","ANTIQUES & COLLECTIBLES / Paper Ephemera");
        bisacMap.put("ANT025000","ANTIQUES & COLLECTIBLES / Performing Arts");
        bisacMap.put("ANT031000","ANTIQUES & COLLECTIBLES / Political");
        bisacMap.put("ANT052000","ANTIQUES & COLLECTIBLES / Popular Culture");
        bisacMap.put("ANT032000","ANTIQUES & COLLECTIBLES / Porcelain & China");
        bisacMap.put("ANT033000","ANTIQUES & COLLECTIBLES / Postcards");
        bisacMap.put("ANT034000","ANTIQUES & COLLECTIBLES / Posters");
        bisacMap.put("ANT035000","ANTIQUES & COLLECTIBLES / Pottery & Ceramics");
        bisacMap.put("ANT036000","ANTIQUES & COLLECTIBLES / Radios & Televisions (see also Performing Arts)");
        bisacMap.put("ANT037000","ANTIQUES & COLLECTIBLES / Records");
        bisacMap.put("ANT038000","ANTIQUES & COLLECTIBLES / Reference");
        bisacMap.put("ANT040000","ANTIQUES & COLLECTIBLES / Rugs");
        bisacMap.put("ANT041000","ANTIQUES & COLLECTIBLES / Silver, Gold & Other Metals");
        bisacMap.put("ANT043000","ANTIQUES & COLLECTIBLES / Sports (see also headings under Sports Cards)");
        bisacMap.put("ANT042000","ANTIQUES & COLLECTIBLES / Sports Cards / General");
        bisacMap.put("ANT042010","ANTIQUES & COLLECTIBLES / Sports Cards / Baseball");
        bisacMap.put("ANT042020","ANTIQUES & COLLECTIBLES / Sports Cards / Basketball");
        bisacMap.put("ANT042030","ANTIQUES & COLLECTIBLES / Sports Cards / Football");
        bisacMap.put("ANT042040","ANTIQUES & COLLECTIBLES / Sports Cards / Hockey");
        bisacMap.put("ANT044000","ANTIQUES & COLLECTIBLES / Stamps");
        bisacMap.put("ANT045000","ANTIQUES & COLLECTIBLES / Teddy Bears");
        bisacMap.put("ANT047000","ANTIQUES & COLLECTIBLES / Textiles & Costume");
        bisacMap.put("ANT055000","ANTIQUES & COLLECTIBLES / Tobacco-Related");
        bisacMap.put("ANT049000","ANTIQUES & COLLECTIBLES / Toy Animals");
        bisacMap.put("ANT050000","ANTIQUES & COLLECTIBLES / Toys");
        bisacMap.put("ANT009000","ANTIQUES & COLLECTIBLES / Transportation");
        bisacMap.put("ANT051000","ANTIQUES & COLLECTIBLES / Wine");
        bisacMap.put("ARC000000","ARCHITECTURE / General");
        bisacMap.put("ARC022000","ARCHITECTURE / Adaptive Reuse & Renovation");
        bisacMap.put("ARC023000","ARCHITECTURE / Annuals");
        bisacMap.put("ARC024000","ARCHITECTURE / Buildings / General");
        bisacMap.put("ARC024010","ARCHITECTURE / Buildings / Landmarks & Monuments");
        bisacMap.put("ARC011000","ARCHITECTURE / Buildings / Public, Commercial & Industrial");
        bisacMap.put("ARC016000","ARCHITECTURE / Buildings / Religious");
        bisacMap.put("ARC003000","ARCHITECTURE / Buildings / Residential");
        bisacMap.put("ARC019000","ARCHITECTURE / Codes & Standards");
        bisacMap.put("ARC001000","ARCHITECTURE / Criticism");
        bisacMap.put("ARC002000","ARCHITECTURE / Decoration & Ornament");
        bisacMap.put("ARC004000","ARCHITECTURE / Design, Drafting, Drawing & Presentation");
        bisacMap.put("ARC014000","ARCHITECTURE / Historic Preservation / General");
        bisacMap.put("ARC014010","ARCHITECTURE / Historic Preservation / Restoration Techniques");
        bisacMap.put("ARC005000","ARCHITECTURE / History / General");
        bisacMap.put("ARC005010","ARCHITECTURE / History / Prehistoric & Primitive");
        bisacMap.put("ARC005020","ARCHITECTURE / History / Ancient & Classical");
        bisacMap.put("ARC005030","ARCHITECTURE / History / Medieval");
        bisacMap.put("ARC005040","ARCHITECTURE / History / Renaissance");
        bisacMap.put("ARC005050","ARCHITECTURE / History / Baroque & Rococo");
        bisacMap.put("ARC005060","ARCHITECTURE / History / Romanticism");
        bisacMap.put("ARC005070","ARCHITECTURE / History / Modern (late 19th Century to 1945)");
        bisacMap.put("ARC005080","ARCHITECTURE / History / Contemporary (1945-)");
        bisacMap.put("ARC006000","ARCHITECTURE / Individual Architects & Firms / General");
        bisacMap.put("ARC006010","ARCHITECTURE / Individual Architects & Firms / Essays");
        bisacMap.put("ARC006020","ARCHITECTURE / Individual Architects & Firms / Monographs");
        bisacMap.put("ARC007000","ARCHITECTURE / Interior Design / General");
        bisacMap.put("ARC007010","ARCHITECTURE / Interior Design / Lighting");
        bisacMap.put("ARC008000","ARCHITECTURE / Landscape");
        bisacMap.put("ARC009000","ARCHITECTURE / Methods & Materials");
        bisacMap.put("ARC015000","ARCHITECTURE / Professional Practice");
        bisacMap.put("ARC017000","ARCHITECTURE / Project Management");
        bisacMap.put("ARC012000","ARCHITECTURE / Reference");
        bisacMap.put("ARC020000","ARCHITECTURE / Regional");
        bisacMap.put("ARC021000","ARCHITECTURE / Security Design");
        bisacMap.put("ARC013000","ARCHITECTURE / Study & Teaching");
        bisacMap.put("ARC018000","ARCHITECTURE / Sustainability & Green Design");
        bisacMap.put("ARC010000","ARCHITECTURE / Urban & Land Use Planning");
        bisacMap.put("ART000000","ART / General");
        bisacMap.put("ART015010","ART / African");
        bisacMap.put("ART015020","ART / American / General");
        bisacMap.put("ART038000","ART / American / African American");
        bisacMap.put("ART039000","ART / American / Asian American");
        bisacMap.put("ART040000","ART / American / Hispanic American");
        bisacMap.put("ART054000","ART / Annuals");
        bisacMap.put("ART037000","ART / Art & Politics");
        bisacMap.put("ART019000","ART / Asian");
        bisacMap.put("ART042000","ART / Australian & Oceanian");
        bisacMap.put("ART055000","ART / Body Art & Tattooing");
        bisacMap.put("ART043000","ART / Business Aspects");
        bisacMap.put("ART015040","ART / Canadian");
        bisacMap.put("ART044000","ART / Caribbean & Latin American");
        bisacMap.put("ART045000","ART / Ceramics");
        bisacMap.put("ART006000","ART / Collections, Catalogs, Exhibitions / General");
        bisacMap.put("ART006010","ART / Collections, Catalogs, Exhibitions / Group Shows");
        bisacMap.put("ART006020","ART / Collections, Catalogs, Exhibitions / Permanent Collections");
        bisacMap.put("ART007000","ART / Color Theory");
        bisacMap.put("ART008000","ART / Conceptual");
        bisacMap.put("ART056000","ART / Conservation & Preservation");
        bisacMap.put("ART009000","ART / Criticism & Theory");
        bisacMap.put("ART046000","ART / Digital");
        bisacMap.put("ART015030","ART / European");
        bisacMap.put("ART057000","ART / Film & Video");
        bisacMap.put("ART013000","ART / Folk & Outsider Art");
        bisacMap.put("ART058000","ART / Graffiti & Street Art");
        bisacMap.put("ART015000","ART / History / General");
        bisacMap.put("ART015050","ART / History / Prehistoric & Primitive");
        bisacMap.put("ART015060","ART / History / Ancient & Classical");
        bisacMap.put("ART015070","ART / History / Medieval");
        bisacMap.put("ART015080","ART / History / Renaissance");
        bisacMap.put("ART015090","ART / History / Baroque & Rococo");
        bisacMap.put("ART015120","ART / History / Romanticism");
        bisacMap.put("ART015100","ART / History / Modern (late 19th Century to 1945)");
        bisacMap.put("ART015110","ART / History / Contemporary (1945-)");
        bisacMap.put("ART016000","ART / Individual Artists / General");
        bisacMap.put("ART016010","ART / Individual Artists / Artists' Books");
        bisacMap.put("ART016020","ART / Individual Artists / Essays");
        bisacMap.put("ART016030","ART / Individual Artists / Monographs");
        bisacMap.put("ART047000","ART / Middle Eastern");
        bisacMap.put("ART017000","ART / Mixed Media");
        bisacMap.put("ART059000","ART / Museum Studies");
        bisacMap.put("ART041000","ART / Native American");
        bisacMap.put("ART060000","ART / Performance");
        bisacMap.put("ART023000","ART / Popular Culture");
        bisacMap.put("ART048000","ART / Prints");
        bisacMap.put("ART025000","ART / Reference");
        bisacMap.put("ART049000","ART / Russian & Former Soviet Union");
        bisacMap.put("ART026000","ART / Sculpture & Installation");
        bisacMap.put("ART027000","ART / Study & Teaching");
        bisacMap.put("ART050000","ART / Subjects & Themes / General");
        bisacMap.put("ART050050","ART / Subjects & Themes / Erotica");
        bisacMap.put("ART050010","ART / Subjects & Themes / Human Figure");
        bisacMap.put("ART050020","ART / Subjects & Themes / Landscapes & Seascapes");
        bisacMap.put("ART050030","ART / Subjects & Themes / Plants & Animals");
        bisacMap.put("ART050040","ART / Subjects & Themes / Portraits");
        bisacMap.put("COM060100","COMPUTERS / Web / Blogs");
        bisacMap.put("ART035000","ART / Subjects & Themes / Religious");
        bisacMap.put("ART028000","ART / Techniques / General");
        bisacMap.put("ART031000","ART / Techniques / Acrylic Painting");
        bisacMap.put("ART002000","ART / Techniques / Airbrush");
        bisacMap.put("ART003000","ART / Techniques / Calligraphy");
        bisacMap.put("ART004000","ART / Techniques / Cartooning");
        bisacMap.put("ART051000","ART / Techniques / Color");
        bisacMap.put("ART010000","ART / Techniques / Drawing");
        bisacMap.put("ART052000","ART / Techniques / Life Drawing");
        bisacMap.put("ART018000","ART / Techniques / Oil Painting");
        bisacMap.put("ART020000","ART / Techniques / Painting");
        bisacMap.put("ART021000","ART / Techniques / Pastel Drawing");
        bisacMap.put("ART033000","ART / Techniques / Pen & Ink Drawing");
        bisacMap.put("ART034000","ART / Techniques / Pencil Drawing");
        bisacMap.put("ART024000","ART / Techniques / Printmaking");
        bisacMap.put("ART053000","ART / Techniques / Sculpting");
        bisacMap.put("ART029000","ART / Techniques / Watercolor Painting");
        bisacMap.put("BIB000000","BIBLES / General");
        bisacMap.put("BIB001000","BIBLES / Christian Standard Bible / General");
        bisacMap.put("BIB001010","BIBLES / Christian Standard Bible / Children");
        bisacMap.put("BIB001020","BIBLES / Christian Standard Bible / Devotional");
        bisacMap.put("BIB001030","BIBLES / Christian Standard Bible / New Testament & Portions");
        bisacMap.put("BIB001040","BIBLES / Christian Standard Bible / Reference");
        bisacMap.put("BIB001050","BIBLES / Christian Standard Bible / Study");
        bisacMap.put("BIB001060","BIBLES / Christian Standard Bible / Text");
        bisacMap.put("BIB001070","BIBLES / Christian Standard Bible / Youth & Teen");
        bisacMap.put("BIB022000","BIBLES / Common English Bible / General");
        bisacMap.put("BIB022010","BIBLES / Common English Bible / Children");
        bisacMap.put("BIB022020","BIBLES / Common English Bible / Devotional");
        bisacMap.put("BIB022030","BIBLES / Common English Bible / New Testament & Portions");
        bisacMap.put("BIB022040","BIBLES / Common English Bible / Reference");
        bisacMap.put("BIB022050","BIBLES / Common English Bible / Study");
        bisacMap.put("BIB022060","BIBLES / Common English Bible / Text");
        bisacMap.put("BIB022070","BIBLES / Common English Bible / Youth & Teen");
        bisacMap.put("BIB002000","BIBLES / Contemporary English Version / General");
        bisacMap.put("BIB002010","BIBLES / Contemporary English Version / Children");
        bisacMap.put("BIB002020","BIBLES / Contemporary English Version / Devotional");
        bisacMap.put("BIB002030","BIBLES / Contemporary English Version / New Testament & Portions");
        bisacMap.put("BIB002040","BIBLES / Contemporary English Version / Reference");
        bisacMap.put("BIB002050","BIBLES / Contemporary English Version / Study");
        bisacMap.put("BIB002060","BIBLES / Contemporary English Version / Text");
        bisacMap.put("BIB002070","BIBLES / Contemporary English Version / Youth & Teen");
        bisacMap.put("BIB003000","BIBLES / English Standard Version / General");
        bisacMap.put("BIB003010","BIBLES / English Standard Version / Children");
        bisacMap.put("BIB003020","BIBLES / English Standard Version / Devotional");
        bisacMap.put("BIB003030","BIBLES / English Standard Version / New Testament & Portions");
        bisacMap.put("BIB003040","BIBLES / English Standard Version / Reference");
        bisacMap.put("BIB003050","BIBLES / English Standard Version / Study");
        bisacMap.put("BIB003060","BIBLES / English Standard Version / Text");
        bisacMap.put("BIB003070","BIBLES / English Standard Version / Youth & Teen");
        bisacMap.put("BIB004000","BIBLES / God's Word / General");
        bisacMap.put("BIB004010","BIBLES / God's Word / Children");
        bisacMap.put("BIB004020","BIBLES / God's Word / Devotional");
        bisacMap.put("BIB004030","BIBLES / God's Word / New Testament & Portions");
        bisacMap.put("BIB004040","BIBLES / God's Word / Reference");
        bisacMap.put("BIB004050","BIBLES / God's Word / Study");
        bisacMap.put("BIB004060","BIBLES / God's Word / Text");
        bisacMap.put("BIB004070","BIBLES / God's Word / Youth & Teen");
        bisacMap.put("BIB005000","BIBLES / International Children's Bible / General");
        bisacMap.put("BIB005010","BIBLES / International Children's Bible / Children");
        bisacMap.put("BIB005020","BIBLES / International Children's Bible / Devotional");
        bisacMap.put("BIB005030","BIBLES / International Children's Bible / New Testament & Portions");
        bisacMap.put("BIB005040","BIBLES / International Children's Bible / Reference");
        bisacMap.put("BIB005050","BIBLES / International Children's Bible / Study");
        bisacMap.put("BIB005060","BIBLES / International Children's Bible / Text");
        bisacMap.put("BIB005070","BIBLES / International Children's Bible / Youth & Teen");
        bisacMap.put("BIB006000","BIBLES / King James Version / General");
        bisacMap.put("BIB006010","BIBLES / King James Version / Children");
        bisacMap.put("BIB006020","BIBLES / King James Version / Devotional");
        bisacMap.put("BIB006030","BIBLES / King James Version / New Testament & Portions");
        bisacMap.put("BIB006040","BIBLES / King James Version / Reference");
        bisacMap.put("BIB006050","BIBLES / King James Version / Study");
        bisacMap.put("BIB006060","BIBLES / King James Version / Text");
        bisacMap.put("BIB006070","BIBLES / King James Version / Youth & Teen");
        bisacMap.put("BIB007000","BIBLES / La Biblia de las Americas / General");
        bisacMap.put("BIB007010","BIBLES / La Biblia de las Americas / Children");
        bisacMap.put("BIB007020","BIBLES / La Biblia de las Americas / Devotional");
        bisacMap.put("BIB007030","BIBLES / La Biblia de las Americas / New Testament & Portions");
        bisacMap.put("BIB007040","BIBLES / La Biblia de las Americas / Reference");
        bisacMap.put("BIB007050","BIBLES / La Biblia de las Americas / Study");
        bisacMap.put("BIB007060","BIBLES / La Biblia de las Americas / Text");
        bisacMap.put("BIB007070","BIBLES / La Biblia de las Americas / Youth & Teen");
        bisacMap.put("BIB008000","BIBLES / Multiple Translations / General");
        bisacMap.put("BIB008010","BIBLES / Multiple Translations / Children");
        bisacMap.put("BIB008020","BIBLES / Multiple Translations / Devotional");
        bisacMap.put("BIB008030","BIBLES / Multiple Translations / New Testament & Portions");
        bisacMap.put("BIB008040","BIBLES / Multiple Translations / Reference");
        bisacMap.put("BIB008050","BIBLES / Multiple Translations / Study");
        bisacMap.put("BIB008060","BIBLES / Multiple Translations / Text");
        bisacMap.put("BIB008070","BIBLES / Multiple Translations / Youth & Teen");
        bisacMap.put("BIB009000","BIBLES / New American Bible / General");
        bisacMap.put("BIB009010","BIBLES / New American Bible / Children");
        bisacMap.put("BIB009020","BIBLES / New American Bible / Devotional");
        bisacMap.put("BIB009030","BIBLES / New American Bible / New Testament & Portions");
        bisacMap.put("BIB009040","BIBLES / New American Bible / Reference");
        bisacMap.put("BIB009050","BIBLES / New American Bible / Study");
        bisacMap.put("BIB009060","BIBLES / New American Bible / Text");
        bisacMap.put("BIB009070","BIBLES / New American Bible / Youth & Teen");
        bisacMap.put("BIB010000","BIBLES / New American Standard Bible / General");
        bisacMap.put("BIB010010","BIBLES / New American Standard Bible / Children");
        bisacMap.put("BIB010020","BIBLES / New American Standard Bible / Devotional");
        bisacMap.put("BIB010030","BIBLES / New American Standard Bible / New Testament & Portions");
        bisacMap.put("BIB010040","BIBLES / New American Standard Bible / Reference");
        bisacMap.put("BIB010050","BIBLES / New American Standard Bible / Study");
        bisacMap.put("BIB010060","BIBLES / New American Standard Bible / Text");
        bisacMap.put("BIB010070","BIBLES / New American Standard Bible / Youth & Teen");
        bisacMap.put("BIB011000","BIBLES / New Century Version / General");
        bisacMap.put("BIB011010","BIBLES / New Century Version / Children");
        bisacMap.put("BIB011020","BIBLES / New Century Version / Devotional");
        bisacMap.put("BIB011030","BIBLES / New Century Version / New Testament & Portions");
        bisacMap.put("BIB011040","BIBLES / New Century Version / Reference");
        bisacMap.put("BIB011050","BIBLES / New Century Version / Study");
        bisacMap.put("BIB011060","BIBLES / New Century Version / Text");
        bisacMap.put("BIB011070","BIBLES / New Century Version / Youth & Teen");
        bisacMap.put("BIB012000","BIBLES / New International Reader's Version / General");
        bisacMap.put("BIB012010","BIBLES / New International Reader's Version / Children");
        bisacMap.put("BIB012020","BIBLES / New International Reader's Version / Devotional");
        bisacMap.put("BIB012030","BIBLES / New International Reader's Version / New Testament & Portions");
        bisacMap.put("BIB012040","BIBLES / New International Reader's Version / Reference");
        bisacMap.put("BIB012050","BIBLES / New International Reader's Version / Study");
        bisacMap.put("BIB012060","BIBLES / New International Reader's Version / Text");
        bisacMap.put("BIB012070","BIBLES / New International Reader's Version / Youth & Teen");
        bisacMap.put("BIB013000","BIBLES / New International Version / General");
        bisacMap.put("BIB013010","BIBLES / New International Version / Children");
        bisacMap.put("BIB013020","BIBLES / New International Version / Devotional");
        bisacMap.put("BIB013030","BIBLES / New International Version / New Testament & Portions");
        bisacMap.put("BIB013040","BIBLES / New International Version / Reference");
        bisacMap.put("BIB013050","BIBLES / New International Version / Study");
        bisacMap.put("BIB013060","BIBLES / New International Version / Text");
        bisacMap.put("BIB013070","BIBLES / New International Version / Youth & Teen");
        bisacMap.put("BIB014000","BIBLES / New King James Version / General");
        bisacMap.put("BIB014010","BIBLES / New King James Version / Children");
        bisacMap.put("BIB014020","BIBLES / New King James Version / Devotional");
        bisacMap.put("BIB014030","BIBLES / New King James Version / New Testament & Portions");
        bisacMap.put("BIB014040","BIBLES / New King James Version / Reference");
        bisacMap.put("BIB014050","BIBLES / New King James Version / Study");
        bisacMap.put("BIB014060","BIBLES / New King James Version / Text");
        bisacMap.put("BIB014070","BIBLES / New King James Version / Youth & Teen");
        bisacMap.put("BIB015000","BIBLES / New Living Translation / General");
        bisacMap.put("BIB015010","BIBLES / New Living Translation / Children");
        bisacMap.put("BIB015020","BIBLES / New Living Translation / Devotional");
        bisacMap.put("BIB015030","BIBLES / New Living Translation / New Testament & Portions");
        bisacMap.put("BIB015040","BIBLES / New Living Translation / Reference");
        bisacMap.put("BIB015050","BIBLES / New Living Translation / Study");
        bisacMap.put("BIB015060","BIBLES / New Living Translation / Text");
        bisacMap.put("BIB015070","BIBLES / New Living Translation / Youth & Teen");
        bisacMap.put("BIB016000","BIBLES / New Revised Standard Version / General");
        bisacMap.put("BIB016010","BIBLES / New Revised Standard Version / Children");
        bisacMap.put("BIB016020","BIBLES / New Revised Standard Version / Devotional");
        bisacMap.put("BIB016030","BIBLES / New Revised Standard Version / New Testament & Portions");
        bisacMap.put("BIB016040","BIBLES / New Revised Standard Version / Reference");
        bisacMap.put("BIB016050","BIBLES / New Revised Standard Version / Study");
        bisacMap.put("BIB016060","BIBLES / New Revised Standard Version / Text");
        bisacMap.put("BIB016070","BIBLES / New Revised Standard Version / Youth & Teen");
        bisacMap.put("BIB017000","BIBLES / Nueva Version International / General");
        bisacMap.put("BIB017010","BIBLES / Nueva Version International / Children");
        bisacMap.put("BIB017020","BIBLES / Nueva Version International / Devotional");
        bisacMap.put("BIB017030","BIBLES / Nueva Version International / New Testament & Portions");
        bisacMap.put("BIB017040","BIBLES / Nueva Version International / Reference");
        bisacMap.put("BIB017050","BIBLES / Nueva Version International / Study");
        bisacMap.put("BIB017060","BIBLES / Nueva Version International / Text");
        bisacMap.put("BIB017070","BIBLES / Nueva Version International / Youth & Teen");
        bisacMap.put("BIB018000","BIBLES / Other Translations / General");
        bisacMap.put("BIB018010","BIBLES / Other Translations / Children");
        bisacMap.put("BIB018020","BIBLES / Other Translations / Devotional");
        bisacMap.put("BIB018030","BIBLES / Other Translations / New Testament & Portions");
        bisacMap.put("BIB018040","BIBLES / Other Translations / Reference");
        bisacMap.put("BIB018050","BIBLES / Other Translations / Study");
        bisacMap.put("BIB018060","BIBLES / Other Translations / Text");
        bisacMap.put("BIB018070","BIBLES / Other Translations / Youth & Teen");
        bisacMap.put("BIB019000","BIBLES / Reina Valera / General");
        bisacMap.put("BIB019010","BIBLES / Reina Valera / Children");
        bisacMap.put("BIB019020","BIBLES / Reina Valera / Devotional");
        bisacMap.put("BIB019030","BIBLES / Reina Valera / New Testament & Portions");
        bisacMap.put("BIB019040","BIBLES / Reina Valera / Reference");
        bisacMap.put("BIB019050","BIBLES / Reina Valera / Study");
        bisacMap.put("BIB019060","BIBLES / Reina Valera / Text");
        bisacMap.put("BIB019070","BIBLES / Reina Valera / Youth & Teen");
        bisacMap.put("BIB020000","BIBLES / The Message / General");
        bisacMap.put("BIB020010","BIBLES / The Message / Children");
        bisacMap.put("BIB020020","BIBLES / The Message / Devotional");
        bisacMap.put("BIB020030","BIBLES / The Message / New Testament & Portions");
        bisacMap.put("BIB020040","BIBLES / The Message / Reference");
        bisacMap.put("BIB020050","BIBLES / The Message / Study");
        bisacMap.put("BIB020060","BIBLES / The Message / Text");
        bisacMap.put("BIB020070","BIBLES / The Message / Youth & Teen");
        bisacMap.put("BIB021000","BIBLES / Today's New International Version / General");
        bisacMap.put("BIB021010","BIBLES / Today's New International Version / Children");
        bisacMap.put("BIB021020","BIBLES / Today's New International Version / Devotional");
        bisacMap.put("BIB021030","BIBLES / Today's New International Version / New Testament & Portions");
        bisacMap.put("BIB021040","BIBLES / Today's New International Version / Reference");
        bisacMap.put("BIB021050","BIBLES / Today's New International Version / Study");
        bisacMap.put("BIB021060","BIBLES / Today's New International Version / Text");
        bisacMap.put("BIB021070","BIBLES / Today's New International Version / Youth & Teen");
        bisacMap.put("BIO000000","BIOGRAPHY & AUTOBIOGRAPHY / General");
        bisacMap.put("BIO023000","BIOGRAPHY & AUTOBIOGRAPHY / Adventurers & Explorers");
        bisacMap.put("BIO001000","BIOGRAPHY & AUTOBIOGRAPHY / Artists, Architects, Photographers");
        bisacMap.put("BIO003000","BIOGRAPHY & AUTOBIOGRAPHY / Business");
        bisacMap.put("BIO004000","BIOGRAPHY & AUTOBIOGRAPHY / Composers & Musicians");
        bisacMap.put("BIO024000","BIOGRAPHY & AUTOBIOGRAPHY / Criminals & Outlaws");
        bisacMap.put("BIO029000","BIOGRAPHY & AUTOBIOGRAPHY / Culinary");
        bisacMap.put("BIO002000","BIOGRAPHY & AUTOBIOGRAPHY / Cultural Heritage");
        bisacMap.put("BIO025000","BIOGRAPHY & AUTOBIOGRAPHY / Editors, Journalists, Publishers");
        bisacMap.put("BIO019000","BIOGRAPHY & AUTOBIOGRAPHY / Educators");
        bisacMap.put("BIO005000","BIOGRAPHY & AUTOBIOGRAPHY / Entertainment & Performing Arts");
        bisacMap.put("BIO030000","BIOGRAPHY & AUTOBIOGRAPHY / Environmentalists & Naturalists");
        bisacMap.put("BIO031000","BIOGRAPHY & AUTOBIOGRAPHY / Gay & Lesbian");
        bisacMap.put("BIO006000","BIOGRAPHY & AUTOBIOGRAPHY / Historical");
        bisacMap.put("BIO027000","BIOGRAPHY & AUTOBIOGRAPHY / Law Enforcement");
        bisacMap.put("BIO020000","BIOGRAPHY & AUTOBIOGRAPHY / Lawyers & Judges");
        bisacMap.put("BIO007000","BIOGRAPHY & AUTOBIOGRAPHY / Literary");
        bisacMap.put("BIO017000","BIOGRAPHY & AUTOBIOGRAPHY / Medical");
        bisacMap.put("BIO008000","BIOGRAPHY & AUTOBIOGRAPHY / Military");
        bisacMap.put("BIO028000","BIOGRAPHY & AUTOBIOGRAPHY / Native Americans");
        bisacMap.put("BIO026000","BIOGRAPHY & AUTOBIOGRAPHY / Personal Memoirs");
        bisacMap.put("BIO009000","BIOGRAPHY & AUTOBIOGRAPHY / Philosophers");
        bisacMap.put("BIO010000","BIOGRAPHY & AUTOBIOGRAPHY / Political");
        bisacMap.put("BIO011000","BIOGRAPHY & AUTOBIOGRAPHY / Presidents & Heads of State");
        bisacMap.put("BIO012000","BIOGRAPHY & AUTOBIOGRAPHY / Reference");
        bisacMap.put("BIO018000","BIOGRAPHY & AUTOBIOGRAPHY / Religious");
        bisacMap.put("BIO013000","BIOGRAPHY & AUTOBIOGRAPHY / Rich & Famous");
        bisacMap.put("BIO014000","BIOGRAPHY & AUTOBIOGRAPHY / Royalty");
        bisacMap.put("BIO015000","BIOGRAPHY & AUTOBIOGRAPHY / Science & Technology");
        bisacMap.put("BIO032000","BIOGRAPHY & AUTOBIOGRAPHY / Social Activists");
        bisacMap.put("BIO021000","BIOGRAPHY & AUTOBIOGRAPHY / Social Scientists & Psychologists");
        bisacMap.put("BIO016000","BIOGRAPHY & AUTOBIOGRAPHY / Sports");
        bisacMap.put("BIO022000","BIOGRAPHY & AUTOBIOGRAPHY / Women");
        bisacMap.put("OCC000000","BODY, MIND & SPIRIT / General");
        bisacMap.put("OCC022000","BODY, MIND & SPIRIT / Afterlife & Reincarnation");
        bisacMap.put("OCC031000","BODY, MIND & SPIRIT / Ancient Mysteries & Controversial Knowledge");
        bisacMap.put("OCC032000","BODY, MIND & SPIRIT / Angels & Spirit Guides");
        bisacMap.put("OCC002000","BODY, MIND & SPIRIT / Astrology / General");
        bisacMap.put("OCC030000","BODY, MIND & SPIRIT / Astrology / Eastern");
        bisacMap.put("OCC009000","BODY, MIND & SPIRIT / Astrology / Horoscopes");
        bisacMap.put("OCC003000","BODY, MIND & SPIRIT / Channeling & Mediumship");
        bisacMap.put("OCC004000","BODY, MIND & SPIRIT / Crystals");
        bisacMap.put("OCC005000","BODY, MIND & SPIRIT / Divination / General");
        bisacMap.put("OCC008000","BODY, MIND & SPIRIT / Divination / Fortune Telling");
        bisacMap.put("OCC017000","BODY, MIND & SPIRIT / Divination / Palmistry");
        bisacMap.put("OCC024000","BODY, MIND & SPIRIT / Divination / Tarot");
        bisacMap.put("OCC006000","BODY, MIND & SPIRIT / Dreams");
        bisacMap.put("OCC039000","BODY, MIND & SPIRIT / Entheogens & Visionary Substances");
        bisacMap.put("OCC037000","BODY, MIND & SPIRIT / Feng Shui");
        bisacMap.put("OCC033000","BODY, MIND & SPIRIT / Gaia & Earth Energies");
        bisacMap.put("OCC011000","BODY, MIND & SPIRIT / Healing / General");
        bisacMap.put("OCC011010","BODY, MIND & SPIRIT / Healing / Energy (Qigong, Reiki, Polarity)");
        bisacMap.put("OCC011020","BODY, MIND & SPIRIT / Healing / Prayer & Spiritual");
        bisacMap.put("OCC040000","BODY, MIND & SPIRIT / Hermetism & Rosicrucianism");
        bisacMap.put("OCC038000","BODY, MIND & SPIRIT / I Ching");
        bisacMap.put("OCC019000","BODY, MIND & SPIRIT / Inspiration & Personal Growth");
        bisacMap.put("OCC028000","BODY, MIND & SPIRIT / Magick Studies");
        bisacMap.put("OCC010000","BODY, MIND & SPIRIT / Meditation");
        bisacMap.put("OCC012000","BODY, MIND & SPIRIT / Mysticism");
        bisacMap.put("OCC014000","BODY, MIND & SPIRIT / New Thought");
        bisacMap.put("OCC015000","BODY, MIND & SPIRIT / Numerology");
        bisacMap.put("OCC016000","BODY, MIND & SPIRIT / Occultism");
        bisacMap.put("OCC018000","BODY, MIND & SPIRIT / Parapsychology / General");
        bisacMap.put("OCC007000","BODY, MIND & SPIRIT / Parapsychology / ESP (Clairvoyance, Precognition, Telepathy)");
        bisacMap.put("OCC034000","BODY, MIND & SPIRIT / Parapsychology / Near-Death Experience");
        bisacMap.put("OCC035000","BODY, MIND & SPIRIT / Parapsychology / Out-of-Body Experience");
        bisacMap.put("OCC020000","BODY, MIND & SPIRIT / Prophecy");
        bisacMap.put("OCC021000","BODY, MIND & SPIRIT / Reference");
        bisacMap.put("OCC041000","BODY, MIND & SPIRIT / Sacred Sexuality");
        bisacMap.put("OCC027000","BODY, MIND & SPIRIT / Spiritualism");
        bisacMap.put("OCC036000","BODY, MIND & SPIRIT / Spirituality / General");
        bisacMap.put("OCC036010","BODY, MIND & SPIRIT / Spirituality / Celtic");
        bisacMap.put("OCC036020","BODY, MIND & SPIRIT / Spirituality / Paganism & Neo-Paganism");
        bisacMap.put("OCC036050","BODY, MIND & SPIRIT / Spirituality / Divine Mother, The Goddess, Quan Yin");
        bisacMap.put("OCC036030","BODY, MIND & SPIRIT / Spirituality / Shamanism");
        bisacMap.put("OCC023000","BODY, MIND & SPIRIT / Supernatural");
        bisacMap.put("OCC025000","BODY, MIND & SPIRIT / UFOs & Extraterrestrials");
        bisacMap.put("OCC029000","BODY, MIND & SPIRIT / Unexplained Phenomena");
        bisacMap.put("OCC026000","BODY, MIND & SPIRIT / Witchcraft (see also RELIGION / Wicca)");
        bisacMap.put("BUS000000","BUSINESS & ECONOMICS / General");
        bisacMap.put("BUS001000","BUSINESS & ECONOMICS / Accounting/General");
        bisacMap.put("BUS001010","BUSINESS & ECONOMICS / Accounting / Financial");
        bisacMap.put("BUS001020","BUSINESS & ECONOMICS / Accounting / Governmental");
        bisacMap.put("BUS001040","BUSINESS & ECONOMICS / Accounting / Managerial");
        bisacMap.put("BUS001050","BUSINESS & ECONOMICS / Accounting / Standards (GAAP, IFRS, etc.)");
        bisacMap.put("BUS002000","BUSINESS & ECONOMICS / Advertising & Promotion");
        bisacMap.put("BUS003000","BUSINESS & ECONOMICS / Auditing");
        bisacMap.put("BUS004000","BUSINESS & ECONOMICS / Banks & Banking");
        bisacMap.put("BUS005000","BUSINESS & ECONOMICS / Bookkeeping");
        bisacMap.put("BUS006000","BUSINESS & ECONOMICS / Budgeting");
        bisacMap.put("BUS007000","BUSINESS & ECONOMICS / Business Communication / General");
        bisacMap.put("BUS007010","BUSINESS & ECONOMICS / Business Communication / Meetings & Presentations");
        bisacMap.put("BUS008000","BUSINESS & ECONOMICS / Business Ethics");
        bisacMap.put("BUS009000","BUSINESS & ECONOMICS / Business Etiquette");
        bisacMap.put("BUS010000","BUSINESS & ECONOMICS / Business Law");
        bisacMap.put("BUS091000","BUSINESS & ECONOMICS / Business Mathematics");
        bisacMap.put("BUS011000","BUSINESS & ECONOMICS / Business Writing");
        bisacMap.put("BUS012000","BUSINESS & ECONOMICS / Careers / General");
        bisacMap.put("BUS012010","BUSINESS & ECONOMICS / Careers / Internships");
        bisacMap.put("BUS037020","BUSINESS & ECONOMICS / Careers / Job Hunting");
        bisacMap.put("BUS056030","BUSINESS & ECONOMICS / Careers / Resumes");
        bisacMap.put("BUS073000","BUSINESS & ECONOMICS / Commerce");
        bisacMap.put("BUS013000","BUSINESS & ECONOMICS / Commercial Policy");
        bisacMap.put("BUS110000","BUSINESS & ECONOMICS / Conflict Resolution & Mediation");
        bisacMap.put("BUS075000","BUSINESS & ECONOMICS / Consulting");
        bisacMap.put("BUS016000","BUSINESS & ECONOMICS / Consumer Behavior");
        bisacMap.put("BUS077000","BUSINESS & ECONOMICS / Corporate & Business History");
        bisacMap.put("BUS017000","BUSINESS & ECONOMICS / Corporate Finance");
        bisacMap.put("BUS104000","BUSINESS & ECONOMICS / Corporate Governance");
        bisacMap.put("BUS018000","BUSINESS & ECONOMICS / Customer Relations");
        bisacMap.put("BUS019000","BUSINESS & ECONOMICS / Decision-Making & Problem Solving");
        bisacMap.put("BUS092000","BUSINESS & ECONOMICS / Development / General");
        bisacMap.put("BUS020000","BUSINESS & ECONOMICS / Development / Business Development");
        bisacMap.put("BUS068000","BUSINESS & ECONOMICS / Development / Economic Development");
        bisacMap.put("BUS072000","BUSINESS & ECONOMICS / Development / Sustainable Development");
        bisacMap.put("BUS078000","BUSINESS & ECONOMICS / Distribution");
        bisacMap.put("BUS090000","BUSINESS & ECONOMICS / E-Commerce / General (see also COMPUTERS / Electronic Commerce)");
        bisacMap.put("BUS090040","BUSINESS & ECONOMICS / E-Commerce / Auctions & Small Business");
        bisacMap.put("BUS090010","BUSINESS & ECONOMICS / E-Commerce / Internet Marketing");
        bisacMap.put("BUS090030","BUSINESS & ECONOMICS / E-Commerce / Online Trading");
        bisacMap.put("BUS021000","BUSINESS & ECONOMICS / Econometrics");
        bisacMap.put("BUS022000","BUSINESS & ECONOMICS / Economic Conditions");
        bisacMap.put("BUS023000","BUSINESS & ECONOMICS / Economic History");
        bisacMap.put("BUS069000","BUSINESS & ECONOMICS / Economics / General");
        bisacMap.put("BUS069010","BUSINESS & ECONOMICS / Economics / Comparative");
        bisacMap.put("BUS039000","BUSINESS & ECONOMICS / Economics / Macroeconomics");
        bisacMap.put("BUS044000","BUSINESS & ECONOMICS / Economics / Microeconomics");
        bisacMap.put("BUS069030","BUSINESS & ECONOMICS / Economics / Theory");
        bisacMap.put("BUS024000","BUSINESS & ECONOMICS / Education");
        bisacMap.put("BUS025000","BUSINESS & ECONOMICS / Entrepreneurship");
        bisacMap.put("BUS099000","BUSINESS & ECONOMICS / Environmental Economics");
        bisacMap.put("BUS026000","BUSINESS & ECONOMICS / Exports & Imports");
        bisacMap.put("BUS093000","BUSINESS & ECONOMICS / Facility Management");
        bisacMap.put("BUS027000","BUSINESS & ECONOMICS / Finance");
        bisacMap.put("BUS086000","BUSINESS & ECONOMICS / Forecasting");
        bisacMap.put("BUS028000","BUSINESS & ECONOMICS / Foreign Exchange");
        bisacMap.put("BUS105000","BUSINESS & ECONOMICS / Franchises");
        bisacMap.put("BUS029000","BUSINESS & ECONOMICS / Free Enterprise");
        bisacMap.put("BUS079000","BUSINESS & ECONOMICS / Government & Business");
        bisacMap.put("BUS094000","BUSINESS & ECONOMICS / Green Business");
        bisacMap.put("BUS080000","BUSINESS & ECONOMICS / Home-Based Businesses");
        bisacMap.put("BUS030000","BUSINESS & ECONOMICS / Human Resources & Personnel Management");
        bisacMap.put("BUS082000","BUSINESS & ECONOMICS / Industrial Management");
        bisacMap.put("BUS070000","BUSINESS & ECONOMICS / Industries / General");
        bisacMap.put("BUS070010","BUSINESS & ECONOMICS / Industries / Agribusiness");
        bisacMap.put("BUS070020","BUSINESS & ECONOMICS / Industries / Automobile Industry");
        bisacMap.put("BUS070030","BUSINESS & ECONOMICS / Industries / Computers & Information Technology");
        bisacMap.put("BUS070040","BUSINESS & ECONOMICS / Industries / Energy");
        bisacMap.put("BUS070110","BUSINESS & ECONOMICS / Industries / Entertainment");
        bisacMap.put("BUS070090","BUSINESS & ECONOMICS / Industries / Fashion & Textile Industry");
        bisacMap.put("BUS070140","BUSINESS & ECONOMICS / Industries / Financial Services");
        bisacMap.put("BUS070120","BUSINESS & ECONOMICS / Industries / Food Industry");
        bisacMap.put("BUS081000","BUSINESS & ECONOMICS / Industries / Hospitality, Travel & Tourism");
        bisacMap.put("BUS070050","BUSINESS & ECONOMICS / Industries / Manufacturing");
        bisacMap.put("BUS070060","BUSINESS & ECONOMICS / Industries / Media & Communications");
        bisacMap.put("BUS070150","BUSINESS & ECONOMICS / Industries / Natural Resource Extraction");
        bisacMap.put("BUS070070","BUSINESS & ECONOMICS / Industries / Park & Recreation Management");
        bisacMap.put("BUS070130","BUSINESS & ECONOMICS / Industries / Pharmaceutical & Biotechnology");
        bisacMap.put("BUS057000","BUSINESS & ECONOMICS / Industries / Retailing");
        bisacMap.put("BUS070080","BUSINESS & ECONOMICS / Industries / Service");
        bisacMap.put("BUS070100","BUSINESS & ECONOMICS / Industries / Transportation");
        bisacMap.put("BUS031000","BUSINESS & ECONOMICS / Inflation");
        bisacMap.put("BUS083000","BUSINESS & ECONOMICS / Information Management");
        bisacMap.put("BUS032000","BUSINESS & ECONOMICS / Infrastructure");
        bisacMap.put("BUS033000","BUSINESS & ECONOMICS / Insurance / General");
        bisacMap.put("BUS033010","BUSINESS & ECONOMICS / Insurance / Automobile");
        bisacMap.put("BUS033020","BUSINESS & ECONOMICS / Insurance / Casualty");
        bisacMap.put("BUS033040","BUSINESS & ECONOMICS / Insurance / Health");
        bisacMap.put("BUS033050","BUSINESS & ECONOMICS / Insurance / Liability");
        bisacMap.put("BUS033060","BUSINESS & ECONOMICS / Insurance / Life");
        bisacMap.put("BUS033080","BUSINESS & ECONOMICS / Insurance / Property");
        bisacMap.put("BUS033070","BUSINESS & ECONOMICS / Insurance / Risk Assessment & Management");
        bisacMap.put("BUS034000","BUSINESS & ECONOMICS / Interest");
        bisacMap.put("BUS035000","BUSINESS & ECONOMICS / International / General");
        bisacMap.put("BUS001030","BUSINESS & ECONOMICS / International / Accounting");
        bisacMap.put("BUS069020","BUSINESS & ECONOMICS / International / Economics");
        bisacMap.put("BUS043030","BUSINESS & ECONOMICS / International / Marketing");
        bisacMap.put("BUS064020","BUSINESS & ECONOMICS / International / Taxation");
        bisacMap.put("BUS036000","BUSINESS & ECONOMICS / Investments & Securities / General");
        bisacMap.put("BUS036010","BUSINESS & ECONOMICS / Investments & Securities / Bonds");
        bisacMap.put("BUS014000","BUSINESS & ECONOMICS / Investments & Securities / Commodities");
        bisacMap.put("BUS036020","BUSINESS & ECONOMICS / Investments & Securities / Futures");
        bisacMap.put("BUS036030","BUSINESS & ECONOMICS / Investments & Securities / Mutual Funds");
        bisacMap.put("BUS036040","BUSINESS & ECONOMICS / Investments & Securities / Options");
        bisacMap.put("BUS036050","BUSINESS & ECONOMICS / Investments & Securities / Real Estate");
        bisacMap.put("BUS036060","BUSINESS & ECONOMICS / Investments & Securities / Stocks");
        bisacMap.put("BUS098000","BUSINESS & ECONOMICS / Knowledge Capital");
        bisacMap.put("BUS038000","BUSINESS & ECONOMICS / Labor");
        bisacMap.put("BUS071000","BUSINESS & ECONOMICS / Leadership");
        bisacMap.put("BUS040000","BUSINESS & ECONOMICS / Mail Order");
        bisacMap.put("BUS041000","BUSINESS & ECONOMICS / Management");
        bisacMap.put("BUS042000","BUSINESS & ECONOMICS / Management Science");
        bisacMap.put("BUS042510","BUSINESS & ECONOMICS / Management");
        bisacMap.put("BUS043000","BUSINESS & ECONOMICS / Marketing / General");
        bisacMap.put("BUS043010","BUSINESS & ECONOMICS / Marketing / Direct");
        bisacMap.put("BUS043020","BUSINESS & ECONOMICS / Marketing / Industrial");
        bisacMap.put("BUS043040","BUSINESS & ECONOMICS / Marketing / Multilevel");
        bisacMap.put("BUS043060","BUSINESS & ECONOMICS / Marketing / Research");
        bisacMap.put("BUS043050","BUSINESS & ECONOMICS / Marketing / Telemarketing");
        bisacMap.put("BUS106000","BUSINESS & ECONOMICS / Mentoring & Coaching");
        bisacMap.put("BUS015000","BUSINESS & ECONOMICS / Mergers & Acquisitions");
        bisacMap.put("BUS045000","BUSINESS & ECONOMICS / Money & Monetary Policy");
        bisacMap.put("BUS046000","BUSINESS & ECONOMICS / Motivational");
        bisacMap.put("BUS100000","BUSINESS & ECONOMICS / Museum Administration & Museology");
        bisacMap.put("BUS047000","BUSINESS & ECONOMICS / Negotiating");
        bisacMap.put("BUS048000","BUSINESS & ECONOMICS / New Business Enterprises");
        bisacMap.put("BUS074000","BUSINESS & ECONOMICS / Nonprofit Organizations & Charities");
        bisacMap.put("BUS084000","BUSINESS & ECONOMICS / Office Automation");
        bisacMap.put("BUS095000","BUSINESS & ECONOMICS / Office Equipment & Supplies");
        bisacMap.put("BUS096000","BUSINESS & ECONOMICS / Office Management");
        bisacMap.put("BUS049000","BUSINESS & ECONOMICS / Operations Research");
        bisacMap.put("BUS085000","BUSINESS & ECONOMICS / Organizational Behavior");
        bisacMap.put("BUS103000","BUSINESS & ECONOMICS / Organizational Development");
        bisacMap.put("BUS102000","BUSINESS & ECONOMICS / Outsourcing");
        bisacMap.put("BUS050000","BUSINESS & ECONOMICS / Personal Finance / General");
        bisacMap.put("BUS050010","BUSINESS & ECONOMICS / Personal Finance / Budgeting");
        bisacMap.put("BUS050020","BUSINESS & ECONOMICS / Personal Finance / Investing");
        bisacMap.put("BUS050030","BUSINESS & ECONOMICS / Personal Finance / Money Management");
        bisacMap.put("BUS050040","BUSINESS & ECONOMICS / Personal Finance / Retirement Planning");
        bisacMap.put("BUS050050","BUSINESS & ECONOMICS / Personal Finance / Taxation");
        bisacMap.put("BUS107000","BUSINESS & ECONOMICS / Personal Success");
        bisacMap.put("BUS087000","BUSINESS & ECONOMICS / Production & Operations Management");
        bisacMap.put("BUS101000","BUSINESS & ECONOMICS / Project Management");
        bisacMap.put("BUS051000","BUSINESS & ECONOMICS / Public Finance");
        bisacMap.put("BUS052000","BUSINESS & ECONOMICS / Public Relations");
        bisacMap.put("BUS076000","BUSINESS & ECONOMICS / Purchasing & Buying");
        bisacMap.put("BUS053000","BUSINESS & ECONOMICS / Quality Control");
        bisacMap.put("BUS054000","BUSINESS & ECONOMICS / Real Estate / General");
        bisacMap.put("BUS054010","BUSINESS & ECONOMICS / Real Estate / Buying & Selling Homes");
        bisacMap.put("BUS054020","BUSINESS & ECONOMICS / Real Estate / Commercial");
        bisacMap.put("BUS054030","BUSINESS & ECONOMICS / Real Estate / Mortgages");
        bisacMap.put("BUS055000","BUSINESS & ECONOMICS / Reference");
        bisacMap.put("BUS108000","BUSINESS & ECONOMICS / Research & Development");
        bisacMap.put("BUS058000","BUSINESS & ECONOMICS / Sales & Selling / General");
        bisacMap.put("BUS058010","BUSINESS & ECONOMICS / Sales & Selling / Management");
        bisacMap.put("BUS058520","BUSINESS & ECONOMICS / Sales & Selling / Techniques");
        bisacMap.put("BUS089000","BUSINESS & ECONOMICS / Secretarial Aids & Training");
        bisacMap.put("BUS059000","BUSINESS & ECONOMICS / Skills");
        bisacMap.put("BUS060000","BUSINESS & ECONOMICS / Small Business");
        bisacMap.put("BUS061000","BUSINESS & ECONOMICS / Statistics");
        bisacMap.put("BUS063000","BUSINESS & ECONOMICS / Strategic Planning");
        bisacMap.put("BUS062000","BUSINESS & ECONOMICS / Structural Adjustment");
        bisacMap.put("BUS064000","BUSINESS & ECONOMICS / Taxation / General");
        bisacMap.put("BUS064010","BUSINESS & ECONOMICS / Taxation / Corporate");
        bisacMap.put("BUS064030","BUSINESS & ECONOMICS / Taxation / Small Business");
        bisacMap.put("BUS088000","BUSINESS & ECONOMICS / Time Management");
        bisacMap.put("BUS065000","BUSINESS & ECONOMICS / Total Quality Management");
        bisacMap.put("BUS066000","BUSINESS & ECONOMICS / Training");
        bisacMap.put("BUS067000","BUSINESS & ECONOMICS / Urban & Regional");
        bisacMap.put("BUS109000","BUSINESS & ECONOMICS / Women in Business");
        bisacMap.put("BUS097000","BUSINESS & ECONOMICS / Workplace Culture");
        bisacMap.put("CGN000000","COMICS & GRAPHIC NOVELS / General");
        bisacMap.put("CGN001000","COMICS & GRAPHIC NOVELS / Anthologies");
        bisacMap.put("CGN008000","COMICS & GRAPHIC NOVELS / Contemporary Women");
        bisacMap.put("CGN004010","COMICS & GRAPHIC NOVELS / Crime & Mystery");
        bisacMap.put("CGN004020","COMICS & GRAPHIC NOVELS / Erotica");
        bisacMap.put("CGN004030","COMICS & GRAPHIC NOVELS / Fantasy");
        bisacMap.put("CGN009000","COMICS & GRAPHIC NOVELS / Gay & Lesbian");
        bisacMap.put("CGN010000","COMICS & GRAPHIC NOVELS / Historical Fiction");
        bisacMap.put("CGN004040","COMICS & GRAPHIC NOVELS / Horror");
        bisacMap.put("CGN006000","COMICS & GRAPHIC NOVELS / Literary");
        bisacMap.put("CGN004050","COMICS & GRAPHIC NOVELS / Manga / General");
        bisacMap.put("CGN004100","COMICS & GRAPHIC NOVELS / Manga / Crime & Mystery");
        bisacMap.put("CGN004110","COMICS & GRAPHIC NOVELS / Manga / Erotica");
        bisacMap.put("CGN004120","COMICS & GRAPHIC NOVELS / Manga / Fantasy");
        bisacMap.put("CGN004130","COMICS & GRAPHIC NOVELS / Manga / Gay & Lesbian");
        bisacMap.put("CGN004140","COMICS & GRAPHIC NOVELS / Manga / Historical Fiction");
        bisacMap.put("CGN004150","COMICS & GRAPHIC NOVELS / Manga / Horror");
        bisacMap.put("CGN004160","COMICS & GRAPHIC NOVELS / Manga / Media Tie-In");
        bisacMap.put("CGN004170","COMICS & GRAPHIC NOVELS / Manga / Nonfiction");
        bisacMap.put("CGN004220","COMICS & GRAPHIC NOVELS / Manga / Religious");
        bisacMap.put("CGN004180","COMICS & GRAPHIC NOVELS / Manga / Romance");
        bisacMap.put("CGN004190","COMICS & GRAPHIC NOVELS / Manga / Science Fiction");
        bisacMap.put("CGN004200","COMICS & GRAPHIC NOVELS / Manga / Sports");
        bisacMap.put("CGN004210","COMICS & GRAPHIC NOVELS / Manga / Yaoi");
        bisacMap.put("CGN004060","COMICS & GRAPHIC NOVELS / Media Tie-In");
        bisacMap.put("CGN007000","COMICS & GRAPHIC NOVELS / Nonfiction");
        bisacMap.put("CGN011000","COMICS & GRAPHIC NOVELS / Religious");
        bisacMap.put("CGN004090","COMICS & GRAPHIC NOVELS / Romance");
        bisacMap.put("CGN004070","COMICS & GRAPHIC NOVELS / Science Fiction");
        bisacMap.put("CGN004080","COMICS & GRAPHIC NOVELS / Superheroes");
        bisacMap.put("COM000000","COMPUTERS / General");
        bisacMap.put("COM082000","COMPUTERS / Bioinformatics");
        bisacMap.put("COM006000","COMPUTERS / Buyer's Guides");
        bisacMap.put("COM007000","COMPUTERS / CAD-CAM");
        bisacMap.put("COM008000","COMPUTERS / Calculators");
        bisacMap.put("COM009000","COMPUTERS / CD-DVD Technology");
        bisacMap.put("COM055000","COMPUTERS / Certification Guides / General");
        bisacMap.put("COM055010","COMPUTERS / Certification Guides / A+");
        bisacMap.put("COM055020","COMPUTERS / Certification Guides / MCSE");
        bisacMap.put("COM061000","COMPUTERS / Client-Server Computing");
        bisacMap.put("COM010000","COMPUTERS / Compilers");
        bisacMap.put("COM059000","COMPUTERS / Computer Engineering");
        bisacMap.put("COM012000","COMPUTERS / Computer Graphics");
        bisacMap.put("COM013000","COMPUTERS / Computer Literacy");
        bisacMap.put("COM014000","COMPUTERS / Computer Science");
        bisacMap.put("COM072000","COMPUTERS / Computer Simulation");
        bisacMap.put("COM016000","COMPUTERS / Computer Vision & Pattern Recognition");
        bisacMap.put("COM086000","COMPUTERS / Computerized Home & Entertainment");
        bisacMap.put("COM017000","COMPUTERS / Cybernetics");
        bisacMap.put("COM062000","COMPUTERS / Data Modeling & Design");
        bisacMap.put("COM018000","COMPUTERS / Data Processing");
        bisacMap.put("COM020000","COMPUTERS / Data Transmission Systems / General");
        bisacMap.put("COM020050","COMPUTERS / Data Transmission Systems / Broadband");
        bisacMap.put("COM020010","COMPUTERS / Data Transmission Systems / Electronic Data Interchange");
        bisacMap.put("COM020090","COMPUTERS / Data Transmission Systems / Wireless");
        bisacMap.put("COM089000","COMPUTERS / Data Visualization");
        bisacMap.put("COM021000","COMPUTERS / Databases / General");
        bisacMap.put("COM021030","COMPUTERS / Databases / Data Mining");
        bisacMap.put("COM021040","COMPUTERS / Databases / Data Warehousing");
        bisacMap.put("COM021050","COMPUTERS / Databases / Servers");
        bisacMap.put("COM084000","COMPUTERS / Desktop Applications / General");
        bisacMap.put("COM084010","COMPUTERS / Desktop Applications / Databases");
        bisacMap.put("COM087020","COMPUTERS / Desktop Applications / Design & Graphics");
        bisacMap.put("COM022000","COMPUTERS / Desktop Applications / Desktop Publishing");
        bisacMap.put("COM084020","COMPUTERS / Desktop Applications / Email Clients");
        bisacMap.put("COM027000","COMPUTERS / Desktop Applications / Personal Finance Applications");
        bisacMap.put("COM078000","COMPUTERS / Desktop Applications / Presentation Software");
        bisacMap.put("COM081000","COMPUTERS / Desktop Applications / Project Management Software");
        bisacMap.put("COM054000","COMPUTERS / Desktop Applications / Spreadsheets");
        bisacMap.put("COM084030","COMPUTERS / Desktop Applications / Suites");
        bisacMap.put("COM058000","COMPUTERS / Desktop Applications / Word Processing");
        bisacMap.put("COM087000","COMPUTERS / Digital Media / General");
        bisacMap.put("COM087010","COMPUTERS / Digital Media / Audio");
        bisacMap.put("COM087030","COMPUTERS / Digital Media / Photography (see also PHOTOGRAPHY / Techniques / Digital)");
        bisacMap.put("COM071000","COMPUTERS / Digital Media / Video & Animation");
        bisacMap.put("COM063000","COMPUTERS / Document Management");
        bisacMap.put("COM085000","COMPUTERS / Documentation & Technical Writing");
        bisacMap.put("COM023000","COMPUTERS / Educational Software");
        bisacMap.put("COM064000","COMPUTERS / Electronic Commerce (see also headings under BUSINESS & ECONOMICS / E-Commerce)");
        bisacMap.put("COM065000","COMPUTERS / Electronic Publishing");
        bisacMap.put("COM005000","COMPUTERS / Enterprise Applications / General");
        bisacMap.put("COM005030","COMPUTERS / Enterprise Applications / Business Intelligence Tools");
        bisacMap.put("COM066000","COMPUTERS / Enterprise Applications / Collaboration Software");
        bisacMap.put("COM025000","COMPUTERS / Expert Systems");
        bisacMap.put("COM067000","COMPUTERS / Hardware / General");
        bisacMap.put("COM038000","COMPUTERS / Hardware / Mainframes & Minicomputers");
        bisacMap.put("COM074000","COMPUTERS / Hardware / Mobile Devices");
        bisacMap.put("COM049000","COMPUTERS / Hardware / Peripherals");
        bisacMap.put("COM050000","COMPUTERS / Hardware / Personal Computers / General");
        bisacMap.put("COM050020","COMPUTERS / Hardware / Personal Computers / Macintosh");
        bisacMap.put("COM050010","COMPUTERS / Hardware / Personal Computers / PCs");
        bisacMap.put("COM090000","COMPUTERS / Hardware / Tablets");
        bisacMap.put("COM080000","COMPUTERS / History");
        bisacMap.put("COM012050","COMPUTERS / Image Processing");
        bisacMap.put("COM032000","COMPUTERS / Information Technology");
        bisacMap.put("COM031000","COMPUTERS / Information Theory");
        bisacMap.put("COM004000","COMPUTERS / Intelligence (AI) & Semantics");
        bisacMap.put("COM034000","COMPUTERS / Interactive & Multimedia");
        bisacMap.put("COM060000","COMPUTERS / Internet / General");
        bisacMap.put("COM060060","COMPUTERS / Internet / Web Site Design");
        bisacMap.put("COM060090","COMPUTERS / Internet / Application Development");
        bisacMap.put("COM035000","COMPUTERS / Keyboarding");
        bisacMap.put("COM036000","COMPUTERS / Logic Design");
        bisacMap.put("COM037000","COMPUTERS / Machine Theory");
        bisacMap.put("COM039000","COMPUTERS / Management Information Systems");
        bisacMap.put("COM077000","COMPUTERS / Mathematical & Statistical Software");
        bisacMap.put("COM041000","COMPUTERS / Microprocessors");
        bisacMap.put("COM042000","COMPUTERS / Natural Language Processing");
        bisacMap.put("COM043000","COMPUTERS / Networking / General");
        bisacMap.put("COM060030","COMPUTERS / Networking / Intranets & Extranets");
        bisacMap.put("COM075000","COMPUTERS / Networking / Hardware");
        bisacMap.put("COM043020","COMPUTERS / Networking / Local Area Networks (LANs)");
        bisacMap.put("COM043040","COMPUTERS / Networking / Network Protocols");
        bisacMap.put("COM043060","COMPUTERS / Networking / Vendor Specific");
        bisacMap.put("COM044000","COMPUTERS / Neural Networks");
        bisacMap.put("COM069000","COMPUTERS / Online Services");
        bisacMap.put("COM069010","COMPUTERS / Online Services / Resource Directories");
        bisacMap.put("COM046000","COMPUTERS / Operating Systems / General");
        bisacMap.put("COM046060","COMPUTERS / Operating Systems / DOS");
        bisacMap.put("COM046070","COMPUTERS / Operating Systems / Linux");
        bisacMap.put("COM046020","COMPUTERS / Operating Systems / Macintosh");
        bisacMap.put("COM046080","COMPUTERS / Operating Systems / Mainframe & Midrange");
        bisacMap.put("COM046030","COMPUTERS / Operating Systems / UNIX");
        bisacMap.put("COM046090","COMPUTERS / Operating Systems / Virtualization");
        bisacMap.put("COM046040","COMPUTERS / Operating Systems / Windows Desktop");
        bisacMap.put("COM046050","COMPUTERS / Operating Systems / Windows Server");
        bisacMap.put("COM047000","COMPUTERS / Optical Data Processing");
        bisacMap.put("COM051000","COMPUTERS / Programming / General");
        bisacMap.put("COM051300","COMPUTERS / Programming / Algorithms");
        bisacMap.put("COM012040","COMPUTERS / Programming / Games");
        bisacMap.put("COM051370","COMPUTERS / Programming / Macinstosh");
        bisacMap.put("COM051380","COMPUTERS / Programming / Microsoft");
        bisacMap.put("COM051460","COMPUTERS / Programming / Mobile Devices");
        bisacMap.put("COM051210","COMPUTERS / Programming / Object Oriented");
        bisacMap.put("COM051390","COMPUTERS / Programming / Open Source");
        bisacMap.put("COM051220","COMPUTERS / Programming / Parallel");
        bisacMap.put("COM051010","COMPUTERS / Programming Languages / General");
        bisacMap.put("COM051020","COMPUTERS / Programming Languages / Ada");
        bisacMap.put("COM051470","COMPUTERS / Programming Languages / ASP .NET");
        bisacMap.put("COM051040","COMPUTERS / Programming Languages / Assembly Language");
        bisacMap.put("COM051050","COMPUTERS / Programming Languages / BASIC");
        bisacMap.put("COM051060","COMPUTERS / Programming Languages / C");
        bisacMap.put("COM051070","COMPUTERS / Programming Languages / C++");
        bisacMap.put("COM051310","COMPUTERS / Programming Languages / C#");
        bisacMap.put("COM051080","COMPUTERS / Programming Languages / COBOL");
        bisacMap.put("COM051090","COMPUTERS / Programming Languages / FORTRAN");
        bisacMap.put("COM051270","COMPUTERS / Programming Languages / HTML");
        bisacMap.put("COM051280","COMPUTERS / Programming Languages / Java");
        bisacMap.put("COM051260","COMPUTERS / Programming Languages / JavaScript");
        bisacMap.put("COM051100","COMPUTERS / Programming Languages / LISP");
        bisacMap.put("COM051130","COMPUTERS / Programming Languages / Pascal");
        bisacMap.put("COM051350","COMPUTERS / Programming Languages / Perl");
        bisacMap.put("COM051400","COMPUTERS / Programming Languages / PHP");
        bisacMap.put("COM051140","COMPUTERS / Programming Languages / Prolog");
        bisacMap.put("COM051360","COMPUTERS / Programming Languages / Python");
        bisacMap.put("COM051290","COMPUTERS / Programming Languages / RPG");
        bisacMap.put("COM051410","COMPUTERS / Programming Languages / Ruby");
        bisacMap.put("COM051160","COMPUTERS / Programming Languages / Smalltalk");
        bisacMap.put("COM051170","COMPUTERS / Programming Languages / SQL");
        bisacMap.put("COM051450","COMPUTERS / Programming Languages / UML");
        bisacMap.put("COM051420","COMPUTERS / Programming Languages / VBScript");
        bisacMap.put("COM051200","COMPUTERS / Programming Languages / Visual BASIC");
        bisacMap.put("COM051320","COMPUTERS / Programming Languages / XML");
        bisacMap.put("COM052000","COMPUTERS / Reference");
        bisacMap.put("COM053000","COMPUTERS / Security / General");
        bisacMap.put("COM083000","COMPUTERS / Security / Cryptography");
        bisacMap.put("COM043050","COMPUTERS / Security / Networking");
        bisacMap.put("COM060040","COMPUTERS / Security / Online Safety & Privacy");
        bisacMap.put("COM015000","COMPUTERS / Security / Viruses & Malware");
        bisacMap.put("COM079000","COMPUTERS / Social Aspects / General");
        bisacMap.put("COM079010","COMPUTERS / Social Aspects / Human-Computer Interaction");
        bisacMap.put("COM051230","COMPUTERS / Software Development & Engineering / General");
        bisacMap.put("COM051430","COMPUTERS / Software Development & Engineering / Project Management");
        bisacMap.put("COM051330","COMPUTERS / Software Development & Engineering / Quality Assurance & Testing");
        bisacMap.put("COM051240","COMPUTERS / Software Development & Engineering / Systems Analysis & Design");
        bisacMap.put("COM051440","COMPUTERS / Software Development & Engineering / Tools");
        bisacMap.put("COM073000","COMPUTERS / Speech & Audio Processing");
        bisacMap.put("COM088000","COMPUTERS / System Administration / General");
        bisacMap.put("COM019000","COMPUTERS / System Administration / Disaster & Recovery");
        bisacMap.put("COM020020","COMPUTERS / System Administration / Email Administration");
        bisacMap.put("COM088010","COMPUTERS / System Administration / Linux & UNIX Administration");
        bisacMap.put("COM030000","COMPUTERS / System Administration / Storage & Retrieval");
        bisacMap.put("COM088020","COMPUTERS / System Administration / Windows Administration");
        bisacMap.put("COM011000","COMPUTERS / Systems Architecture / General");
        bisacMap.put("COM048000","COMPUTERS / Systems Architecture / Distributed Systems & Computing");
        bisacMap.put("COM070000","COMPUTERS / User Interfaces");
        bisacMap.put("COM056000","COMPUTERS / Utilities");
        bisacMap.put("COM057000","COMPUTERS / Virtual Worlds");
        bisacMap.put("COM060080","COMPUTERS / Web / General");
        bisacMap.put("COM060170","COMPUTERS / Web / Content Management Systems");
        bisacMap.put("COM060130","COMPUTERS / Web / Design");
        bisacMap.put("COM060010","COMPUTERS / Web / Browsers");
        bisacMap.put("COM060110","COMPUTERS / Web / Podcasting & Webcasting");
        bisacMap.put("COM060120","COMPUTERS / Web / Search Engines");
        bisacMap.put("COM060070","COMPUTERS / Web / Site Directories");
        bisacMap.put("COM060140","COMPUTERS / Web / Social Networking");
        bisacMap.put("COM060150","COMPUTERS / Web / User Generated Content");
        bisacMap.put("COM060160","COMPUTERS / Web / Web Programming");
        bisacMap.put("COM060180","COMPUTERS / Web / Web Services & APIs");
        bisacMap.put("CKB000000","COOKING / General");
        bisacMap.put("CKB107000","COOKING / Baby Food");
        bisacMap.put("CKB100000","COOKING / Beverages / General");
        bisacMap.put("CKB006000","COOKING / Beverages / Bartending");
        bisacMap.put("CKB007000","COOKING / Beverages / Beer");
        bisacMap.put("CKB019000","COOKING / Beverages / Coffee & Tea");
        bisacMap.put("CKB008000","COOKING / Beverages / Non-Alcoholic");
        bisacMap.put("CKB088000","COOKING / Beverages / Wine & Spirits");
        bisacMap.put("CKB101000","COOKING / Courses & Dishes / General");
        bisacMap.put("CKB003000","COOKING / Courses & Dishes / Appetizers");
        bisacMap.put("CKB009000","COOKING / Courses & Dishes / Bread");
        bisacMap.put("CKB010000","COOKING / Courses & Dishes / Breakfast");
        bisacMap.put("CKB012000","COOKING / Courses & Dishes / Brunch");
        bisacMap.put("CKB014000","COOKING / Courses & Dishes / Cakes");
        bisacMap.put("CKB112000","COOKING / Courses & Dishes / Casseroles");
        bisacMap.put("CKB018000","COOKING / Courses & Dishes / Chocolate");
        bisacMap.put("CKB095000","COOKING / Courses & Dishes / Confectionery");
        bisacMap.put("CKB021000","COOKING / Courses & Dishes / Cookies");
        bisacMap.put("CKB024000","COOKING / Courses & Dishes / Desserts");
        bisacMap.put("CKB062000","COOKING / Courses & Dishes / Pastry");
        bisacMap.put("CKB063000","COOKING / Courses & Dishes / Pies");
        bisacMap.put("CKB064000","COOKING / Courses & Dishes / Pizza");
        bisacMap.put("CKB073000","COOKING / Courses & Dishes / Salads");
        bisacMap.put("CKB102000","COOKING / Courses & Dishes / Sauces & Dressings");
        bisacMap.put("CKB079000","COOKING / Courses & Dishes / Soups & Stews");
        bisacMap.put("CKB029000","COOKING / Entertaining");
        bisacMap.put("CKB030000","COOKING / Essays & Narratives");
        bisacMap.put("CKB039000","COOKING / Health & Healing / General");
        bisacMap.put("CKB106000","COOKING / Health & Healing / Allergy");
        bisacMap.put("CKB103000","COOKING / Health & Healing / Cancer");
        bisacMap.put("CKB025000","COOKING / Health & Healing / Diabetic & Sugar-Free");
        bisacMap.put("CKB104000","COOKING / Health & Healing / Heart");
        bisacMap.put("CKB111000","COOKING / Health & Healing / Gluten-Free");
        bisacMap.put("CKB108000","COOKING / Health & Healing / Low Carbohydrate");
        bisacMap.put("CKB050000","COOKING / Health & Healing / Low Cholesterol");
        bisacMap.put("CKB051000","COOKING / Health & Healing / Low Fat");
        bisacMap.put("CKB052000","COOKING / Health & Healing / Low Salt");
        bisacMap.put("CKB026000","COOKING / Health & Healing / Weight Control");
        bisacMap.put("CKB041000","COOKING / History");
        bisacMap.put("CKB042000","COOKING / Holiday");
        bisacMap.put("CKB023000","COOKING / Methods / General");
        bisacMap.put("CKB004000","COOKING / Methods / Baking");
        bisacMap.put("CKB005000","COOKING / Methods / Barbecue & Grilling");
        bisacMap.put("CKB015000","COOKING / Methods / Canning & Preserving");
        bisacMap.put("CKB020000","COOKING / Methods / Cookery for One");
        bisacMap.put("CKB033000","COOKING / Methods / Garnishing");
        bisacMap.put("CKB037000","COOKING / Methods / Gourmet");
        bisacMap.put("CKB113000","COOKING / Methods / Low Budget");
        bisacMap.put("CKB057000","COOKING / Methods / Microwave");
        bisacMap.put("CKB060000","COOKING / Methods / Outdoor");
        bisacMap.put("CKB068000","COOKING / Methods / Professional");
        bisacMap.put("CKB069000","COOKING / Methods / Quantity");
        bisacMap.put("CKB070000","COOKING / Methods / Quick & Easy");
        bisacMap.put("CKB110000","COOKING / Methods / Raw Food");
        bisacMap.put("CKB109000","COOKING / Methods / Slow Cooking");
        bisacMap.put("CKB081000","COOKING / Methods / Special Appliances");
        bisacMap.put("CKB089000","COOKING / Methods / Wok");
        bisacMap.put("CKB071000","COOKING / Reference");
        bisacMap.put("CKB031000","COOKING / Regional & Ethnic / General");
        bisacMap.put("CKB001000","COOKING / Regional & Ethnic / African");
        bisacMap.put("CKB002000","COOKING / Regional & Ethnic / American / General");
        bisacMap.put("CKB002010","COOKING / Regional & Ethnic / American / California Style");
        bisacMap.put("CKB002020","COOKING / Regional & Ethnic / American / Middle Atlantic States");
        bisacMap.put("CKB002030","COOKING / Regional & Ethnic / American / Middle Western States");
        bisacMap.put("CKB002040","COOKING / Regional & Ethnic / American / New England");
        bisacMap.put("CKB002050","COOKING / Regional & Ethnic / American / Northwestern States");
        bisacMap.put("CKB002060","COOKING / Regional & Ethnic / American / Southern States");
        bisacMap.put("CKB002070","COOKING / Regional & Ethnic / American / Southwestern States");
        bisacMap.put("CKB002080","COOKING / Regional & Ethnic / American / Western States");
        bisacMap.put("CKB090000","COOKING / Regional & Ethnic / Asian");
        bisacMap.put("CKB013000","COOKING / Regional & Ethnic / Cajun & Creole");
        bisacMap.put("CKB091000","COOKING / Regional & Ethnic / Canadian");
        bisacMap.put("CKB016000","COOKING / Regional & Ethnic / Caribbean & West Indian");
        bisacMap.put("CKB099000","COOKING / Regional & Ethnic / Central American & South American");
        bisacMap.put("CKB017000","COOKING / Regional & Ethnic / Chinese");
        bisacMap.put("CKB011000","COOKING / Regional & Ethnic / English, Scottish & Welsh");
        bisacMap.put("CKB092000","COOKING / Regional & Ethnic / European");
        bisacMap.put("CKB034000","COOKING / Regional & Ethnic / French");
        bisacMap.put("CKB036000","COOKING / Regional & Ethnic / German");
        bisacMap.put("CKB038000","COOKING / Regional & Ethnic / Greek");
        bisacMap.put("CKB043000","COOKING / Regional & Ethnic / Hungarian");
        bisacMap.put("CKB044000","COOKING / Regional & Ethnic / Indian & South Asian");
        bisacMap.put("CKB045000","COOKING / Regional & Ethnic / International");
        bisacMap.put("CKB046000","COOKING / Regional & Ethnic / Irish");
        bisacMap.put("CKB047000","COOKING / Regional & Ethnic / Italian");
        bisacMap.put("CKB048000","COOKING / Regional & Ethnic / Japanese");
        bisacMap.put("CKB049000","COOKING / Regional & Ethnic / Jewish & Kosher");
        bisacMap.put("CKB055000","COOKING / Regional & Ethnic / Mediterranean");
        bisacMap.put("CKB056000","COOKING / Regional & Ethnic / Mexican");
        bisacMap.put("CKB093000","COOKING / Regional & Ethnic / Middle Eastern");
        bisacMap.put("CKB058000","COOKING / Regional & Ethnic / Native American");
        bisacMap.put("CKB097000","COOKING / Regional & Ethnic / Pacific Rim");
        bisacMap.put("CKB065000","COOKING / Regional & Ethnic / Polish");
        bisacMap.put("CKB066000","COOKING / Regional & Ethnic / Portuguese");
        bisacMap.put("CKB072000","COOKING / Regional & Ethnic / Russian");
        bisacMap.put("CKB074000","COOKING / Regional & Ethnic / Scandinavian");
        bisacMap.put("CKB078000","COOKING / Regional & Ethnic / Soul Food");
        bisacMap.put("CKB080000","COOKING / Regional & Ethnic / Spanish");
        bisacMap.put("CKB083000","COOKING / Regional & Ethnic / Thai");
        bisacMap.put("CKB084000","COOKING / Regional & Ethnic / Turkish");
        bisacMap.put("CKB094000","COOKING / Regional & Ethnic / Vietnamese");
        bisacMap.put("CKB077000","COOKING / Seasonal");
        bisacMap.put("CKB105000","COOKING / Specific Ingredients / General");
        bisacMap.put("CKB096000","COOKING / Specific Ingredients / Dairy");
        bisacMap.put("CKB035000","COOKING / Specific Ingredients / Fruit");
        bisacMap.put("CKB032000","COOKING / Specific Ingredients / Game");
        bisacMap.put("CKB040000","COOKING / Specific Ingredients / Herbs, Spices, Condiments");
        bisacMap.put("CKB054000","COOKING / Specific Ingredients / Meat");
        bisacMap.put("CKB059000","COOKING / Specific Ingredients / Natural Foods");
        bisacMap.put("CKB061000","COOKING / Specific Ingredients / Pasta");
        bisacMap.put("CKB067000","COOKING / Specific Ingredients / Poultry");
        bisacMap.put("CKB098000","COOKING / Specific Ingredients / Rice & Grains");
        bisacMap.put("CKB076000","COOKING / Specific Ingredients / Seafood");
        bisacMap.put("CKB085000","COOKING / Specific Ingredients / Vegetables");
        bisacMap.put("CKB082000","COOKING / Tablesetting");
        bisacMap.put("CKB086000","COOKING / Vegetarian & Vegan");
        bisacMap.put("CRA000000","CRAFTS & HOBBIES / General");
        bisacMap.put("CRA001000","CRAFTS & HOBBIES / Applique");
        bisacMap.put("CRA002000","CRAFTS & HOBBIES / Baskets");
        bisacMap.put("CRA048000","CRAFTS & HOBBIES / Beadwork");
        bisacMap.put("CRA046000","CRAFTS & HOBBIES / Book Printing & Binding");
        bisacMap.put("CRA049000","CRAFTS & HOBBIES / Candle & Soap Making");
        bisacMap.put("CRA003000","CRAFTS & HOBBIES / Carving");
        bisacMap.put("CRA043000","CRAFTS & HOBBIES / Crafts for Children");
        bisacMap.put("CRA005000","CRAFTS & HOBBIES / Decorating");
        bisacMap.put("CRA056000","CRAFTS & HOBBIES / Dollhouses");
        bisacMap.put("CRA057000","CRAFTS & HOBBIES / Dolls & Doll Clothing");
        bisacMap.put("CRA006000","CRAFTS & HOBBIES / Dough");
        bisacMap.put("CRA007000","CRAFTS & HOBBIES / Dye");
        bisacMap.put("CRA009000","CRAFTS & HOBBIES / Fashion");
        bisacMap.put("CRA010000","CRAFTS & HOBBIES / Flower Arranging");
        bisacMap.put("CRA047000","CRAFTS & HOBBIES / Folkcrafts");
        bisacMap.put("CRA011000","CRAFTS & HOBBIES / Framing");
        bisacMap.put("CRA012000","CRAFTS & HOBBIES / Glass & Glassware");
        bisacMap.put("CRA014000","CRAFTS & HOBBIES / Jewelry");
        bisacMap.put("CRA055000","CRAFTS & HOBBIES / Knots, Macrame & Rope Work");
        bisacMap.put("CRA050000","CRAFTS & HOBBIES / Leatherwork");
        bisacMap.put("CRA017000","CRAFTS & HOBBIES / Metal Work");
        bisacMap.put("CRA018000","CRAFTS & HOBBIES / Miniatures");
        bisacMap.put("CRA054000","CRAFTS & HOBBIES / Mixed Media");
        bisacMap.put("CRA019000","CRAFTS & HOBBIES / Mobiles");
        bisacMap.put("CRA045000","CRAFTS & HOBBIES / Model Railroading");
        bisacMap.put("CRA020000","CRAFTS & HOBBIES / Models");
        bisacMap.put("CRA053000","CRAFTS & HOBBIES / Nature Crafts");
        bisacMap.put("CRA022000","CRAFTS & HOBBIES / Needlework / General");
        bisacMap.put("CRA004000","CRAFTS & HOBBIES / Needlework / Crocheting");
        bisacMap.put("CRA044000","CRAFTS & HOBBIES / Needlework / Cross-Stitch");
        bisacMap.put("CRA008000","CRAFTS & HOBBIES / Needlework / Embroidery");
        bisacMap.put("CRA015000","CRAFTS & HOBBIES / Needlework / Knitting");
        bisacMap.put("CRA016000","CRAFTS & HOBBIES / Needlework / Lace & Tatting");
        bisacMap.put("CRA021000","CRAFTS & HOBBIES / Needlework / Needlepoint");
        bisacMap.put("CRA023000","CRAFTS & HOBBIES / Origami");
        bisacMap.put("CRA024000","CRAFTS & HOBBIES / Painting");
        bisacMap.put("CRA025000","CRAFTS & HOBBIES / Papercrafts");
        bisacMap.put("CRA026000","CRAFTS & HOBBIES / Patchwork");
        bisacMap.put("CRA051000","CRAFTS & HOBBIES / Polymer Clay");
        bisacMap.put("CRA027000","CRAFTS & HOBBIES / Potpourri");
        bisacMap.put("CRA028000","CRAFTS & HOBBIES / Pottery & Ceramics");
        bisacMap.put("CRA029000","CRAFTS & HOBBIES / Printmaking");
        bisacMap.put("CRA030000","CRAFTS & HOBBIES / Puppets & Puppetry");
        bisacMap.put("CRA031000","CRAFTS & HOBBIES / Quilts & Quilting");
        bisacMap.put("CRA032000","CRAFTS & HOBBIES / Reference");
        bisacMap.put("CRA033000","CRAFTS & HOBBIES / Rugs");
        bisacMap.put("CRA052000","CRAFTS & HOBBIES / Scrapbooking");
        bisacMap.put("CRA034000","CRAFTS & HOBBIES / Seasonal");
        bisacMap.put("CRA035000","CRAFTS & HOBBIES / Sewing");
        bisacMap.put("CRA036000","CRAFTS & HOBBIES / Stenciling");
        bisacMap.put("CRA037000","CRAFTS & HOBBIES / Stuffed Animals");
        bisacMap.put("CRA039000","CRAFTS & HOBBIES / Toymaking");
        bisacMap.put("CRA040000","CRAFTS & HOBBIES / Weaving");
        bisacMap.put("CRA041000","CRAFTS & HOBBIES / Wood Toys");
        bisacMap.put("CRA042000","CRAFTS & HOBBIES / Woodwork");
        bisacMap.put("DES000000","DESIGN / General");
        bisacMap.put("DES001000","DESIGN / Book");
        bisacMap.put("DES002000","DESIGN / Clip Art");
        bisacMap.put("DES003000","DESIGN / Decorative Arts");
        bisacMap.put("DES004000","DESIGN / Essays");
        bisacMap.put("DES005000","DESIGN / Fashion");
        bisacMap.put("DES006000","DESIGN / Furniture");
        bisacMap.put("DES007000","DESIGN / Graphic Arts / General");
        bisacMap.put("DES007010","DESIGN / Graphic Arts / Advertising");
        bisacMap.put("DES007020","DESIGN / Graphic Arts / Branding & Logo Design");
        bisacMap.put("DES007030","DESIGN / Graphic Arts / Commercial & Corporate");
        bisacMap.put("DES007040","DESIGN / Graphic Arts / Illustration");
        bisacMap.put("DES007050","DESIGN / Graphic Arts / Typography");
        bisacMap.put("DES008000","DESIGN / History & Criticism");
        bisacMap.put("DES009000","DESIGN / Industrial");
        bisacMap.put("DES010000","DESIGN / Interior Decorating");
        bisacMap.put("DES011000","DESIGN / Product");
        bisacMap.put("DES012000","DESIGN / Reference");
        bisacMap.put("DES013000","DESIGN / Textile & Costume");
        bisacMap.put("DRA000000","DRAMA / General");
        bisacMap.put("DRA011000","DRAMA / African");
        bisacMap.put("DRA001000","DRAMA / American / General");
        bisacMap.put("DRA001010","DRAMA / American / African American");
        bisacMap.put("DRA006000","DRAMA / Ancient & Classical");
        bisacMap.put("DRA002000","DRAMA / Anthologies (multiple authors)");
        bisacMap.put("DRA005000","DRAMA / Asian / General");
        bisacMap.put("DRA005010","DRAMA / Asian / Japanese");
        bisacMap.put("DRA012000","DRAMA / Australian & Oceanian");
        bisacMap.put("DRA013000","DRAMA / Canadian");
        bisacMap.put("DRA014000","DRAMA / Caribbean & Latin American");
        bisacMap.put("DRA004000","DRAMA / European / General");
        bisacMap.put("DRA003000","DRAMA / European / English, Irish, Scottish, Welsh");
        bisacMap.put("DRA004010","DRAMA / European / French");
        bisacMap.put("DRA004020","DRAMA / European / German");
        bisacMap.put("DRA004030","DRAMA / European / Italian");
        bisacMap.put("DRA004040","DRAMA / European / Spanish & Portuguese");
        bisacMap.put("DRA017000","DRAMA / Gay & Lesbian");
        bisacMap.put("DRA018000","DRAMA / Medieval");
        bisacMap.put("DRA015000","DRAMA / Middle Eastern");
        bisacMap.put("DRA008000","DRAMA / Religious & Liturgical");
        bisacMap.put("DRA016000","DRAMA / Russian & Former Soviet Union");
        bisacMap.put("DRA010000","DRAMA / Shakespeare");
        bisacMap.put("DRA019000","DRAMA / Women Authors");
        bisacMap.put("EDU000000","EDUCATION / General");
        bisacMap.put("EDU001000","EDUCATION / Administration / General");
        bisacMap.put("EDU001020","EDUCATION / Administration / Elementary & Secondary");
        bisacMap.put("EDU001010","EDUCATION / Administration / Facility Management");
        bisacMap.put("EDU001030","EDUCATION / Administration / Higher");
        bisacMap.put("EDU001040","EDUCATION / Administration / School Superintendents & Principals");
        bisacMap.put("EDU002000","EDUCATION / Adult & Continuing Education");
        bisacMap.put("EDU003000","EDUCATION / Aims & Objectives");
        bisacMap.put("EDU057000","EDUCATION / Arts in Education");
        bisacMap.put("EDU049000","EDUCATION / Behavioral Management");
        bisacMap.put("EDU005000","EDUCATION / Bilingual Education");
        bisacMap.put("EDU044000","EDUCATION / Classroom Management");
        bisacMap.put("EDU050000","EDUCATION / Collaborative & Team Teaching");
        bisacMap.put("EDU043000","EDUCATION / Comparative");
        bisacMap.put("EDU039000","EDUCATION / Computers & Technology");
        bisacMap.put("EDU006000","EDUCATION / Counseling / General");
        bisacMap.put("EDU014000","EDUCATION / Counseling / Academic Development");
        bisacMap.put("EDU031000","EDUCATION / Counseling / Career Guidance");
        bisacMap.put("EDU045000","EDUCATION / Counseling / Crisis Management");
        bisacMap.put("EDU007000","EDUCATION / Curricula");
        bisacMap.put("EDU008000","EDUCATION / Decision-Making & Problem Solving");
        bisacMap.put("EDU041000","EDUCATION / Distance & Online Education");
        bisacMap.put("EDU047000","EDUCATION / Driver Education");
        bisacMap.put("EDU034000","EDUCATION / Educational Policy & Reform / General");
        bisacMap.put("EDU034020","EDUCATION / Educational Policy & Reform / Charter Schools");
        bisacMap.put("EDU034030","EDUCATION / Educational Policy & Reform / Federal Legislation");
        bisacMap.put("EDU034010","EDUCATION / Educational Policy & Reform / School Safety");
        bisacMap.put("EDU009000","EDUCATION / Educational Psychology");
        bisacMap.put("EDU010000","EDUCATION / Elementary");
        bisacMap.put("EDU042000","EDUCATION / Essays");
        bisacMap.put("EDU011000","EDUCATION / Evaluation & Assessment");
        bisacMap.put("EDU012000","EDUCATION / Experimental Methods");
        bisacMap.put("EDU013000","EDUCATION / Finance");
        bisacMap.put("EDU015000","EDUCATION / Higher");
        bisacMap.put("EDU016000","EDUCATION / History");
        bisacMap.put("EDU017000","EDUCATION / Home Schooling");
        bisacMap.put("EDU048000","EDUCATION / Inclusive Education");
        bisacMap.put("EDU018000","EDUCATION / Language Experience Approach");
        bisacMap.put("EDU032000","EDUCATION / Leadership");
        bisacMap.put("EDU051000","EDUCATION / Learning Styles");
        bisacMap.put("EDU020000","EDUCATION / Multicultural Education");
        bisacMap.put("EDU021000","EDUCATION / Non-Formal Education");
        bisacMap.put("EDU036000","EDUCATION / Organizations & Institutions");
        bisacMap.put("EDU022000","EDUCATION / Parent Participation");
        bisacMap.put("EDU040000","EDUCATION / Philosophy & Social Aspects");
        bisacMap.put("EDU033000","EDUCATION / Physical Education");
        bisacMap.put("EDU023000","EDUCATION / Preschool & Kindergarten");
        bisacMap.put("EDU046000","EDUCATION / Professional Development");
        bisacMap.put("EDU024000","EDUCATION / Reference");
        bisacMap.put("EDU037000","EDUCATION / Research");
        bisacMap.put("EDU052000","EDUCATION / Rural");
        bisacMap.put("EDU025000","EDUCATION / Secondary");
        bisacMap.put("EDU026000","EDUCATION / Special Education / General");
        bisacMap.put("EDU026010","EDUCATION / Special Education / Communicative Disorders");
        bisacMap.put("EDU026060","EDUCATION / Special Education / Gifted");
        bisacMap.put("EDU026020","EDUCATION / Special Education / Learning Disabilities");
        bisacMap.put("EDU026030","EDUCATION / Special Education / Mental Disabilities");
        bisacMap.put("EDU026040","EDUCATION / Special Education / Physical Disabilities");
        bisacMap.put("EDU026050","EDUCATION / Special Education / Social Disabilities");
        bisacMap.put("EDU027000","EDUCATION / Statistics");
        bisacMap.put("EDU038000","EDUCATION / Student Life & Student Affairs");
        bisacMap.put("EDU028000","EDUCATION / Study Skills");
        bisacMap.put("EDU029000","EDUCATION / Teaching Methods & Materials / General");
        bisacMap.put("EDU029050","EDUCATION / Teaching Methods & Materials / Arts & Humanities");
        bisacMap.put("EDU029070","EDUCATION / Teaching Methods & Materials / Health & Sexuality");
        bisacMap.put("EDU029080","EDUCATION / Teaching Methods & Materials / Language Arts");
        bisacMap.put("EDU029060","EDUCATION / Teaching Methods & Materials / Library Skills");
        bisacMap.put("EDU029010","EDUCATION / Teaching Methods & Materials / Mathematics");
        bisacMap.put("EDU029020","EDUCATION / Teaching Methods & Materials / Reading & Phonics");
        bisacMap.put("EDU029030","EDUCATION / Teaching Methods & Materials / Science & Technology");
        bisacMap.put("EDU029040","EDUCATION / Teaching Methods & Materials / Social Science");
        bisacMap.put("EDU030000","EDUCATION / Testing & Measurement");
        bisacMap.put("EDU053000","EDUCATION / Training & Certification");
        bisacMap.put("EDU054000","EDUCATION / Urban");
        bisacMap.put("EDU055000","EDUCATION / Violence & Harassment");
        bisacMap.put("EDU056000","EDUCATION / Vocational");
        bisacMap.put("FAM000000","FAMILY & RELATIONSHIPS / General");
        bisacMap.put("FAM001000","FAMILY & RELATIONSHIPS / Abuse / General");
        bisacMap.put("FAM001010","FAMILY & RELATIONSHIPS / Abuse / Child Abuse");
        bisacMap.put("FAM001030","FAMILY & RELATIONSHIPS / Abuse / Domestic Partner Abuse");
        bisacMap.put("FAM001020","FAMILY & RELATIONSHIPS / Abuse / Elder Abuse");
        bisacMap.put("FAM002000","FAMILY & RELATIONSHIPS / Activities");
        bisacMap.put("FAM004000","FAMILY & RELATIONSHIPS / Adoption & Fostering");
        bisacMap.put("FAM005000","FAMILY & RELATIONSHIPS / Aging");
        bisacMap.put("FAM006000","FAMILY & RELATIONSHIPS / Alternative Family");
        bisacMap.put("FAM007000","FAMILY & RELATIONSHIPS / Anger (see also SELF-HELP / Anger Management)");
        bisacMap.put("FAM047000","FAMILY & RELATIONSHIPS / Attention Deficit Disorder (ADD-ADHD)");
        bisacMap.put("FAM048000","FAMILY & RELATIONSHIPS / Autism Spectrum Disorders");
        bisacMap.put("FAM008000","FAMILY & RELATIONSHIPS / Baby Names");
        bisacMap.put("FAM049000","FAMILY & RELATIONSHIPS / Bullying");
        bisacMap.put("FAM011000","FAMILY & RELATIONSHIPS / Child Development");
        bisacMap.put("FAM012000","FAMILY & RELATIONSHIPS / Children with Special Needs");
        bisacMap.put("FAM013000","FAMILY & RELATIONSHIPS / Conflict Resolution");
        bisacMap.put("FAM014000","FAMILY & RELATIONSHIPS / Death, Grief, Bereavement");
        bisacMap.put("FAM015000","FAMILY & RELATIONSHIPS / Divorce & Separation");
        bisacMap.put("FAM016000","FAMILY & RELATIONSHIPS / Education");
        bisacMap.put("FAM017000","FAMILY & RELATIONSHIPS / Eldercare");
        bisacMap.put("FAM018000","FAMILY & RELATIONSHIPS / Emotions");
        bisacMap.put("FAM031000","FAMILY & RELATIONSHIPS / Ethics & Morals");
        bisacMap.put("FAM019000","FAMILY & RELATIONSHIPS / Family Relationships");
        bisacMap.put("FAM021000","FAMILY & RELATIONSHIPS / Friendship");
        bisacMap.put("FAM027000","FAMILY & RELATIONSHIPS / Interpersonal Relations");
        bisacMap.put("FAM028000","FAMILY & RELATIONSHIPS / Learning Disabilities");
        bisacMap.put("FAM046000","FAMILY & RELATIONSHIPS / Life Stages / General");
        bisacMap.put("FAM003000","FAMILY & RELATIONSHIPS / Life Stages / Adolescence");
        bisacMap.put("FAM025000","FAMILY & RELATIONSHIPS / Life Stages / Infants & Toddlers");
        bisacMap.put("FAM039000","FAMILY & RELATIONSHIPS / Life Stages / School Age");
        bisacMap.put("FAM043000","FAMILY & RELATIONSHIPS / Life Stages / Teenagers");
        bisacMap.put("FAM029000","FAMILY & RELATIONSHIPS / Love & Romance");
        bisacMap.put("FAM030000","FAMILY & RELATIONSHIPS / Marriage");
        bisacMap.put("FAM034000","FAMILY & RELATIONSHIPS / Parenting / General");
        bisacMap.put("FAM010000","FAMILY & RELATIONSHIPS / Parenting / Child Rearing");
        bisacMap.put("FAM020000","FAMILY & RELATIONSHIPS / Parenting / Fatherhood");
        bisacMap.put("FAM022000","FAMILY & RELATIONSHIPS / Parenting / Grandparenting");
        bisacMap.put("FAM032000","FAMILY & RELATIONSHIPS / Parenting / Motherhood");
        bisacMap.put("FAM033000","FAMILY & RELATIONSHIPS / Parenting / Parent & Adult Child");
        bisacMap.put("FAM034010","FAMILY & RELATIONSHIPS / Parenting / Single Parent");
        bisacMap.put("FAM042000","FAMILY & RELATIONSHIPS / Parenting / Stepparenting");
        bisacMap.put("FAM035000","FAMILY & RELATIONSHIPS / Peer Pressure");
        bisacMap.put("FAM037000","FAMILY & RELATIONSHIPS / Prejudice");
        bisacMap.put("FAM038000","FAMILY & RELATIONSHIPS / Reference");
        bisacMap.put("FAM041000","FAMILY & RELATIONSHIPS / Siblings");
        bisacMap.put("FAM044000","FAMILY & RELATIONSHIPS / Toilet Training");
        bisacMap.put("FIC000000","FICTION / General");
        bisacMap.put("FIC002000","FICTION / Action & Adventure");
        bisacMap.put("FIC049000","FICTION / African American / General");
        bisacMap.put("FIC049010","FICTION / African American / Christian");
        bisacMap.put("FIC049020","FICTION / African American / Contemporary Women");
        bisacMap.put("FIC049030","FICTION / African American / Erotica");
        bisacMap.put("FIC049040","FICTION / African American / Historical");
        bisacMap.put("FIC049050","FICTION / African American / Mystery & Detective");
        bisacMap.put("FIC049070","FICTION / African American / Urban");
        bisacMap.put("FIC040000","FICTION / Alternative History");
        bisacMap.put("FIC053000","FICTION / Amish & Mennonite");
        bisacMap.put("FIC003000","FICTION / Anthologies (multiple authors)");
        bisacMap.put("FIC054000","FICTION / Asian American");
        bisacMap.put("FIC041000","FICTION / Biographical");
        bisacMap.put("FIC042000","FICTION / Christian / General");
        bisacMap.put("FIC042010","FICTION / Christian / Classic & Allegory");
        bisacMap.put("FIC042050","FICTION / Christian / Collections & Anthologies");
        bisacMap.put("FIC042080","FICTION / Christian / Fantasy");
        bisacMap.put("FIC042020","FICTION / Christian / Futuristic");
        bisacMap.put("FIC042030","FICTION / Christian / Historical");
        bisacMap.put("FIC042040","FICTION / Christian / Romance");
        bisacMap.put("FIC042060","FICTION / Christian / Suspense");
        bisacMap.put("FIC042070","FICTION / Christian / Western");
        bisacMap.put("FIC004000","FICTION / Classics");
        bisacMap.put("FIC043000","FICTION / Coming of Age");
        bisacMap.put("FIC044000","FICTION / Contemporary Women");
        bisacMap.put("FIC050000","FICTION / Crime");
        bisacMap.put("FIC051000","FICTION / Cultural Heritage");
        bisacMap.put("FIC055000","FICTION / Dystopian");
        bisacMap.put("FIC005000","FICTION / Erotica");
        bisacMap.put("FIC010000","FICTION / Fairy Tales, Folk Tales, Legends & Mythology");
        bisacMap.put("FIC045000","FICTION / Family Life");
        bisacMap.put("FIC009000","FICTION / Fantasy / General");
        bisacMap.put("FIC009040","FICTION / Fantasy / Collections & Anthologies");
        bisacMap.put("FIC009010","FICTION / Fantasy / Contemporary");
        bisacMap.put("FIC009070","FICTION / Fantasy / Dark Fantasy");
        bisacMap.put("FIC009020","FICTION / Fantasy / Epic");
        bisacMap.put("FIC009030","FICTION / Fantasy / Historical");
        bisacMap.put("FIC009050","FICTION / Fantasy / Paranormal");
        bisacMap.put("FIC009060","FICTION / Fantasy / Urban");
        bisacMap.put("FIC011000","FICTION / Gay");
        bisacMap.put("FIC012000","FICTION / Ghost");
        bisacMap.put("FIC027040","FICTION / Gothic");
        bisacMap.put("FIC056000","FICTION / Hispanic & Latino");
        bisacMap.put("FIC014000","FICTION / Historical");
        bisacMap.put("FIC058000","FICTION / Holidays");
        bisacMap.put("FIC015000","FICTION / Horror");
        bisacMap.put("FIC016000","FICTION / Humorous");
        bisacMap.put("FIC046000","FICTION / Jewish");
        bisacMap.put("FIC034000","FICTION / Legal");
        bisacMap.put("FIC018000","FICTION / Lesbian");
        bisacMap.put("FIC019000","FICTION / Literary");
        bisacMap.put("FIC05700","FICTION / Mashups");
        bisacMap.put("FIC021000","FICTION / Media Tie-In");
        bisacMap.put("FIC035000","FICTION / Medical");
        bisacMap.put("FIC022000","FICTION / Mystery & Detective / General");
        bisacMap.put("FIC022050","FICTION / Mystery & Detective / Collections & Anthologies");
        bisacMap.put("FIC022070","FICTION / Mystery & Detective / Cozy");
        bisacMap.put("FIC022010","FICTION / Mystery & Detective / Hard-Boiled");
        bisacMap.put("FIC022060","FICTION / Mystery & Detective / Historical");
        bisacMap.put("FIC022080","FICTION / Mystery & Detective / International Mystery & Crime");
        bisacMap.put("FIC022020","FICTION / Mystery & Detective / Police Procedural");
        bisacMap.put("FIC022090","FICTION / Mystery & Detective / Private Investigators");
        bisacMap.put("FIC022030","FICTION / Mystery & Detective / Traditional British");
        bisacMap.put("FIC022040","FICTION / Mystery & Detective / Women Sleuths");
        bisacMap.put("FIC059000","FICTION / Native American & Aboriginal");
        bisacMap.put("FIC024000","FICTION / Occult & Supernatural");
        bisacMap.put("FIC037000","FICTION / Political");
        bisacMap.put("FIC025000","FICTION / Psychological");
        bisacMap.put("FIC026000","FICTION / Religious");
        bisacMap.put("FIC027000","FICTION / Romance / General");
        bisacMap.put("FIC049060","FICTION / Romance / African American");
        bisacMap.put("FIC027080","FICTION / Romance / Collections & Anthologies");
        bisacMap.put("FIC027020","FICTION / Romance / Contemporary");
        bisacMap.put("FIC027010","FICTION / Romance / Erotica");
        bisacMap.put("FIC027030","FICTION / Romance / Fantasy");
        bisacMap.put("FIC027050","FICTION / Romance / Historical / General");
        bisacMap.put("FIC027140","FICTION / Romance / Historical / Ancient World");
        bisacMap.put("FIC027150","FICTION / Romance / Historical / Medieval");
        bisacMap.put("FIC027070","FICTION / Romance / Historical / Regency");
        bisacMap.put("FIC027160","FICTION / Romance / Historical / Scottish");
        bisacMap.put("FIC027170","FICTION / Romance / Historical / Victorian");
        bisacMap.put("FIC027180","FICTION / Romance / Historical / Viking");
        bisacMap.put("FIC027120","FICTION / Romance / Paranormal");
        bisacMap.put("FIC027130","FICTION / Romance / Science Fiction");
        bisacMap.put("FIC027110","FICTION / Romance / Suspense");
        bisacMap.put("FIC027090","FICTION / Romance / Time Travel");
        bisacMap.put("FIC027100","FICTION / Romance / Western");
        bisacMap.put("FIC008000","FICTION / Sagas");
        bisacMap.put("FIC052000","FICTION / Satire");
        bisacMap.put("LAW027000","LAW / Criminal Procedure");
        bisacMap.put("FIC028000","FICTION / Science Fiction / General");
        bisacMap.put("FIC028010","FICTION / Science Fiction / Action & Adventure");
        bisacMap.put("FIC028070","FICTION / Science Fiction / Apocalyptic & Post-Apocalyptic");
        bisacMap.put("FIC028040","FICTION / Science Fiction / Collections & Anthologies");
        bisacMap.put("FIC028020","FICTION / Science Fiction / Hard Science Fiction");
        bisacMap.put("FIC028050","FICTION / Science Fiction / Military");
        bisacMap.put("FIC028030","FICTION / Science Fiction / Space Opera");
        bisacMap.put("FIC028060","FICTION / Science Fiction / Steampunk");
        bisacMap.put("FIC028080","FICTION / Science Fiction / Time Travel");
        bisacMap.put("FIC047000","FICTION / Sea Stories");
        bisacMap.put("FIC029000","FICTION / Short Stories (single author)");
        bisacMap.put("FIC038000","FICTION / Sports");
        bisacMap.put("FIC031000","FICTION / Thrillers / General");
        bisacMap.put("FIC031010","FICTION / Thrillers / Crime");
        bisacMap.put("FIC006000","FICTION / Thrillers / Espionage");
        bisacMap.put("FIC031020","FICTION / Thrillers / Historical");
        bisacMap.put("FIC031030","FICTION / Thrillers / Legal");
        bisacMap.put("FIC031040","FICTION / Thrillers / Medical");
        bisacMap.put("FIC031050","FICTION / Thrillers / Military");
        bisacMap.put("FIC031060","FICTION / Thrillers / Political");
        bisacMap.put("FIC030000","FICTION / Thrillers / Suspense");
        bisacMap.put("FIC036000","FICTION / Thrillers / Technological");
        bisacMap.put("FIC048000","FICTION / Urban");
        bisacMap.put("FIC039000","FICTION / Visionary & Metaphysical");
        bisacMap.put("FIC032000","FICTION / War & Military");
        bisacMap.put("FIC033000","FICTION / Westerns");
        bisacMap.put("FOR000000","FOREIGN LANGUAGE STUDY / General");
        bisacMap.put("FOR001000","FOREIGN LANGUAGE STUDY / African Languages (see also Swahili)");
        bisacMap.put("FOR033000","FOREIGN LANGUAGE STUDY / Ancient Languages (see also Latin)");
        bisacMap.put("FOR002000","FOREIGN LANGUAGE STUDY / Arabic");
        bisacMap.put("FOR034000","FOREIGN LANGUAGE STUDY / Baltic Languages");
        bisacMap.put("FOR029000","FOREIGN LANGUAGE STUDY / Celtic Languages");
        bisacMap.put("FOR003000","FOREIGN LANGUAGE STUDY / Chinese");
        bisacMap.put("FOR035000","FOREIGN LANGUAGE STUDY / Creole Languages");
        bisacMap.put("FOR036000","FOREIGN LANGUAGE STUDY / Czech");
        bisacMap.put("FOR004000","FOREIGN LANGUAGE STUDY / Danish");
        bisacMap.put("FOR006000","FOREIGN LANGUAGE STUDY / Dutch");
        bisacMap.put("FOR007000","FOREIGN LANGUAGE STUDY / English as a Second Language");
        bisacMap.put("FOR037000","FOREIGN LANGUAGE STUDY / Finnish");
        bisacMap.put("FOR008000","FOREIGN LANGUAGE STUDY / French");
        bisacMap.put("FOR009000","FOREIGN LANGUAGE STUDY / German");
        bisacMap.put("FOR010000","FOREIGN LANGUAGE STUDY / Greek (Modern)");
        bisacMap.put("FOR011000","FOREIGN LANGUAGE STUDY / Hebrew");
        bisacMap.put("FOR038000","FOREIGN LANGUAGE STUDY / Hindi");
        bisacMap.put("FOR012000","FOREIGN LANGUAGE STUDY / Hungarian");
        bisacMap.put("FOR030000","FOREIGN LANGUAGE STUDY / Indic Languages");
        bisacMap.put("FOR013000","FOREIGN LANGUAGE STUDY / Italian");
        bisacMap.put("FOR014000","FOREIGN LANGUAGE STUDY / Japanese");
        bisacMap.put("FOR015000","FOREIGN LANGUAGE STUDY / Korean");
        bisacMap.put("FOR016000","FOREIGN LANGUAGE STUDY / Latin");
        bisacMap.put("FOR017000","FOREIGN LANGUAGE STUDY / Miscellaneous");
        bisacMap.put("FOR005000","FOREIGN LANGUAGE STUDY / Multi-Language Dictionaries");
        bisacMap.put("FOR018000","FOREIGN LANGUAGE STUDY / Multi-Language Phrasebooks");
        bisacMap.put("FOR031000","FOREIGN LANGUAGE STUDY / Native American Languages");
        bisacMap.put("FOR039000","FOREIGN LANGUAGE STUDY / Norwegian");
        bisacMap.put("FOR032000","FOREIGN LANGUAGE STUDY / Oceanic & Australian Languages");
        bisacMap.put("FOR045000","FOREIGN LANGUAGE STUDY / Old & Middle English");
        bisacMap.put("FOR040000","FOREIGN LANGUAGE STUDY / Persian");
        bisacMap.put("FOR019000","FOREIGN LANGUAGE STUDY / Polish");
        bisacMap.put("FOR020000","FOREIGN LANGUAGE STUDY / Portuguese");
        bisacMap.put("FOR041000","FOREIGN LANGUAGE STUDY / Romance Languages (Other)");
        bisacMap.put("FOR021000","FOREIGN LANGUAGE STUDY / Russian");
        bisacMap.put("FOR022000","FOREIGN LANGUAGE STUDY / Scandinavian Languages (Other)");
        bisacMap.put("FOR023000","FOREIGN LANGUAGE STUDY / Serbian & Croatian");
        bisacMap.put("FOR024000","FOREIGN LANGUAGE STUDY / Slavic Languages (Other)");
        bisacMap.put("FOR025000","FOREIGN LANGUAGE STUDY / Southeast Asian Languages (see also Vietnamese)");
        bisacMap.put("FOR026000","FOREIGN LANGUAGE STUDY / Spanish");
        bisacMap.put("FOR042000","FOREIGN LANGUAGE STUDY / Swahili");
        bisacMap.put("FOR043000","FOREIGN LANGUAGE STUDY / Swedish");
        bisacMap.put("LAW028000","LAW / Customary");
        bisacMap.put("FOR027000","FOREIGN LANGUAGE STUDY / Turkish & Turkic Languages");
        bisacMap.put("FOR044000","FOREIGN LANGUAGE STUDY / Vietnamese");
        bisacMap.put("FOR028000","FOREIGN LANGUAGE STUDY / Yiddish");
        bisacMap.put("GAM000000","GAMES / General");
        bisacMap.put("GAM001010","GAMES / Backgammon");
        bisacMap.put("GAM001000","GAMES / Board");
        bisacMap.put("GAM002000","GAMES / Card Games / General");
        bisacMap.put("GAM002030","GAMES / Card Games / Blackjack");
        bisacMap.put("GAM002010","GAMES / Card Games / Bridge");
        bisacMap.put("GAM002040","GAMES / Card Games / Poker");
        bisacMap.put("GAM002020","GAMES / Card Games / Solitaire");
        bisacMap.put("GAM001020","GAMES / Checkers");
        bisacMap.put("GAM001030","GAMES / Chess");
        bisacMap.put("GAM003000","GAMES / Crosswords / General");
        bisacMap.put("GAM003040","GAMES / Crosswords / Dictionaries");
        bisacMap.put("GAM016000","GAMES / Fantasy Sports");
        bisacMap.put("GAM004000","GAMES / Gambling / General");
        bisacMap.put("GAM004020","GAMES / Gambling / Lotteries");
        bisacMap.put("GAM004050","GAMES / Gambling / Sports");
        bisacMap.put("GAM004030","GAMES / Gambling / Table");
        bisacMap.put("GAM004040","GAMES / Gambling / Track Betting");
        bisacMap.put("GAM005000","GAMES / Logic & Brain Teasers");
        bisacMap.put("GAM006000","GAMES / Magic");
        bisacMap.put("GAM018000","GAMES / Optical Illusions");
        bisacMap.put("GAM007000","GAMES / Puzzles");
        bisacMap.put("GAM008000","GAMES / Quizzes");
        bisacMap.put("GAM009000","GAMES / Reference");
        bisacMap.put("GAM010000","GAMES / Role Playing & Fantasy");
        bisacMap.put("GAM017000","GAMES / Sudoku");
        bisacMap.put("GAM011000","GAMES / Travel Games");
        bisacMap.put("GAM012000","GAMES / Trivia");
        bisacMap.put("GAM013000","GAMES / Video & Electronic");
        bisacMap.put("GAM014000","GAMES / Word & Word Search");
        bisacMap.put("GAR000000","GARDENING / General");
        bisacMap.put("GAR027000","GARDENING / Climatic / General");
        bisacMap.put("GAR027010","GARDENING / Climatic / Desert");
        bisacMap.put("GAR027020","GARDENING / Climatic / Temperate");
        bisacMap.put("GAR027030","GARDENING / Climatic / Tropical");
        bisacMap.put("GAR001000","GARDENING / Container");
        bisacMap.put("GAR002000","GARDENING / Essays & Narratives");
        bisacMap.put("GAR004000","GARDENING / Flowers / General");
        bisacMap.put("GAR004010","GARDENING / Flowers / Annuals");
        bisacMap.put("GAR004030","GARDENING / Flowers / Bulbs");
        bisacMap.put("GAR004040","GARDENING / Flowers / Orchids");
        bisacMap.put("GAR004050","GARDENING / Flowers / Perennials");
        bisacMap.put("GAR004060","GARDENING / Flowers / Roses");
        bisacMap.put("GAR004080","GARDENING / Flowers / Wildflowers");
        bisacMap.put("GAR005000","GARDENING / Fruit");
        bisacMap.put("GAR006000","GARDENING / Garden Design");
        bisacMap.put("GAR007000","GARDENING / Garden Furnishings");
        bisacMap.put("GAR008000","GARDENING / Greenhouses");
        bisacMap.put("GAR009000","GARDENING / Herbs");
        bisacMap.put("GAR010000","GARDENING / House Plants & Indoor");
        bisacMap.put("GAR013000","GARDENING / Japanese Gardens");
        bisacMap.put("GAR014000","GARDENING / Landscape");
        bisacMap.put("GAR015000","GARDENING / Lawns");
        bisacMap.put("GAR016000","GARDENING / Organic");
        bisacMap.put("GAR017000","GARDENING / Ornamental Plants");
        bisacMap.put("GAR018000","GARDENING / Reference");
        bisacMap.put("GAR019000","GARDENING / Regional / General");
        bisacMap.put("GAR019010","GARDENING / Regional / Canada");
        bisacMap.put("GAR019020","GARDENING / Regional / Middle Atlantic (DC, DE, MD, NJ, NY, PA)");
        bisacMap.put("GAR019030","GARDENING / Regional / Midwest (IA, IL, IN, KS, MI, MN, MO, ND, NE, OH, SD, WI)");
        bisacMap.put("GAR019040","GARDENING / Regional / New England (CT, MA, ME, NH, RI, VT)");
        bisacMap.put("GAR019050","GARDENING / Regional / Pacific Northwest (OR, WA)");
        bisacMap.put("GAR019060","GARDENING / Regional / South (AL, AR, FL, GA, KY, LA, MS, NC, SC, TN, VA, WV)");
        bisacMap.put("GAR019070","GARDENING / Regional / Southwest (AZ, NM, OK, TX)");
        bisacMap.put("GAR019080","GARDENING / Regional / West (AK, CA, CO, HI, ID, MT, NV, UT, WY)");
        bisacMap.put("GAR020000","GARDENING / Shade");
        bisacMap.put("GAR021000","GARDENING / Shrubs");
        bisacMap.put("GAR022000","GARDENING / Techniques");
        bisacMap.put("GAR023000","GARDENING / Topiary");
        bisacMap.put("GAR024000","GARDENING / Trees");
        bisacMap.put("GAR028000","GARDENING / Urban");
        bisacMap.put("GAR025000","GARDENING / Vegetables");
        bisacMap.put("HEA000000","HEALTH & FITNESS / General");
        bisacMap.put("HEA001000","HEALTH & FITNESS / Acupressure & Acupuncture (see also MEDICAL / Acupuncture)");
        bisacMap.put("HEA002000","HEALTH & FITNESS / Aerobics");
        bisacMap.put("HEA027000","HEALTH & FITNESS / Allergies");
        bisacMap.put("HEA032000","HEALTH & FITNESS / Alternative Therapies");
        bisacMap.put("HEA029000","HEALTH & FITNESS / Aromatherapy");
        bisacMap.put("HEA003000","HEALTH & FITNESS / Beauty & Grooming");
        bisacMap.put("HEA047000","HEALTH & FITNESS / Body Cleansing & Detoxification");
        bisacMap.put("HEA044000","HEALTH & FITNESS / Breastfeeding");
        bisacMap.put("HEA046000","HEALTH & FITNESS / Children's Health");
        bisacMap.put("HEA048000","HEALTH & FITNESS / Diet & Nutrition / General");
        bisacMap.put("HEA006000","HEALTH & FITNESS / Diet & Nutrition / Diets");
        bisacMap.put("HEA034000","HEALTH & FITNESS / Diet & Nutrition / Food Content Guides");
        bisacMap.put("HEA013000","HEALTH & FITNESS / Diet & Nutrition / Macrobiotics");
        bisacMap.put("HEA017000","HEALTH & FITNESS / Diet & Nutrition / Nutrition");
        bisacMap.put("HEA023000","HEALTH & FITNESS / Diet & Nutrition / Vitamins");
        bisacMap.put("HEA019000","HEALTH & FITNESS / Diet & Nutrition / Weight Loss");
        bisacMap.put("HEA039000","HEALTH & FITNESS / Diseases / General");
        bisacMap.put("HEA039020","HEALTH & FITNESS / Diseases / AIDS & HIV");
        bisacMap.put("HEA039140","HEALTH & FITNESS / Diseases / Alzheimer's & Dementia");
        bisacMap.put("HEA039030","HEALTH & FITNESS / Diseases / Cancer");
        bisacMap.put("HEA039150","HEALTH & FITNESS / Diseases / Chronic Fatigue Syndrome");
        bisacMap.put("HEA039040","HEALTH & FITNESS / Diseases / Contagious");
        bisacMap.put("HEA039050","HEALTH & FITNESS / Diseases / Diabetes");
        bisacMap.put("HEA039010","HEALTH & FITNESS / Diseases / Gastrointestinal");
        bisacMap.put("HEA039060","HEALTH & FITNESS / Diseases / Genetic");
        bisacMap.put("HEA039070","HEALTH & FITNESS / Diseases / Genitourinary & STDs");
        bisacMap.put("HEA039080","HEALTH & FITNESS / Diseases / Heart");
        bisacMap.put("HEA039090","HEALTH & FITNESS / Diseases / Immune System");
        bisacMap.put("HEA039100","HEALTH & FITNESS / Diseases / Musculoskeletal");
        bisacMap.put("HEA039110","HEALTH & FITNESS / Diseases / Nervous System (incl. Brain)");
        bisacMap.put("HEA039120","HEALTH & FITNESS / Diseases / Respiratory");
        bisacMap.put("HEA039130","HEALTH & FITNESS / Diseases / Skin");
        bisacMap.put("HEA007000","HEALTH & FITNESS / Exercise");
        bisacMap.put("HEA033000","HEALTH & FITNESS / First Aid");
        bisacMap.put("HEA009000","HEALTH & FITNESS / Healing");
        bisacMap.put("HEA028000","HEALTH & FITNESS / Health Care Issues");
        bisacMap.put("HEA010000","HEALTH & FITNESS / Healthy Living");
        bisacMap.put("HEA035000","HEALTH & FITNESS / Hearing & Speech");
        bisacMap.put("HEA011000","HEALTH & FITNESS / Herbal Medications");
        bisacMap.put("HEA012000","HEALTH & FITNESS / Holism");
        bisacMap.put("HEA030000","HEALTH & FITNESS / Homeopathy");
        bisacMap.put("HEA045000","HEALTH & FITNESS / Infertility");
        bisacMap.put("HEA014000","HEALTH & FITNESS / Massage & Reflexotherapy");
        bisacMap.put("HEA015000","HEALTH & FITNESS / Men's Health");
        bisacMap.put("HEA016000","HEALTH & FITNESS / Naturopathy");
        bisacMap.put("HEA040000","HEALTH & FITNESS / Oral Health");
        bisacMap.put("HEA036000","HEALTH & FITNESS / Pain Management");
        bisacMap.put("HEA018000","HEALTH & FITNESS / Physical Impairments");
        bisacMap.put("HEA041000","HEALTH & FITNESS / Pregnancy & Childbirth");
        bisacMap.put("HEA020000","HEALTH & FITNESS / Reference");
        bisacMap.put("HEA021000","HEALTH & FITNESS / Safety");
        bisacMap.put("HEA042000","HEALTH & FITNESS / Sexuality");
        bisacMap.put("HEA043000","HEALTH & FITNESS / Sleep & Sleep Disorders");
        bisacMap.put("HEA037000","HEALTH & FITNESS / Vision");
        bisacMap.put("HEA024000","HEALTH & FITNESS / Women's Health");
        bisacMap.put("HEA038000","HEALTH & FITNESS / Work-Related Health");
        bisacMap.put("HEA025000","HEALTH & FITNESS / Yoga");
        bisacMap.put("HIS000000","HISTORY / General");
        bisacMap.put("HIS001000","HISTORY / Africa / General");
        bisacMap.put("HIS001010","HISTORY / Africa / Central");
        bisacMap.put("HIS001020","HISTORY / Africa / East");
        bisacMap.put("HIS001030","HISTORY / Africa / North");
        bisacMap.put("HIS001040","HISTORY / Africa / South / General");
        bisacMap.put("HIS047000","HISTORY / Africa / South / Republic of South Africa");
        bisacMap.put("HIS001050","HISTORY / Africa / West");
        bisacMap.put("HIS038000","HISTORY / Americas (North, Central, South, West Indies)");
        bisacMap.put("HIS002000","HISTORY / Ancient / General");
        bisacMap.put("HIS002030","HISTORY / Ancient / Egypt");
        bisacMap.put("HIS002010","HISTORY / Ancient / Greece");
        bisacMap.put("HIS002020","HISTORY / Ancient / Rome");
        bisacMap.put("HIS003000","HISTORY / Asia / General");
        bisacMap.put("HIS050000","HISTORY / Asia / Central Asia");
        bisacMap.put("HIS008000","HISTORY / Asia / China");
        bisacMap.put("HIS017000","HISTORY / Asia / India & South Asia");
        bisacMap.put("HIS021000","HISTORY / Asia / Japan");
        bisacMap.put("HIS023000","HISTORY / Asia / Korea");
        bisacMap.put("HIS048000","HISTORY / Asia / Southeast Asia");
        bisacMap.put("HIS004000","HISTORY / Australia & New Zealand");
        bisacMap.put("HIS006000","HISTORY / Canada / General");
        bisacMap.put("HIS006010","HISTORY / Canada / Pre-Confederation (to 1867)");
        bisacMap.put("HIS006020","HISTORY / Canada / Post-Confederation (1867-)");
        bisacMap.put("HIS041000","HISTORY / Caribbean & West Indies / General");
        bisacMap.put("HIS041010","HISTORY / Caribbean & West Indies / Cuba");
        bisacMap.put("HIS039000","HISTORY / Civilization");
        bisacMap.put("HIS049000","HISTORY / Essays");
        bisacMap.put("HIS010000","HISTORY / Europe / General");
        bisacMap.put("HIS040000","HISTORY / Europe / Austria & Hungary");
        bisacMap.put("HIS005000","HISTORY / Europe / Baltic States");
        bisacMap.put("HIS010010","HISTORY / Europe / Eastern");
        bisacMap.put("HIS012000","HISTORY / Europe / Former Soviet Republics");
        bisacMap.put("HIS013000","HISTORY / Europe / France");
        bisacMap.put("HIS014000","HISTORY / Europe / Germany");
        bisacMap.put("HIS015000","HISTORY / Europe / Great Britain");
        bisacMap.put("HIS042000","HISTORY / Europe / Greece (see also Ancient / Greece)");
        bisacMap.put("HIS018000","HISTORY / Europe / Ireland");
        bisacMap.put("HIS020000","HISTORY / Europe / Italy");
        bisacMap.put("HIS032000","HISTORY / Europe / Russia & the Former Soviet Union");
        bisacMap.put("HIS044000","HISTORY / Europe / Scandinavia");
        bisacMap.put("HIS045000","HISTORY / Europe / Spain & Portugal");
        bisacMap.put("HIS010020","HISTORY / Europe / Western");
        bisacMap.put("HIS051000","HISTORY / Expeditions & Discoveries");
        bisacMap.put("HIS052000","HISTORY / Historical Geography");
        bisacMap.put("HIS016000","HISTORY / Historiography");
        bisacMap.put("HIS043000","HISTORY / Holocaust");
        bisacMap.put("HIS022000","HISTORY / Jewish");
        bisacMap.put("HIS024000","HISTORY / Latin America / General");
        bisacMap.put("HIS007000","HISTORY / Latin America / Central America");
        bisacMap.put("HIS025000","HISTORY / Latin America / Mexico");
        bisacMap.put("HIS033000","HISTORY / Latin America / South America");
        bisacMap.put("HIS037010","HISTORY / Medieval");
        bisacMap.put("HIS026000","HISTORY / Middle East / General");
        bisacMap.put("HIS026010","HISTORY / Middle East / Arabian Peninsula");
        bisacMap.put("HIS009000","HISTORY / Middle East / Egypt (see also Ancient / Egypt)");
        bisacMap.put("HIS026020","HISTORY / Middle East / Iran");
        bisacMap.put("HIS026030","HISTORY / Middle East / Iraq");
        bisacMap.put("HIS019000","HISTORY / Middle East / Israel & Palestine");
        bisacMap.put("HIS055000","HISTORY / Middle East / Turkey & Ottoman Empire");
        bisacMap.put("HIS027000","HISTORY / Military / General");
        bisacMap.put("HIS027190","HISTORY / Military / Afghan War (2001-)");
        bisacMap.put("HIS027140","HISTORY / Military / Aviation");
        bisacMap.put("HIS027010","HISTORY / Military / Biological & Chemical Warfare");
        bisacMap.put("HIS027160","HISTORY / Military / Canada");
        bisacMap.put("HIS027170","HISTORY / Military / Iraq War (2003-2011)");
        bisacMap.put("HIS027020","HISTORY / Military / Korean War");
        bisacMap.put("HIS027150","HISTORY / Military / Naval");
        bisacMap.put("HIS027030","HISTORY / Military / Nuclear Warfare");
        bisacMap.put("HIS027040","HISTORY / Military / Persian Gulf War (1991)");
        bisacMap.put("HIS027050","HISTORY / Military / Pictorial");
        bisacMap.put("HIS027180","HISTORY / Military / Special Forces");
        bisacMap.put("HIS027060","HISTORY / Military / Strategy");
        bisacMap.put("HIS027110","HISTORY / Military / United States");
        bisacMap.put("HIS027120","HISTORY / Military / Veterans");
        bisacMap.put("HIS027070","HISTORY / Military / Vietnam War");
        bisacMap.put("HIS027080","HISTORY / Military / Weapons");
        bisacMap.put("HIS027090","HISTORY / Military / World War I");
        bisacMap.put("HIS027100","HISTORY / Military / World War II");
        bisacMap.put("HIS027130","HISTORY / Military / Other");
        bisacMap.put("HIS037030","HISTORY / Modern / General");
        bisacMap.put("HIS037090","HISTORY / Modern / 16th Century");
        bisacMap.put("HIS037040","HISTORY / Modern / 17th Century");
        bisacMap.put("HIS037050","HISTORY / Modern / 18th Century");
        bisacMap.put("HIS037060","HISTORY / Modern / 19th Century");
        bisacMap.put("HIS037070","HISTORY / Modern / 20th Century");
        bisacMap.put("HIS037080","HISTORY / Modern / 21st Century");
        bisacMap.put("HIS028000","HISTORY / Native American");
        bisacMap.put("HIS029000","HISTORY / North America");
        bisacMap.put("HIS053000","HISTORY / Oceania");
        bisacMap.put("HIS046000","HISTORY / Polar Regions");
        bisacMap.put("HIS030000","HISTORY / Reference");
        bisacMap.put("HIS037020","HISTORY / Renaissance");
        bisacMap.put("HIS031000","HISTORY / Revolutionary");
        bisacMap.put("HIS054000","HISTORY / Social History");
        bisacMap.put("HIS035000","HISTORY / Study & Teaching");
        bisacMap.put("HIS036000","HISTORY / United States / General");
        bisacMap.put("JUV013010","JUVENILE FICTION / Family / Adoption");
        bisacMap.put("HIS036020","HISTORY / United States / Colonial Period (1600-1775)");
        bisacMap.put("HIS036030","HISTORY / United States / Revolutionary Period (1775-1800)");
        bisacMap.put("HIS036040","HISTORY / United States / 19th Century");
        bisacMap.put("HIS036050","HISTORY / United States / Civil War Period (1850-1877)");
        bisacMap.put("HIS036060","HISTORY / United States / 20th Century");
        bisacMap.put("HIS036070","HISTORY / United States / 21st Century");
        bisacMap.put("HIS036010","HISTORY / United States / State & Local / General");
        bisacMap.put("HIS036080","HISTORY / United States / State & Local / Middle Atlantic (DC, DE, MD, NJ, NY, PA)");
        bisacMap.put("HIS036090","HISTORY / United States / State & Local / Midwest (IA, IL, IN, KS, MI, MN, MO, ND, NE, OH, SD, WI)");
        bisacMap.put("HIS036100","HISTORY / United States / State & Local / New England (CT, MA, ME, NH, RI, VT)");
        bisacMap.put("HIS036110","HISTORY / United States / State & Local / Pacific Northwest (OR, WA)");
        bisacMap.put("HIS036120","HISTORY / United States / State & Local / South (AL, AR, FL, GA, KY, LA, MS, NC, SC, TN, VA, WV)");
        bisacMap.put("HIS036130","HISTORY / United States / State & Local / Southwest (AZ, NM, OK, TX)");
        bisacMap.put("HIS036140","HISTORY / United States / State & Local / West (AK, CA, CO, HI, ID, MT, NV, UT, WY)");
        bisacMap.put("HIS037000","HISTORY / World");
        bisacMap.put("HOM000000","HOUSE & HOME / General");
        bisacMap.put("HOM019000","HOUSE & HOME / Cleaning & Caretaking");
        bisacMap.put("HOM003000","HOUSE & HOME / Decorating");
        bisacMap.put("HOM004000","HOUSE & HOME / Design & Construction");
        bisacMap.put("HOM005000","HOUSE & HOME / Do-It-Yourself / General");
        bisacMap.put("HOM001000","HOUSE & HOME / Do-It-Yourself / Carpentry");
        bisacMap.put("HOM006000","HOUSE & HOME / Do-It-Yourself / Electrical");
        bisacMap.put("HOM012000","HOUSE & HOME / Do-It-Yourself / Masonry");
        bisacMap.put("HOM014000","HOUSE & HOME / Do-It-Yourself / Plumbing");
        bisacMap.put("HOM020000","HOUSE & HOME / Equipment, Appliances & Supplies");
        bisacMap.put("HOM008000","HOUSE & HOME / Furniture");
        bisacMap.put("HOM009000","HOUSE & HOME / Hand Tools");
        bisacMap.put("HOM011000","HOUSE & HOME / House Plans");
        bisacMap.put("HOM013000","HOUSE & HOME / Outdoor & Recreational Areas");
        bisacMap.put("HOM015000","HOUSE & HOME / Power Tools");
        bisacMap.put("HOM016000","HOUSE & HOME / Reference");
        bisacMap.put("HOM017000","HOUSE & HOME / Remodeling & Renovation");
        bisacMap.put("HOM010000","HOUSE & HOME / Repair");
        bisacMap.put("HOM021000","HOUSE & HOME / Security");
        bisacMap.put("HOM022000","HOUSE & HOME / Sustainable Living");
        bisacMap.put("HOM018000","HOUSE & HOME / Woodworking");
        bisacMap.put("HUM000000","HUMOR / General");
        bisacMap.put("HUM015000","HUMOR / Form / Anecdotes & Quotations");
        bisacMap.put("HUM001000","HUMOR / Form / Comic Strips & Cartoons");
        bisacMap.put("HUM003000","HUMOR / Form / Essays");
        bisacMap.put("HUM004000","HUMOR / Form / Jokes & Riddles");
        bisacMap.put("HUM005000","HUMOR / Form / Limericks & Verse");
        bisacMap.put("HUM007000","HUMOR / Form / Parodies");
        bisacMap.put("HUM017000","HUMOR / Form / Pictorial");
        bisacMap.put("HUM016000","HUMOR / Form / Trivia");
        bisacMap.put("HUM008000","HUMOR / Topic / Adult");
        bisacMap.put("HUM009000","HUMOR / Topic / Animals");
        bisacMap.put("HUM010000","HUMOR / Topic / Business & Professional");
        bisacMap.put("HUM011000","HUMOR / Topic / Marriage & Family");
        bisacMap.put("HUM006000","HUMOR / Topic / Political");
        bisacMap.put("HUM012000","HUMOR / Topic / Relationships");
        bisacMap.put("HUM014000","HUMOR / Topic / Religion");
        bisacMap.put("HUM013000","HUMOR / Topic / Sports");
        bisacMap.put("JUV000000","JUVENILE FICTION / General");
        bisacMap.put("JUV001000","JUVENILE FICTION / Action & Adventure / General");
        bisacMap.put("JUV001020","JUVENILE FICTION / Action & Adventure / Pirates");
        bisacMap.put("JUV001010","JUVENILE FICTION / Action & Adventure / Survival Stories");
        bisacMap.put("JUV054000","JUVENILE FICTION / Activity Books");
        bisacMap.put("JUV002000","JUVENILE FICTION / Animals / General");
        bisacMap.put("JUV002010","JUVENILE FICTION / Animals / Alligators & Crocodiles");
        bisacMap.put("JUV002020","JUVENILE FICTION / Animals / Apes, Monkeys, etc.");
        bisacMap.put("JUV002370","JUVENILE FICTION / Animals / Baby Animals");
        bisacMap.put("JUV002030","JUVENILE FICTION / Animals / Bears");
        bisacMap.put("JUV002040","JUVENILE FICTION / Animals / Birds");
        bisacMap.put("JUV002300","JUVENILE FICTION / Animals / Butterflies, Moths & Caterpillars");
        bisacMap.put("JUV002050","JUVENILE FICTION / Animals / Cats");
        bisacMap.put("JUV002310","JUVENILE FICTION / Animals / Cows");
        bisacMap.put("JUV002290","JUVENILE FICTION / Animals / Deer, Moose & Caribou");
        bisacMap.put("JUV002060","JUVENILE FICTION / Animals / Dinosaurs & Prehistoric Creatures");
        bisacMap.put("JUV002070","JUVENILE FICTION / Animals / Dogs");
        bisacMap.put("JUV002270","JUVENILE FICTION / Animals / Dragons, Unicorns & Mythical");
        bisacMap.put("JUV002280","JUVENILE FICTION / Animals / Ducks, Geese, etc.");
        bisacMap.put("JUV002080","JUVENILE FICTION / Animals / Elephants");
        bisacMap.put("JUV002090","JUVENILE FICTION / Animals / Farm Animals");
        bisacMap.put("JUV002100","JUVENILE FICTION / Animals / Fishes");
        bisacMap.put("JUV002110","JUVENILE FICTION / Animals / Foxes");
        bisacMap.put("JUV002120","JUVENILE FICTION / Animals / Frogs & Toads");
        bisacMap.put("JUV002320","JUVENILE FICTION / Animals / Giraffes");
        bisacMap.put("JUV002330","JUVENILE FICTION / Animals / Hippos & Rhinos");
        bisacMap.put("JUV002130","JUVENILE FICTION / Animals / Horses");
        bisacMap.put("JUV002140","JUVENILE FICTION / Animals / Insects, Spiders, etc.");
        bisacMap.put("JUV002340","JUVENILE FICTION / Animals / Jungle Animals");
        bisacMap.put("JUV002350","JUVENILE FICTION / Animals / Kangaroos");
        bisacMap.put("JUV002150","JUVENILE FICTION / Animals / Lions, Tigers, Leopards, etc.");
        bisacMap.put("JUV002160","JUVENILE FICTION / Animals / Mammals");
        bisacMap.put("JUV002170","JUVENILE FICTION / Animals / Marine Life");
        bisacMap.put("JUV002180","JUVENILE FICTION / Animals / Mice, Hamsters, Guinea Pigs, etc.");
        bisacMap.put("JUV002360","JUVENILE FICTION / Animals / Nocturnal");
        bisacMap.put("JUV002190","JUVENILE FICTION / Animals / Pets");
        bisacMap.put("JUV002200","JUVENILE FICTION / Animals / Pigs");
        bisacMap.put("JUV002210","JUVENILE FICTION / Animals / Rabbits");
        bisacMap.put("JUV002220","JUVENILE FICTION / Animals / Reptiles & Amphibians");
        bisacMap.put("JUV002230","JUVENILE FICTION / Animals / Squirrels");
        bisacMap.put("JUV002240","JUVENILE FICTION / Animals / Turtles");
        bisacMap.put("JUV002250","JUVENILE FICTION / Animals / Wolves & Coyotes");
        bisacMap.put("JUV002260","JUVENILE FICTION / Animals / Zoos");
        bisacMap.put("JUV003000","JUVENILE FICTION / Art & Architecture");
        bisacMap.put("JUV010000","JUVENILE FICTION / Bedtime & Dreams");
        bisacMap.put("JUV004000","JUVENILE FICTION / Biographical / General");
        bisacMap.put("JUV004040","JUVENILE FICTION / Biographical / Canada");
        bisacMap.put("JUV004010","JUVENILE FICTION / Biographical / European");
        bisacMap.put("JUV004020","JUVENILE FICTION / Biographical / United States");
        bisacMap.put("JUV004030","JUVENILE FICTION / Biographical / Other");
        bisacMap.put("JUV047000","JUVENILE FICTION / Books & Libraries");
        bisacMap.put("JUV005000","JUVENILE FICTION / Boys & Men");
        bisacMap.put("JUV006000","JUVENILE FICTION / Business, Careers, Occupations");
        bisacMap.put("JUV007000","JUVENILE FICTION / Classics");
        bisacMap.put("JUV048000","JUVENILE FICTION / Clothing & Dress");
        bisacMap.put("JUV008000","JUVENILE FICTION / Comics & Graphic Novels / General");
        bisacMap.put("JUV008010","JUVENILE FICTION / Comics & Graphic Novels / Manga");
        bisacMap.put("JUV008030","JUVENILE FICTION / Comics & Graphic Novels / Media Tie-In");
        bisacMap.put("JUV008020","JUVENILE FICTION / Comics & Graphic Novels / Superheroes");
        bisacMap.put("JUV049000","JUVENILE FICTION / Computers");
        bisacMap.put("JUV009000","JUVENILE FICTION / Concepts / General");
        bisacMap.put("JUV009010","JUVENILE FICTION / Concepts / Alphabet");
        bisacMap.put("JUV009120","JUVENILE FICTION / Concepts / Body");
        bisacMap.put("JUV009020","JUVENILE FICTION / Concepts / Colors");
        bisacMap.put("JUV009030","JUVENILE FICTION / Concepts / Counting & Numbers");
        bisacMap.put("JUV009070","JUVENILE FICTION / Concepts / Date & Time");
        bisacMap.put("JUV009090","JUVENILE FICTION / Concepts / Money");
        bisacMap.put("JUV009040","JUVENILE FICTION / Concepts / Opposites");
        bisacMap.put("JUV009100","JUVENILE FICTION / Concepts / Seasons");
        bisacMap.put("JUV009050","JUVENILE FICTION / Concepts / Senses & Sensation");
        bisacMap.put("JUV009060","JUVENILE FICTION / Concepts / Size & Shape");
        bisacMap.put("JUV009110","JUVENILE FICTION / Concepts / Sounds");
        bisacMap.put("JUV009080","JUVENILE FICTION / Concepts / Words");
        bisacMap.put("JUV050000","JUVENILE FICTION / Cooking & Food");
        bisacMap.put("JUV059000","JUVENILE FICTION / Dystopian");
        bisacMap.put("JUV012030","JUVENILE FICTION / Fairy Tales & Folklore / General");
        bisacMap.put("JUV012040","JUVENILE FICTION / Fairy Tales & Folklore / Adaptations");
        bisacMap.put("JUV012000","JUVENILE FICTION / Fairy Tales & Folklore / Anthologies");
        bisacMap.put("JUV012020","JUVENILE FICTION / Fairy Tales & Folklore / Country & Ethnic");
        bisacMap.put("JUV013000","JUVENILE FICTION / Family / General (see also headings under Social Issues)");
        bisacMap.put("JUV013090","JUVENILE FICTION / Family / Alternative Family");
        bisacMap.put("JUV013020","JUVENILE FICTION / Family / Marriage & Divorce");
        bisacMap.put("JUV013030","JUVENILE FICTION / Family / Multigenerational");
        bisacMap.put("JUV013040","JUVENILE FICTION / Family / New Baby");
        bisacMap.put("JUV013050","JUVENILE FICTION / Family / Orphans & Foster Homes");
        bisacMap.put("JUV013060","JUVENILE FICTION / Family / Parents");
        bisacMap.put("JUV013070","JUVENILE FICTION / Family / Siblings");
        bisacMap.put("JUV013080","JUVENILE FICTION / Family / Stepfamilies");
        bisacMap.put("JUV037000","JUVENILE FICTION / Fantasy & Magic");
        bisacMap.put("JUV060000","JUVENILE FICTION / Gay & Lesbian");
        bisacMap.put("JUV014000","JUVENILE FICTION / Girls & Women");
        bisacMap.put("JUV015000","JUVENILE FICTION / Health & Daily Living / General");
        bisacMap.put("JUV015010","JUVENILE FICTION / Health & Daily Living / Daily Activities");
        bisacMap.put("JUV015020","JUVENILE FICTION / Health & Daily Living / Diseases, Illnesses & Injuries");
        bisacMap.put("JUV039170","JUVENILE FICTION / Health & Daily Living / Toilet Training");
        bisacMap.put("JUV016000","JUVENILE FICTION / Historical / General");
        bisacMap.put("JUV016010","JUVENILE FICTION / Historical / Africa");
        bisacMap.put("JUV016020","JUVENILE FICTION / Historical / Ancient Civilizations");
        bisacMap.put("JUV016030","JUVENILE FICTION / Historical / Asia");
        bisacMap.put("JUV016160","JUVENILE FICTION / Historical / Canada / General");
        bisacMap.put("JUV016170","JUVENILE FICTION / Historical / Canada / Pre-Confederation (to 1867)");
        bisacMap.put("JUV016180","JUVENILE FICTION / Historical / Canada / Post-Confederation (1867-)");
        bisacMap.put("JUV016040","JUVENILE FICTION / Historical / Europe");
        bisacMap.put("JUV016050","JUVENILE FICTION / Historical / Exploration & Discovery");
        bisacMap.put("JUV016060","JUVENILE FICTION / Historical / Holocaust");
        bisacMap.put("JUV016070","JUVENILE FICTION / Historical / Medieval");
        bisacMap.put("JUV016210","JUVENILE FICTION / Historical / Middle East");
        bisacMap.put("JUV016080","JUVENILE FICTION / Historical / Military & Wars");
        bisacMap.put("JUV016090","JUVENILE FICTION / Historical / Prehistory");
        bisacMap.put("JUV016100","JUVENILE FICTION / Historical / Renaissance");
        bisacMap.put("JUV016110","JUVENILE FICTION / Historical / United States / General");
        bisacMap.put("JUV016120","JUVENILE FICTION / Historical / United States / Colonial & Revolutionary Periods");
        bisacMap.put("JUV016140","JUVENILE FICTION / Historical / United States / 19th Century");
        bisacMap.put("JUV016200","JUVENILE FICTION / Historical / United States / Civil War Period (1850-1877)");
        bisacMap.put("JUV016150","JUVENILE FICTION / Historical / United States / 20th Century");
        bisacMap.put("JUV016190","JUVENILE FICTION / Historical / United States / 21st Century");
        bisacMap.put("JUV016130","JUVENILE FICTION / Historical / Other");
        bisacMap.put("JUV017000","JUVENILE FICTION / Holidays & Celebrations / General (see also Religious / Christian / Holidays & Celebrations)");
        bisacMap.put("JUV017100","JUVENILE FICTION / Holidays & Celebrations / Birthdays");
        bisacMap.put("JUV017010","JUVENILE FICTION / Holidays & Celebrations / Christmas & Advent");
        bisacMap.put("JUV017020","JUVENILE FICTION / Holidays & Celebrations / Easter & Lent");
        bisacMap.put("JUV017030","JUVENILE FICTION / Holidays & Celebrations / Halloween");
        bisacMap.put("JUV017110","JUVENILE FICTION / Holidays & Celebrations / Hanukkah");
        bisacMap.put("JUV017050","JUVENILE FICTION / Holidays & Celebrations / Kwanzaa");
        bisacMap.put("JUV017120","JUVENILE FICTION / Holidays & Celebrations / Passover");
        bisacMap.put("JUV017130","JUVENILE FICTION / Holidays & Celebrations / Patriotic Holidays");
        bisacMap.put("JUV017060","JUVENILE FICTION / Holidays & Celebrations / Thanksgiving");
        bisacMap.put("JUV017070","JUVENILE FICTION / Holidays & Celebrations / Valentine's Day");
        bisacMap.put("JUV017080","JUVENILE FICTION / Holidays & Celebrations / Other, Non-Religious");
        bisacMap.put("JUV017090","JUVENILE FICTION / Holidays & Celebrations / Other, Religious");
        bisacMap.put("JUV018000","JUVENILE FICTION / Horror & Ghost Stories");
        bisacMap.put("JUV019000","JUVENILE FICTION / Humorous Stories");
        bisacMap.put("JUV051000","JUVENILE FICTION / Imagination & Play");
        bisacMap.put("JUV020000","JUVENILE FICTION / Interactive Adventures");
        bisacMap.put("JUV021000","JUVENILE FICTION / Law & Crime");
        bisacMap.put("JUV022000","JUVENILE FICTION / Legends, Myths, Fables / General");
        bisacMap.put("JUV022010","JUVENILE FICTION / Legends, Myths, Fables / Arthurian");
        bisacMap.put("LAW106000","LAW / Defamation");
        bisacMap.put("JUV022020","JUVENILE FICTION / Legends, Myths, Fables / Greek & Roman");
        bisacMap.put("JUV022030","JUVENILE FICTION / Legends, Myths, Fables / Norse");
        bisacMap.put("JUV022040","JUVENILE FICTION / Legends, Myths, Fables / Other");
        bisacMap.put("JUV023000","JUVENILE FICTION / Lifestyles / City & Town Life");
        bisacMap.put("JUV024000","JUVENILE FICTION / Lifestyles / Country Life");
        bisacMap.put("JUV025000","JUVENILE FICTION / Lifestyles / Farm & Ranch Life");
        bisacMap.put("JUV026000","JUVENILE FICTION / Love & Romance");
        bisacMap.put("JUV027000","JUVENILE FICTION / Media Tie-In");
        bisacMap.put("JUV052000","JUVENILE FICTION / Monsters");
        bisacMap.put("JUV028000","JUVENILE FICTION / Mysteries & Detective Stories");
        bisacMap.put("JUV029000","JUVENILE FICTION / Nature & the Natural World / General (see also headings under Animals)");
        bisacMap.put("JUV029010","JUVENILE FICTION / Nature & the Natural World / Environment");
        bisacMap.put("JUV029020","JUVENILE FICTION / Nature & the Natural World / Weather");
        bisacMap.put("JUV055000","JUVENILE FICTION / Nursery Rhymes");
        bisacMap.put("JUV058000","JUVENILE FICTION / Paranormal");
        bisacMap.put("JUV030000","JUVENILE FICTION / People & Places / General");
        bisacMap.put("JUV030010","JUVENILE FICTION / People & Places / Africa");
        bisacMap.put("JUV030020","JUVENILE FICTION / People & Places / Asia");
        bisacMap.put("JUV030080","JUVENILE FICTION / People & Places / Australia & Oceania");
        bisacMap.put("JUV030030","JUVENILE FICTION / People & Places / Canada / General");
        bisacMap.put("JUV030090","JUVENILE FICTION / People & Places / Canada / Native Canadian");
        bisacMap.put("JUV030040","JUVENILE FICTION / People & Places / Caribbean & Latin America");
        bisacMap.put("JUV030050","JUVENILE FICTION / People & Places / Europe");
        bisacMap.put("JUV030100","JUVENILE FICTION / People & Places / Mexico");
        bisacMap.put("JUV030110","JUVENILE FICTION / People & Places / Middle East");
        bisacMap.put("JUV030120","JUVENILE FICTION / People & Places / Polar Regions");
        bisacMap.put("JUV030060","JUVENILE FICTION / People & Places / United States / General");
        bisacMap.put("JUV011010","JUVENILE FICTION / People & Places / United States / African American");
        bisacMap.put("JUV011020","JUVENILE FICTION / People & Places / United States / Asian American");
        bisacMap.put("JUV011030","JUVENILE FICTION / People & Places / United States / Hispanic & Latino");
        bisacMap.put("JUV011040","JUVENILE FICTION / People & Places / United States / Native American");
        bisacMap.put("JUV011050","JUVENILE FICTION / People & Places / United States / Other");
        bisacMap.put("JUV030070","JUVENILE FICTION / People & Places / Other");
        bisacMap.put("JUV031000","JUVENILE FICTION / Performing Arts / General");
        bisacMap.put("JUV031010","JUVENILE FICTION / Performing Arts / Circus");
        bisacMap.put("JUV031020","JUVENILE FICTION / Performing Arts / Dance");
        bisacMap.put("JUV031030","JUVENILE FICTION / Performing Arts / Film");
        bisacMap.put("JUV031040","JUVENILE FICTION / Performing Arts / Music");
        bisacMap.put("JUV031050","JUVENILE FICTION / Performing Arts / Television & Radio");
        bisacMap.put("JUV031060","JUVENILE FICTION / Performing Arts / Theater");
        bisacMap.put("JUV061000","JUVENILE FICTION / Politics & Government");
        bisacMap.put("JUV043000","JUVENILE FICTION / Readers / Beginner");
        bisacMap.put("JUV044000","JUVENILE FICTION / Readers / Intermediate");
        bisacMap.put("JUV045000","JUVENILE FICTION / Readers / Chapter Books");
        bisacMap.put("JUV033000","JUVENILE FICTION / Religious / General");
        bisacMap.put("JUV033010","JUVENILE FICTION / Religious / Christian / General");
        bisacMap.put("JUV033040","JUVENILE FICTION / Religious / Christian / Action & Adventure");
        bisacMap.put("JUV033050","JUVENILE FICTION / Religious / Christian / Animals");
        bisacMap.put("JUV033060","JUVENILE FICTION / Religious / Christian / Bedtime & Dreams");
        bisacMap.put("JUV033070","JUVENILE FICTION / Religious / Christian / Comics & Graphic Novels");
        bisacMap.put("JUV033080","JUVENILE FICTION / Religious / Christian / Early Readers");
        bisacMap.put("JUV033090","JUVENILE FICTION / Religious / Christian / Emotions & Feelings");
        bisacMap.put("JUV033100","JUVENILE FICTION / Religious / Christian / Family");
        bisacMap.put("JUV033110","JUVENILE FICTION / Religious / Christian / Fantasy");
        bisacMap.put("JUV033120","JUVENILE FICTION / Religious / Christian / Friendship");
        bisacMap.put("JUV033130","JUVENILE FICTION / Religious / Christian / Health & Daily Living");
        bisacMap.put("JUV033140","JUVENILE FICTION / Religious / Christian / Historical");
        bisacMap.put("JUV033150","JUVENILE FICTION / Religious / Christian / Holidays & Celebrations");
        bisacMap.put("JUV033160","JUVENILE FICTION / Religious / Christian / Humorous");
        bisacMap.put("JUV033170","JUVENILE FICTION / Religious / Christian / Learning Concepts");
        bisacMap.put("JUV033180","JUVENILE FICTION / Religious / Christian / Mysteries & Detective Stories");
        bisacMap.put("JUV033190","JUVENILE FICTION / Religious / Christian / People & Places");
        bisacMap.put("JUV033200","JUVENILE FICTION / Religious / Christian / Relationships");
        bisacMap.put("JUV033210","JUVENILE FICTION / Religious / Christian / Science Fiction");
        bisacMap.put("JUV033220","JUVENILE FICTION / Religious / Christian / Social Issues");
        bisacMap.put("JUV033230","JUVENILE FICTION / Religious / Christian / Sports & Recreation");
        bisacMap.put("JUV033240","JUVENILE FICTION / Religious / Christian / Values & Virtues");
        bisacMap.put("JUV033020","JUVENILE FICTION / Religious / Jewish");
        bisacMap.put("JUV033030","JUVENILE FICTION / Religious / Other");
        bisacMap.put("JUV056000","JUVENILE FICTION / Robots");
        bisacMap.put("JUV034000","JUVENILE FICTION / Royalty");
        bisacMap.put("JUV035000","JUVENILE FICTION / School & Education");
        bisacMap.put("JUV036000","JUVENILE FICTION / Science & Technology");
        bisacMap.put("JUV053000","JUVENILE FICTION / Science Fiction");
        bisacMap.put("JUV038000","JUVENILE FICTION / Short Stories");
        bisacMap.put("JUV039000","JUVENILE FICTION / Social Issues / General (see also headings under Family)");
        bisacMap.put("JUV039020","JUVENILE FICTION / Social Issues / Adolescence");
        bisacMap.put("JUV039230","JUVENILE FICTION / Social Issues / Bullying");
        bisacMap.put("JUV039190","JUVENILE FICTION / Social Issues / Dating & Sex");
        bisacMap.put("JUV039030","JUVENILE FICTION / Social Issues / Death & Dying");
        bisacMap.put("JUV039240","JUVENILE FICTION / Social Issues / Depression & Mental Illness");
        bisacMap.put("JUV039040","JUVENILE FICTION / Social Issues / Drugs, Alcohol, Substance Abuse");
        bisacMap.put("JUV039250","JUVENILE FICTION / Social Issues / Emigration & Immigration");
        bisacMap.put("JUV039050","JUVENILE FICTION / Social Issues / Emotions & Feelings");
        bisacMap.put("JUV039060","JUVENILE FICTION / Social Issues / Friendship");
        bisacMap.put("JUV039070","JUVENILE FICTION / Social Issues / Homelessness & Poverty");
        bisacMap.put("JUV039080","JUVENILE FICTION / Social Issues / Homosexuality");
        bisacMap.put("JUV039200","JUVENILE FICTION / Social Issues / Manners & Etiquette");
        bisacMap.put("JUV039090","JUVENILE FICTION / Social Issues / New Experience");
        bisacMap.put("JUV039100","JUVENILE FICTION / Social Issues / Peer Pressure");
        bisacMap.put("JUV039010","JUVENILE FICTION / Social Issues / Physical & Emotional Abuse (see also Social Issues / Sexual Abuse)");
        bisacMap.put("JUV039110","JUVENILE FICTION / Social Issues / Pregnancy");
        bisacMap.put("JUV039120","JUVENILE FICTION / Social Issues / Prejudice & Racism");
        bisacMap.put("JUV039130","JUVENILE FICTION / Social Issues / Runaways");
        bisacMap.put("JUV039140","JUVENILE FICTION / Social Issues / Self-Esteem & Self-Reliance");
        bisacMap.put("JUV039260","JUVENILE FICTION / Social Issues / Self-Mutilation");
        bisacMap.put("JUV039210","JUVENILE FICTION / Social Issues / Sexual Abuse");
        bisacMap.put("JUV039150","JUVENILE FICTION / Social Issues / Special Needs");
        bisacMap.put("JUV039270","JUVENILE FICTION / Social Issues / Strangers");
        bisacMap.put("JUV039160","JUVENILE FICTION / Social Issues / Suicide");
        bisacMap.put("JUV039220","JUVENILE FICTION / Social Issues / Values & Virtues");
        bisacMap.put("JUV039180","JUVENILE FICTION / Social Issues / Violence");
        bisacMap.put("JUV032000","JUVENILE FICTION / Sports & Recreation / General");
        bisacMap.put("JUV032010","JUVENILE FICTION / Sports & Recreation / Baseball & Softball");
        bisacMap.put("JUV032020","JUVENILE FICTION / Sports & Recreation / Basketball");
        bisacMap.put("JUV032170","JUVENILE FICTION / Sports & Recreation / Camping & Outdoor Activities");
        bisacMap.put("JUV032180","JUVENILE FICTION / Sports & Recreation / Cycling");
        bisacMap.put("JUV032090","JUVENILE FICTION / Sports & Recreation / Equestrian");
        bisacMap.put("JUV032100","JUVENILE FICTION / Sports & Recreation / Extreme Sports");
        bisacMap.put("JUV032030","JUVENILE FICTION / Sports & Recreation / Football");
        bisacMap.put("JUV032040","JUVENILE FICTION / Sports & Recreation / Games");
        bisacMap.put("JUV032190","JUVENILE FICTION / Sports & Recreation / Golf");
        bisacMap.put("JUV032110","JUVENILE FICTION / Sports & Recreation / Hockey");
        bisacMap.put("JUV032120","JUVENILE FICTION / Sports & Recreation / Ice Skating");
        bisacMap.put("JUV032070","JUVENILE FICTION / Sports & Recreation / Martial Arts");
        bisacMap.put("JUV032050","JUVENILE FICTION / Sports & Recreation / Miscellaneous");
        bisacMap.put("JUV032130","JUVENILE FICTION / Sports & Recreation / Roller & In-Line Skating");
        bisacMap.put("JUV032140","JUVENILE FICTION / Sports & Recreation / Skateboarding");
        bisacMap.put("JUV032150","JUVENILE FICTION / Sports & Recreation / Soccer");
        bisacMap.put("JUV032060","JUVENILE FICTION / Sports & Recreation / Water Sports");
        bisacMap.put("JUV032080","JUVENILE FICTION / Sports & Recreation / Winter Sports");
        bisacMap.put("JUV032160","JUVENILE FICTION / Sports & Recreation / Wrestling");
        bisacMap.put("JUV062000","JUVENILE FICTION / Steampunk");
        bisacMap.put("JUV057000","JUVENILE FICTION / Stories in Verse");
        bisacMap.put("JUV040000","JUVENILE FICTION / Toys, Dolls, Puppets");
        bisacMap.put("JUV041000","JUVENILE FICTION / Transportation / General");
        bisacMap.put("JUV041010","JUVENILE FICTION / Transportation / Aviation");
        bisacMap.put("JUV041020","JUVENILE FICTION / Transportation / Boats, Ships & Underwater Craft");
        bisacMap.put("JUV041030","JUVENILE FICTION / Transportation / Cars & Trucks");
        bisacMap.put("JUV041040","JUVENILE FICTION / Transportation / Motorcycles");
        bisacMap.put("JUV041050","JUVENILE FICTION / Transportation / Railroads & Trains");
        bisacMap.put("JUV046000","JUVENILE FICTION / Visionary & Metaphysical");
        bisacMap.put("JUV042000","JUVENILE FICTION / Westerns");
        bisacMap.put("JNF000000","JUVENILE NONFICTION / General");
        bisacMap.put("JNF001000","JUVENILE NONFICTION / Activity Books");
        bisacMap.put("JNF002000","JUVENILE NONFICTION / Adventure & Adventurers");
        bisacMap.put("JNF003000","JUVENILE NONFICTION / Animals / General");
        bisacMap.put("JNF003220","JUVENILE NONFICTION / Animals / Animal Welfare");
        bisacMap.put("JNF003010","JUVENILE NONFICTION / Animals / Apes, Monkeys, etc.");
        bisacMap.put("JNF003330","JUVENILE NONFICTION / Animals / Baby Animals");
        bisacMap.put("JNF003020","JUVENILE NONFICTION / Animals / Bears");
        bisacMap.put("JNF003030","JUVENILE NONFICTION / Animals / Birds");
        bisacMap.put("JNF003250","JUVENILE NONFICTION / Animals / Butterflies, Moths & Caterpillars");
        bisacMap.put("JNF003040","JUVENILE NONFICTION / Animals / Cats");
        bisacMap.put("JNF003260","JUVENILE NONFICTION / Animals / Cows");
        bisacMap.put("JNF003230","JUVENILE NONFICTION / Animals / Deer, Moose & Caribou");
        bisacMap.put("JNF003050","JUVENILE NONFICTION / Animals / Dinosaurs & Prehistoric Creatures");
        bisacMap.put("JNF003060","JUVENILE NONFICTION / Animals / Dogs");
        bisacMap.put("JNF003210","JUVENILE NONFICTION / Animals / Ducks, Geese, etc.");
        bisacMap.put("JNF003070","JUVENILE NONFICTION / Animals / Elephants");
        bisacMap.put("JNF003270","JUVENILE NONFICTION / Animals / Endangered");
        bisacMap.put("JNF003080","JUVENILE NONFICTION / Animals / Farm Animals");
        bisacMap.put("JNF003090","JUVENILE NONFICTION / Animals / Fishes");
        bisacMap.put("JNF003100","JUVENILE NONFICTION / Animals / Foxes");
        bisacMap.put("JNF003280","JUVENILE NONFICTION / Animals / Giraffes");
        bisacMap.put("JNF003290","JUVENILE NONFICTION / Animals / Hippos & Rhinos");
        bisacMap.put("JNF003110","JUVENILE NONFICTION / Animals / Horses");
        bisacMap.put("JNF003120","JUVENILE NONFICTION / Animals / Insects, Spiders, etc.");
        bisacMap.put("JNF003300","JUVENILE NONFICTION / Animals / Jungle Animals");
        bisacMap.put("JNF003310","JUVENILE NONFICTION / Animals / Kangaroos");
        bisacMap.put("JNF003130","JUVENILE NONFICTION / Animals / Lions, Tigers, Leopards, etc.");
        bisacMap.put("JNF003140","JUVENILE NONFICTION / Animals / Mammals");
        bisacMap.put("JNF003150","JUVENILE NONFICTION / Animals / Marine Life");
        bisacMap.put("JNF003160","JUVENILE NONFICTION / Animals / Mice, Hamsters, Guinea Pigs, Squirrels, etc.");
        bisacMap.put("JNF003320","JUVENILE NONFICTION / Animals / Nocturnal");
        bisacMap.put("JNF003170","JUVENILE NONFICTION / Animals / Pets");
        bisacMap.put("JNF003180","JUVENILE NONFICTION / Animals / Rabbits");
        bisacMap.put("JNF003190","JUVENILE NONFICTION / Animals / Reptiles & Amphibians");
        bisacMap.put("JNF003240","JUVENILE NONFICTION / Animals / Wolves & Coyotes");
        bisacMap.put("JNF003200","JUVENILE NONFICTION / Animals / Zoos");
        bisacMap.put("JNF004000","JUVENILE NONFICTION / Antiques & Collectibles");
        bisacMap.put("JNF005000","JUVENILE NONFICTION / Architecture");
        bisacMap.put("JNF006000","JUVENILE NONFICTION / Art / General");
        bisacMap.put("JNF006010","JUVENILE NONFICTION / Art / Cartooning");
        bisacMap.put("JNF006020","JUVENILE NONFICTION / Art / Drawing");
        bisacMap.put("JNF006030","JUVENILE NONFICTION / Art / Fashion");
        bisacMap.put("JNF006040","JUVENILE NONFICTION / Art / History");
        bisacMap.put("JNF006050","JUVENILE NONFICTION / Art / Painting");
        bisacMap.put("JNF006060","JUVENILE NONFICTION / Art / Sculpture");
        bisacMap.put("JNF006070","JUVENILE NONFICTION / Art / Techniques");
        bisacMap.put("JNF007000","JUVENILE NONFICTION / Biography & Autobiography / General");
        bisacMap.put("JNF007010","JUVENILE NONFICTION / Biography & Autobiography / Art");
        bisacMap.put("JNF007050","JUVENILE NONFICTION / Biography & Autobiography / Cultural Heritage");
        bisacMap.put("JNF007020","JUVENILE NONFICTION / Biography & Autobiography / Historical");
        bisacMap.put("JNF007030","JUVENILE NONFICTION / Biography & Autobiography / Literary");
        bisacMap.put("JNF007040","JUVENILE NONFICTION / Biography & Autobiography / Music");
        bisacMap.put("JNF007060","JUVENILE NONFICTION / Biography & Autobiography / Performing Arts");
        bisacMap.put("JNF007070","JUVENILE NONFICTION / Biography & Autobiography / Political");
        bisacMap.put("JNF007130","JUVENILE NONFICTION / Biography & Autobiography / Presidents and First Families (U.S.)");
        bisacMap.put("JNF007080","JUVENILE NONFICTION / Biography & Autobiography / Religious (see also Religious / Christian / Biography & Autobiography)");
        bisacMap.put("JNF007140","JUVENILE NONFICTION / Biography & Autobiography / Royalty");
        bisacMap.put("JNF007090","JUVENILE NONFICTION / Biography & Autobiography / Science & Technology");
        bisacMap.put("JNF007110","JUVENILE NONFICTION / Biography & Autobiography / Social Activists");
        bisacMap.put("JNF007100","JUVENILE NONFICTION / Biography & Autobiography / Sports & Recreation");
        bisacMap.put("JNF007120","JUVENILE NONFICTION / Biography & Autobiography / Women");
        bisacMap.put("JNF008000","JUVENILE NONFICTION / Body, Mind & Spirit");
        bisacMap.put("JNF063000","JUVENILE NONFICTION / Books & Libraries");
        bisacMap.put("JNF009000","JUVENILE NONFICTION / Boys & Men");
        bisacMap.put("JNF010000","JUVENILE NONFICTION / Business & Economics");
        bisacMap.put("JNF011000","JUVENILE NONFICTION / Careers");
        bisacMap.put("JNF059000","JUVENILE NONFICTION / Clothing & Dress");
        bisacMap.put("JNF062000","JUVENILE NONFICTION / Comics & Graphic Novels / General");
        bisacMap.put("JNF062010","JUVENILE NONFICTION / Comics & Graphic Novels / Biography");
        bisacMap.put("JNF062020","JUVENILE NONFICTION / Comics & Graphic Novels / History");
        bisacMap.put("JNF012000","JUVENILE NONFICTION / Computers / General");
        bisacMap.put("JNF012010","JUVENILE NONFICTION / Computers / Entertainment & Games");
        bisacMap.put("JNF012020","JUVENILE NONFICTION / Computers / Hardware");
        bisacMap.put("JNF012030","JUVENILE NONFICTION / Computers / Internet");
        bisacMap.put("JNF012040","JUVENILE NONFICTION / Computers / Programming");
        bisacMap.put("JNF012050","JUVENILE NONFICTION / Computers / Software");
        bisacMap.put("JNF013000","JUVENILE NONFICTION / Concepts / General");
        bisacMap.put("JNF013010","JUVENILE NONFICTION / Concepts / Alphabet");
        bisacMap.put("JNF013110","JUVENILE NONFICTION / Concepts / Body");
        bisacMap.put("JNF013020","JUVENILE NONFICTION / Concepts / Colors");
        bisacMap.put("JNF013030","JUVENILE NONFICTION / Concepts / Counting & Numbers");
        bisacMap.put("JNF013080","JUVENILE NONFICTION / Concepts / Date & Time");
        bisacMap.put("JNF013040","JUVENILE NONFICTION / Concepts / Money");
        bisacMap.put("JNF013050","JUVENILE NONFICTION / Concepts / Opposites");
        bisacMap.put("JNF013090","JUVENILE NONFICTION / Concepts / Seasons");
        bisacMap.put("JNF013060","JUVENILE NONFICTION / Concepts / Sense & Sensation");
        bisacMap.put("JNF013070","JUVENILE NONFICTION / Concepts / Size & Shape");
        bisacMap.put("JNF013100","JUVENILE NONFICTION / Concepts / Sounds");
        bisacMap.put("JNF014000","JUVENILE NONFICTION / Cooking & Food");
        bisacMap.put("JNF015000","JUVENILE NONFICTION / Crafts & Hobbies");
        bisacMap.put("JNF016000","JUVENILE NONFICTION / Curiosities & Wonders");
        bisacMap.put("JNF017000","JUVENILE NONFICTION / Drama");
        bisacMap.put("JNF019000","JUVENILE NONFICTION / Family / General (see also headings under Social Issues)");
        bisacMap.put("JNF019010","JUVENILE NONFICTION / Family / Adoption");
        bisacMap.put("JNF019090","JUVENILE NONFICTION / Family / Alternative Family");
        bisacMap.put("JNF019020","JUVENILE NONFICTION / Family / Marriage & Divorce");
        bisacMap.put("JNF019030","JUVENILE NONFICTION / Family / Multigenerational");
        bisacMap.put("JNF019040","JUVENILE NONFICTION / Family / New Baby");
        bisacMap.put("JNF019050","JUVENILE NONFICTION / Family / Orphans & Foster Homes");
        bisacMap.put("JNF019060","JUVENILE NONFICTION / Family / Parents");
        bisacMap.put("JNF019070","JUVENILE NONFICTION / Family / Siblings");
        bisacMap.put("JNF019080","JUVENILE NONFICTION / Family / Stepfamilies");
        bisacMap.put("JNF020000","JUVENILE NONFICTION / Foreign Language Study / General");
        bisacMap.put("JNF020010","JUVENILE NONFICTION / Foreign Language Study / English as a Second Language");
        bisacMap.put("JNF020020","JUVENILE NONFICTION / Foreign Language Study / French");
        bisacMap.put("JNF020030","JUVENILE NONFICTION / Foreign Language Study / Spanish");
        bisacMap.put("JNF021000","JUVENILE NONFICTION / Games & Activities / General");
        bisacMap.put("JNF021010","JUVENILE NONFICTION / Games & Activities / Board Games");
        bisacMap.put("JNF021020","JUVENILE NONFICTION / Games & Activities / Card Games");
        bisacMap.put("JNF021030","JUVENILE NONFICTION / Games & Activities / Magic");
        bisacMap.put("JNF021040","JUVENILE NONFICTION / Games & Activities / Puzzles");
        bisacMap.put("JNF021050","JUVENILE NONFICTION / Games & Activities / Questions & Answers");
        bisacMap.put("JNF021060","JUVENILE NONFICTION / Games & Activities / Video & Electronic Games");
        bisacMap.put("JNF021070","JUVENILE NONFICTION / Games & Activities / Word Games");
        bisacMap.put("JNF022000","JUVENILE NONFICTION / Gardening");
        bisacMap.put("JNF023000","JUVENILE NONFICTION / Girls & Women");
        bisacMap.put("JNF024000","JUVENILE NONFICTION / Health & Daily Living / General");
        bisacMap.put("JNF024120","JUVENILE NONFICTION / Health & Daily Living / Daily Activities");
        bisacMap.put("JNF024010","JUVENILE NONFICTION / Health & Daily Living / Diet & Nutrition");
        bisacMap.put("JNF024020","JUVENILE NONFICTION / Health & Daily Living / Diseases, Illnesses & Injuries");
        bisacMap.put("JNF024030","JUVENILE NONFICTION / Health & Daily Living / First Aid");
        bisacMap.put("JNF024040","JUVENILE NONFICTION / Health & Daily Living / Fitness & Exercise");
        bisacMap.put("JNF024050","JUVENILE NONFICTION / Health & Daily Living / Maturing");
        bisacMap.put("JNF024060","JUVENILE NONFICTION / Health & Daily Living / Personal Hygiene");
        bisacMap.put("JNF024070","JUVENILE NONFICTION / Health & Daily Living / Physical Impairments");
        bisacMap.put("JNF024080","JUVENILE NONFICTION / Health & Daily Living / Safety");
        bisacMap.put("JNF024090","JUVENILE NONFICTION / Health & Daily Living / Sexuality & Pregnancy");
        bisacMap.put("JNF024100","JUVENILE NONFICTION / Health & Daily Living / Substance Abuse");
        bisacMap.put("JNF024110","JUVENILE NONFICTION / Health & Daily Living / Toilet Training");
        bisacMap.put("JNF025000","JUVENILE NONFICTION / History / General");
        bisacMap.put("JNF025010","JUVENILE NONFICTION / History / Africa");
        bisacMap.put("JNF025020","JUVENILE NONFICTION / History / Ancient");
        bisacMap.put("JNF025030","JUVENILE NONFICTION / History / Asia");
        bisacMap.put("JNF025040","JUVENILE NONFICTION / History / Australia & Oceania");
        bisacMap.put("JNF025050","JUVENILE NONFICTION / History / Canada / General");
        bisacMap.put("JNF025230","JUVENILE NONFICTION / History / Canada / Pre-Confederation (to 1867)");
        bisacMap.put("JNF025240","JUVENILE NONFICTION / History / Canada / Post-Confederation (1867-)");
        bisacMap.put("JNF025060","JUVENILE NONFICTION / History / Central & South America");
        bisacMap.put("JNF025070","JUVENILE NONFICTION / History / Europe");
        bisacMap.put("JNF025080","JUVENILE NONFICTION / History / Exploration & Discovery");
        bisacMap.put("JNF025090","JUVENILE NONFICTION / History / Holocaust");
        bisacMap.put("JNF025100","JUVENILE NONFICTION / History / Medieval");
        bisacMap.put("JNF025110","JUVENILE NONFICTION / History / Mexico");
        bisacMap.put("JNF025120","JUVENILE NONFICTION / History / Middle East");
        bisacMap.put("JNF025130","JUVENILE NONFICTION / History / Military & Wars");
        bisacMap.put("JNF025140","JUVENILE NONFICTION / History / Modern");
        bisacMap.put("JNF025150","JUVENILE NONFICTION / History / Prehistoric");
        bisacMap.put("JNF025160","JUVENILE NONFICTION / History / Renaissance");
        bisacMap.put("JNF025260","JUVENILE NONFICTION / History / Symbols, Monuments, National Parks, etc.");
        bisacMap.put("JNF025170","JUVENILE NONFICTION / History / United States / General");
        bisacMap.put("JNF025180","JUVENILE NONFICTION / History / United States / State & Local");
        bisacMap.put("JNF025190","JUVENILE NONFICTION / History / United States / Colonial & Revolutionary Periods");
        bisacMap.put("JNF025200","JUVENILE NONFICTION / History / United States / 19th Century");
        bisacMap.put("JNF025270","JUVENILE NONFICTION / History / United States / Civil War Period (1850-1877)");
        bisacMap.put("JNF025210","JUVENILE NONFICTION / History / United States / 20th Century");
        bisacMap.put("JNF025250","JUVENILE NONFICTION / History / United States / 21st Century");
        bisacMap.put("JNF025220","JUVENILE NONFICTION / History / Other");
        bisacMap.put("JNF026000","JUVENILE NONFICTION / Holidays & Celebrations / General (see also Religious / Christian / Holidays & Celebrations)");
        bisacMap.put("JNF026100","JUVENILE NONFICTION / Holidays & Celebrations / Birthdays");
        bisacMap.put("JNF026010","JUVENILE NONFICTION / Holidays & Celebrations / Christmas & Advent");
        bisacMap.put("JNF026020","JUVENILE NONFICTION / Holidays & Celebrations / Easter & Lent");
        bisacMap.put("JNF026030","JUVENILE NONFICTION / Holidays & Celebrations / Halloween");
        bisacMap.put("JNF026110","JUVENILE NONFICTION / Holidays & Celebrations / Hanukkah");
        bisacMap.put("JNF026050","JUVENILE NONFICTION / Holidays & Celebrations / Kwanzaa");
        bisacMap.put("JNF026120","JUVENILE NONFICTION / Holidays & Celebrations / Passover");
        bisacMap.put("JNF026130","JUVENILE NONFICTION / Holidays & Celebrations / Patriotic Holidays");
        bisacMap.put("JNF026060","JUVENILE NONFICTION / Holidays & Celebrations / Thanksgiving");
        bisacMap.put("JNF026070","JUVENILE NONFICTION / Holidays & Celebrations / Valentine's Day");
        bisacMap.put("JNF026080","JUVENILE NONFICTION / Holidays & Celebrations / Other, Non-Religious");
        bisacMap.put("JNF026090","JUVENILE NONFICTION / Holidays & Celebrations / Other, Religious");
        bisacMap.put("JNF027000","JUVENILE NONFICTION / House & Home");
        bisacMap.put("JNF028000","JUVENILE NONFICTION / Humor / General");
        bisacMap.put("JNF028010","JUVENILE NONFICTION / Humor / Comic Strips & Cartoons");
        bisacMap.put("JNF028020","JUVENILE NONFICTION / Humor / Jokes & Riddles");
        bisacMap.put("JNF029000","JUVENILE NONFICTION / Language Arts / General");
        bisacMap.put("JNF029010","JUVENILE NONFICTION / Language Arts / Composition & Creative Writing");
        bisacMap.put("JNF029020","JUVENILE NONFICTION / Language Arts / Grammar");
        bisacMap.put("JNF029030","JUVENILE NONFICTION / Language Arts / Handwriting");
        bisacMap.put("JNF029050","JUVENILE NONFICTION / Language Arts / Sign Language");
        bisacMap.put("JNF029040","JUVENILE NONFICTION / Language Arts / Vocabulary & Spelling");
        bisacMap.put("JNF030000","JUVENILE NONFICTION / Law & Crime");
        bisacMap.put("JNF031000","JUVENILE NONFICTION / Lifestyles / City & Town Life");
        bisacMap.put("JNF032000","JUVENILE NONFICTION / Lifestyles / Country Life");
        bisacMap.put("JNF033000","JUVENILE NONFICTION / Lifestyles / Farm & Ranch Life");
        bisacMap.put("JNF034000","JUVENILE NONFICTION / Literary Criticism & Collections");
        bisacMap.put("JNF035000","JUVENILE NONFICTION / Mathematics / General");
        bisacMap.put("JNF035010","JUVENILE NONFICTION / Mathematics / Advanced");
        bisacMap.put("JNF035020","JUVENILE NONFICTION / Mathematics / Algebra");
        bisacMap.put("JNF035030","JUVENILE NONFICTION / Mathematics / Arithmetic");
        bisacMap.put("JNF035040","JUVENILE NONFICTION / Mathematics / Fractions");
        bisacMap.put("JNF035050","JUVENILE NONFICTION / Mathematics / Geometry");
        bisacMap.put("JNF060000","JUVENILE NONFICTION / Media Studies");
        bisacMap.put("JNF064000","JUVENILE NONFICTION / Media Tie-In");
        bisacMap.put("JNF036000","JUVENILE NONFICTION / Music / General");
        bisacMap.put("JNF036010","JUVENILE NONFICTION / Music / Classical");
        bisacMap.put("JNF036020","JUVENILE NONFICTION / Music / History");
        bisacMap.put("JNF036030","JUVENILE NONFICTION / Music / Instruction & Study");
        bisacMap.put("JNF036090","JUVENILE NONFICTION / Music / Instruments");
        bisacMap.put("JNF036040","JUVENILE NONFICTION / Music / Jazz");
        bisacMap.put("JNF036050","JUVENILE NONFICTION / Music / Popular");
        bisacMap.put("JNF036060","JUVENILE NONFICTION / Music / Rap & Hip Hop");
        bisacMap.put("JNF036070","JUVENILE NONFICTION / Music / Rock");
        bisacMap.put("JNF036080","JUVENILE NONFICTION / Music / Songbooks");
        bisacMap.put("JNF038000","JUVENILE NONFICTION / People & Places / General");
        bisacMap.put("JNF038010","JUVENILE NONFICTION / People & Places / Africa");
        bisacMap.put("JNF038020","JUVENILE NONFICTION / People & Places / Asia");
        bisacMap.put("JNF038030","JUVENILE NONFICTION / People & Places / Australia & Oceania");
        bisacMap.put("JNF038040","JUVENILE NONFICTION / People & Places / Canada / General");
        bisacMap.put("JNF038120","JUVENILE NONFICTION / People & Places / Canada / Native Canadian");
        bisacMap.put("JNF038050","JUVENILE NONFICTION / People & Places / Caribbean & Latin America");
        bisacMap.put("JNF038060","JUVENILE NONFICTION / People & Places / Europe");
        bisacMap.put("JNF038070","JUVENILE NONFICTION / People & Places / Mexico");
        bisacMap.put("JNF038080","JUVENILE NONFICTION / People & Places / Middle East");
        bisacMap.put("JNF038090","JUVENILE NONFICTION / People & Places / Polar Regions");
        bisacMap.put("JNF050000","JUVENILE NONFICTION / School & Education");
        bisacMap.put("JNF038100","JUVENILE NONFICTION / People & Places / United States / General");
        bisacMap.put("JNF018010","JUVENILE NONFICTION / People & Places / United States / African American");
        bisacMap.put("JNF018020","JUVENILE NONFICTION / People & Places / United States / Asian American");
        bisacMap.put("JNF018030","JUVENILE NONFICTION / People & Places / United States / Hispanic & Latino");
        bisacMap.put("JNF018040","JUVENILE NONFICTION / People & Places / United States / Native American");
        bisacMap.put("JNF018050","JUVENILE NONFICTION / People & Places / United States / Other");
        bisacMap.put("JNF038110","JUVENILE NONFICTION / People & Places / Other");
        bisacMap.put("JNF039000","JUVENILE NONFICTION / Performing Arts / General");
        bisacMap.put("JNF039010","JUVENILE NONFICTION / Performing Arts / Circus");
        bisacMap.put("JNF039020","JUVENILE NONFICTION / Performing Arts / Dance");
        bisacMap.put("JNF039030","JUVENILE NONFICTION / Performing Arts / Film");
        bisacMap.put("JNF039040","JUVENILE NONFICTION / Performing Arts / Television & Radio");
        bisacMap.put("JNF039050","JUVENILE NONFICTION / Performing Arts / Theater");
        bisacMap.put("JNF040000","JUVENILE NONFICTION / Philosophy");
        bisacMap.put("JNF041000","JUVENILE NONFICTION / Photography");
        bisacMap.put("JNF042000","JUVENILE NONFICTION / Poetry / General");
        bisacMap.put("JNF042010","JUVENILE NONFICTION / Poetry / Humorous");
        bisacMap.put("JNF045000","JUVENILE NONFICTION / Readers / Beginner");
        bisacMap.put("JNF046000","JUVENILE NONFICTION / Readers / Intermediate");
        bisacMap.put("JNF047000","JUVENILE NONFICTION / Readers / Chapter Books");
        bisacMap.put("JNF048000","JUVENILE NONFICTION / Reference / General");
        bisacMap.put("JNF048010","JUVENILE NONFICTION / Reference / Almanacs");
        bisacMap.put("JNF048020","JUVENILE NONFICTION / Reference / Atlases");
        bisacMap.put("JNF048030","JUVENILE NONFICTION / Reference / Dictionaries");
        bisacMap.put("JNF048040","JUVENILE NONFICTION / Reference / Encyclopedias");
        bisacMap.put("JNF048050","JUVENILE NONFICTION / Reference / Thesauri");
        bisacMap.put("JNF049000","JUVENILE NONFICTION / Religion / General");
        bisacMap.put("JNF049040","JUVENILE NONFICTION / Religion / Bible Stories / General");
        bisacMap.put("JNF049140","JUVENILE NONFICTION / Religion / Bible Stories / Old Testament");
        bisacMap.put("JNF049150","JUVENILE NONFICTION / Religion / Bible Stories / New Testament");
        bisacMap.put("JNF049020","JUVENILE NONFICTION / Religion / Biblical Biography");
        bisacMap.put("JNF049030","JUVENILE NONFICTION / Religion / Biblical Commentaries & Interpretation");
        bisacMap.put("JNF049160","JUVENILE NONFICTION / Religion / Biblical History");
        bisacMap.put("JNF049170","JUVENILE NONFICTION / Religion / Biblical Reference");
        bisacMap.put("JNF049010","JUVENILE NONFICTION / Religion / Biblical Studies");
        bisacMap.put("JNF049080","JUVENILE NONFICTION / Religion / Christianity");
        bisacMap.put("JNF049090","JUVENILE NONFICTION / Religion / Eastern");
        bisacMap.put("JNF049100","JUVENILE NONFICTION / Religion / Islam");
        bisacMap.put("JNF049110","JUVENILE NONFICTION / Religion / Judaism");
        bisacMap.put("JNF049130","JUVENILE NONFICTION / Religious / Christian / General");
        bisacMap.put("JNF049180","JUVENILE NONFICTION / Religious / Christian / Biography & Autobiography (see also Biography & Autobiography / Religious)");
        bisacMap.put("JNF049190","JUVENILE NONFICTION / Religious / Christian / Comics & Graphic Novels");
        bisacMap.put("JNF049120","JUVENILE NONFICTION / Religious / Christian / Devotional & Prayer");
        bisacMap.put("JNF049200","JUVENILE NONFICTION / Religious / Christian / Early Readers");
        bisacMap.put("JNF049210","JUVENILE NONFICTION / Religious / Christian / Family & Relationships");
        bisacMap.put("JNF049220","JUVENILE NONFICTION / Religious / Christian / Games & Activities");
        bisacMap.put("JNF049230","JUVENILE NONFICTION / Religious / Christian / Health & Daily Living");
        bisacMap.put("JNF049240","JUVENILE NONFICTION / Religious / Christian / Holidays & Celebrations");
        bisacMap.put("JNF049250","JUVENILE NONFICTION / Religious / Christian / Inspirational");
        bisacMap.put("JNF049260","JUVENILE NONFICTION / Religious / Christian / Learning Concepts");
        bisacMap.put("JNF049270","JUVENILE NONFICTION / Religious / Christian / People & Places");
        bisacMap.put("JNF049280","JUVENILE NONFICTION / Religious / Christian / Science & Nature");
        bisacMap.put("JNF049290","JUVENILE NONFICTION / Religious / Christian / Social Issues");
        bisacMap.put("JNF049300","JUVENILE NONFICTION / Religious / Christian / Sports & Recreation");
        bisacMap.put("JNF049310","JUVENILE NONFICTION / Religious / Christian / Values & Virtues");
        bisacMap.put("JNF051000","JUVENILE NONFICTION / Science & Nature / General (see also headings under Animals or Technology)");
        bisacMap.put("JNF051030","JUVENILE NONFICTION / Science & Nature / Anatomy & Physiology");
        bisacMap.put("JNF051040","JUVENILE NONFICTION / Science & Nature / Astronomy");
        bisacMap.put("JNF051050","JUVENILE NONFICTION / Science & Nature / Biology");
        bisacMap.put("JNF051060","JUVENILE NONFICTION / Science & Nature / Botany");
        bisacMap.put("JNF051070","JUVENILE NONFICTION / Science & Nature / Chemistry");
        bisacMap.put("JNF051160","JUVENILE NONFICTION / Science & Nature / Disasters");
        bisacMap.put("JNF051170","JUVENILE NONFICTION / Science & Nature / Discoveries");
        bisacMap.put("JNF051080","JUVENILE NONFICTION / Science & Nature / Earth Sciences / General");
        bisacMap.put("JNF037010","JUVENILE NONFICTION / Science & Nature / Earth Sciences / Earthquakes & Volcanoes");
        bisacMap.put("JNF051180","JUVENILE NONFICTION / Science & Nature / Earth Sciences / Geography");
        bisacMap.put("JNF037060","JUVENILE NONFICTION / Science & Nature / Earth Sciences / Rocks & Minerals");
        bisacMap.put("JNF037070","JUVENILE NONFICTION / Science & Nature / Earth Sciences / Water (Oceans, Lakes, etc.)");
        bisacMap.put("JNF037080","JUVENILE NONFICTION / Science & Nature / Earth Sciences / Weather");
        bisacMap.put("JNF037020","JUVENILE NONFICTION / Science & Nature / Environmental Conservation & Protection");
        bisacMap.put("JNF051100","JUVENILE NONFICTION / Science & Nature / Environmental Science & Ecosystems");
        bisacMap.put("JNF051110","JUVENILE NONFICTION / Science & Nature / Experiments & Projects");
        bisacMap.put("JNF037030","JUVENILE NONFICTION / Science & Nature / Flowers & Plants");
        bisacMap.put("JNF037050","JUVENILE NONFICTION / Science & Nature / Fossils");
        bisacMap.put("JNF051190","JUVENILE NONFICTION / Science & Nature / History of Science");
        bisacMap.put("JNF051140","JUVENILE NONFICTION / Science & Nature / Physics");
        bisacMap.put("JNF037040","JUVENILE NONFICTION / Science & Nature / Trees & Forests");
        bisacMap.put("JNF051200","JUVENILE NONFICTION / Science & Nature / Weights & Measures");
        bisacMap.put("JNF051150","JUVENILE NONFICTION / Science & Nature / Zoology");
        bisacMap.put("JNF053000","JUVENILE NONFICTION / Social Issues / General (see also headings under Family)");
        bisacMap.put("JNF053010","JUVENILE NONFICTION / Social Issues / Adolescence");
        bisacMap.put("JNF053220","JUVENILE NONFICTION / Social Issues / Bullying");
        bisacMap.put("JNF053020","JUVENILE NONFICTION / Social Issues / Dating & Sex");
        bisacMap.put("JNF053030","JUVENILE NONFICTION / Social Issues / Death & Dying");
        bisacMap.put("JNF053230","JUVENILE NONFICTION / Social Issues / Depression & Mental Illness");
        bisacMap.put("JNF053040","JUVENILE NONFICTION / Social Issues / Drugs, Alcohol, Substance Abuse");
        bisacMap.put("JNF053240","JUVENILE NONFICTION / Social Issues / Emigration & Immigration");
        bisacMap.put("JNF053050","JUVENILE NONFICTION / Social Issues / Emotions & Feelings");
        bisacMap.put("JNF053060","JUVENILE NONFICTION / Social Issues / Friendship");
        bisacMap.put("JNF053070","JUVENILE NONFICTION / Social Issues / Homelessness & Poverty");
        bisacMap.put("JNF053080","JUVENILE NONFICTION / Social Issues / Homosexuality");
        bisacMap.put("JNF053090","JUVENILE NONFICTION / Social Issues / Manners & Etiquette");
        bisacMap.put("JNF053100","JUVENILE NONFICTION / Social Issues / New Experience");
        bisacMap.put("JNF053110","JUVENILE NONFICTION / Social Issues / Peer Pressure");
        bisacMap.put("JNF053120","JUVENILE NONFICTION / Social Issues / Physical & Emotional Abuse (see also Social Issues / Sexual Abuse)");
        bisacMap.put("JNF053130","JUVENILE NONFICTION / Social Issues / Pregnancy");
        bisacMap.put("JNF053140","JUVENILE NONFICTION / Social Issues / Prejudice & Racism");
        bisacMap.put("JNF053150","JUVENILE NONFICTION / Social Issues / Runaways");
        bisacMap.put("JNF053160","JUVENILE NONFICTION / Social Issues / Self-Esteem & Self-Reliance");
        bisacMap.put("JNF053250","JUVENILE NONFICTION / Social Issues / Self-Mutilation");
        bisacMap.put("JNF053170","JUVENILE NONFICTION / Social Issues / Sexual Abuse");
        bisacMap.put("JNF053180","JUVENILE NONFICTION / Social Issues / Special Needs");
        bisacMap.put("JNF053260","JUVENILE NONFICTION / Social Issues / Strangers");
        bisacMap.put("JNF053190","JUVENILE NONFICTION / Social Issues / Suicide");
        bisacMap.put("JNF053200","JUVENILE NONFICTION / Social Issues / Values & Virtues");
        bisacMap.put("JNF053210","JUVENILE NONFICTION / Social Issues / Violence");
        bisacMap.put("LAW026020","LAW / Criminal Law / Sentencing");
        bisacMap.put("JNF052000","JUVENILE NONFICTION / Social Science / General");
        bisacMap.put("JNF052010","JUVENILE NONFICTION / Social Science / Archaeology");
        bisacMap.put("JNF052020","JUVENILE NONFICTION / Social Science / Customs, Traditions, Anthropology");
        bisacMap.put("JNF052030","JUVENILE NONFICTION / Social Science / Folklore & Mythology");
        bisacMap.put("JNF043000","JUVENILE NONFICTION / Social Science / Politics & Government");
        bisacMap.put("JNF044000","JUVENILE NONFICTION / Social Science / Psychology");
        bisacMap.put("JNF052040","JUVENILE NONFICTION / Social Science / Sociology");
        bisacMap.put("JNF054000","JUVENILE NONFICTION / Sports & Recreation / General");
        bisacMap.put("JNF054010","JUVENILE NONFICTION / Sports & Recreation / Baseball & Softball");
        bisacMap.put("JNF054020","JUVENILE NONFICTION / Sports & Recreation / Basketball");
        bisacMap.put("JNF054030","JUVENILE NONFICTION / Sports & Recreation / Camping & Outdoor Activities");
        bisacMap.put("JNF054040","JUVENILE NONFICTION / Sports & Recreation / Cycling");
        bisacMap.put("JNF054170","JUVENILE NONFICTION / Sports & Recreation / Equestrian");
        bisacMap.put("JNF054180","JUVENILE NONFICTION / Sports & Recreation / Extreme Sports");
        bisacMap.put("JNF054050","JUVENILE NONFICTION / Sports & Recreation / Football");
        bisacMap.put("JNF054230","JUVENILE NONFICTION / Sports & Recreation / Golf");
        bisacMap.put("JNF054060","JUVENILE NONFICTION / Sports & Recreation / Gymnastics");
        bisacMap.put("JNF054070","JUVENILE NONFICTION / Sports & Recreation / Hockey");
        bisacMap.put("JNF054190","JUVENILE NONFICTION / Sports & Recreation / Ice Skating");
        bisacMap.put("JNF054080","JUVENILE NONFICTION / Sports & Recreation / Martial Arts");
        bisacMap.put("JNF054090","JUVENILE NONFICTION / Sports & Recreation / Miscellaneous");
        bisacMap.put("JNF054100","JUVENILE NONFICTION / Sports & Recreation / Motor Sports");
        bisacMap.put("JNF054110","JUVENILE NONFICTION / Sports & Recreation / Olympics");
        bisacMap.put("JNF054120","JUVENILE NONFICTION / Sports & Recreation / Racket Sports");
        bisacMap.put("JNF054200","JUVENILE NONFICTION / Sports & Recreation / Roller & In-Line Skating");
        bisacMap.put("JNF054210","JUVENILE NONFICTION / Sports & Recreation / Skateboarding");
        bisacMap.put("JNF054130","JUVENILE NONFICTION / Sports & Recreation / Soccer");
        bisacMap.put("JNF054140","JUVENILE NONFICTION / Sports & Recreation / Track & Field");
        bisacMap.put("JNF054150","JUVENILE NONFICTION / Sports & Recreation / Water Sports");
        bisacMap.put("JNF054160","JUVENILE NONFICTION / Sports & Recreation / Winter Sports");
        bisacMap.put("JNF054220","JUVENILE NONFICTION / Sports & Recreation / Wrestling");
        bisacMap.put("JNF055000","JUVENILE NONFICTION / Study Aids / General");
        bisacMap.put("JNF055010","JUVENILE NONFICTION / Study Aids / Book Notes (see also STUDY AIDS / Book Notes)");
        bisacMap.put("JNF055030","JUVENILE NONFICTION / Study Aids / Test Preparation");
        bisacMap.put("JNF061000","JUVENILE NONFICTION / Technology / General");
        bisacMap.put("JNF051010","JUVENILE NONFICTION / Technology / Aeronautics, Astronautics & Space Science");
        bisacMap.put("JNF051020","JUVENILE NONFICTION / Technology / Agriculture");
        bisacMap.put("JNF051090","JUVENILE NONFICTION / Technology / Electricity & Electronics");
        bisacMap.put("JNF051120","JUVENILE NONFICTION / Technology / How Things Work-Are Made");
        bisacMap.put("JNF061010","JUVENILE NONFICTION / Technology / Inventions");
        bisacMap.put("JNF051130","JUVENILE NONFICTION / Technology / Machinery & Tools");
        bisacMap.put("JNF056000","JUVENILE NONFICTION / Toys, Dolls & Puppets");
        bisacMap.put("JNF057000","JUVENILE NONFICTION / Transportation / General");
        bisacMap.put("JNF057010","JUVENILE NONFICTION / Transportation / Aviation");
        bisacMap.put("JNF057020","JUVENILE NONFICTION / Transportation / Boats, Ships & Underwater Craft");
        bisacMap.put("JNF057030","JUVENILE NONFICTION / Transportation / Cars & Trucks");
        bisacMap.put("JNF057040","JUVENILE NONFICTION / Transportation / Motorcycles");
        bisacMap.put("JNF057050","JUVENILE NONFICTION / Transportation / Railroads & Trains");
        bisacMap.put("JNF058000","JUVENILE NONFICTION / Travel");
        bisacMap.put("LAN000000","LANGUAGE ARTS & DISCIPLINES / General");
        bisacMap.put("LAN001000","LANGUAGE ARTS & DISCIPLINES / Alphabets & Writing Systems");
        bisacMap.put("LAN002000","LANGUAGE ARTS & DISCIPLINES / Authorship");
        bisacMap.put("LAN004000","LANGUAGE ARTS & DISCIPLINES / Communication Studies");
        bisacMap.put("LAN005000","LANGUAGE ARTS & DISCIPLINES / Composition & Creative Writing");
        bisacMap.put("LAN022000","LANGUAGE ARTS & DISCIPLINES / Editing & Proofreading");
        bisacMap.put("LAN006000","LANGUAGE ARTS & DISCIPLINES / Grammar & Punctuation");
        bisacMap.put("LAN007000","LANGUAGE ARTS & DISCIPLINES / Handwriting");
        bisacMap.put("LAN008000","LANGUAGE ARTS & DISCIPLINES / Journalism");
        bisacMap.put("LAN025000","LANGUAGE ARTS & DISCIPLINES / Library & Information Science / General");
        bisacMap.put("LAN025010","LANGUAGE ARTS & DISCIPLINES / Library & Information Science / Administration & Management");
        bisacMap.put("LAN025020","LANGUAGE ARTS & DISCIPLINES / Library & Information Science / Archives & Special Libraries");
        bisacMap.put("LAN025030","LANGUAGE ARTS & DISCIPLINES / Library & Information Science / Cataloging & Classification");
        bisacMap.put("LAN025040","LANGUAGE ARTS & DISCIPLINES / Library & Information Science / Collection Development");
        bisacMap.put("LAN025060","LANGUAGE ARTS & DISCIPLINES / Library & Information Science / Digital & Online Resources");
        bisacMap.put("LAN025050","LANGUAGE ARTS & DISCIPLINES / Library & Information Science / School Media");
        bisacMap.put("LAN009000","LANGUAGE ARTS & DISCIPLINES / Linguistics / General");
        bisacMap.put("LAN024000","LANGUAGE ARTS & DISCIPLINES / Linguistics / Etymology");
        bisacMap.put("LAN009010","LANGUAGE ARTS & DISCIPLINES / Linguistics / Historical & Comparative");
        bisacMap.put("LAN009020","LANGUAGE ARTS & DISCIPLINES / Linguistics / Morphology");
        bisacMap.put("LAN011000","LANGUAGE ARTS & DISCIPLINES / Linguistics / Phonetics & Phonology");
        bisacMap.put("LAN009030","LANGUAGE ARTS & DISCIPLINES / Linguistics / Pragmatics");
        bisacMap.put("LAN009040","LANGUAGE ARTS & DISCIPLINES / Linguistics / Psycholinguistics");
        bisacMap.put("LAN016000","LANGUAGE ARTS & DISCIPLINES / Linguistics / Semantics");
        bisacMap.put("LAN009050","LANGUAGE ARTS & DISCIPLINES / Linguistics / Sociolinguistics");
        bisacMap.put("LAN009060","LANGUAGE ARTS & DISCIPLINES / Linguistics / Syntax");
        bisacMap.put("LAN010000","LANGUAGE ARTS & DISCIPLINES / Literacy");
        bisacMap.put("LAN026000","LANGUAGE ARTS & DISCIPLINES / Public Speaking");
        bisacMap.put("LAN027000","LANGUAGE ARTS & DISCIPLINES / Publishing");
        bisacMap.put("LAN012000","LANGUAGE ARTS & DISCIPLINES / Readers");
        bisacMap.put("LAN013000","LANGUAGE ARTS & DISCIPLINES / Reading Skills");
        bisacMap.put("LAN014000","LANGUAGE ARTS & DISCIPLINES / Reference");
        bisacMap.put("LAN015000","LANGUAGE ARTS & DISCIPLINES / Rhetoric");
        bisacMap.put("LAN017000","LANGUAGE ARTS & DISCIPLINES / Sign Language");
        bisacMap.put("LAN018000","LANGUAGE ARTS & DISCIPLINES / Speech");
        bisacMap.put("LAN019000","LANGUAGE ARTS & DISCIPLINES / Spelling");
        bisacMap.put("LAN020000","LANGUAGE ARTS & DISCIPLINES / Study & Teaching");
        bisacMap.put("LAN028000","LANGUAGE ARTS & DISCIPLINES / Style Manuals");
        bisacMap.put("LAN023000","LANGUAGE ARTS & DISCIPLINES / Translating & Interpreting");
        bisacMap.put("LAN021000","LANGUAGE ARTS & DISCIPLINES / Vocabulary");
        bisacMap.put("LAW000000","LAW / General");
        bisacMap.put("LAW001000","LAW / Administrative Law & Regulatory Practice");
        bisacMap.put("LAW102000","LAW / Agricultural");
        bisacMap.put("LAW002000","LAW / Air & Space");
        bisacMap.put("LAW003000","LAW / Alternative Dispute Resolution");
        bisacMap.put("LAW004000","LAW / Annotations & Citations");
        bisacMap.put("LAW005000","LAW / Antitrust");
        bisacMap.put("LAW006000","LAW / Arbitration, Negotiation, Mediation");
        bisacMap.put("LAW007000","LAW / Banking");
        bisacMap.put("LAW008000","LAW / Bankruptcy & Insolvency");
        bisacMap.put("LAW009000","LAW / Business & Financial");
        bisacMap.put("LAW010000","LAW / Child Advocacy");
        bisacMap.put("LAW011000","LAW / Civil Law");
        bisacMap.put("LAW012000","LAW / Civil Procedure");
        bisacMap.put("LAW013000","LAW / Civil Rights");
        bisacMap.put("LAW014000","LAW / Commercial / General");
        bisacMap.put("LAW014010","LAW / Commercial / International Trade");
        bisacMap.put("LAW103000","LAW / Common");
        bisacMap.put("LAW015000","LAW / Communications");
        bisacMap.put("LAW016000","LAW / Comparative");
        bisacMap.put("LAW104000","LAW / Computer & Internet");
        bisacMap.put("LAW017000","LAW / Conflict of Laws");
        bisacMap.put("LAW018000","LAW / Constitutional");
        bisacMap.put("LAW019000","LAW / Construction");
        bisacMap.put("LAW020000","LAW / Consumer");
        bisacMap.put("LAW021000","LAW / Contracts");
        bisacMap.put("LAW022000","LAW / Corporate");
        bisacMap.put("LAW023000","LAW / Court Records");
        bisacMap.put("LAW024000","LAW / Court Rules");
        bisacMap.put("LAW025000","LAW / Courts");
        bisacMap.put("LAW026000","LAW / Criminal Law / General");
        bisacMap.put("LAW026010","LAW / Criminal Law / Juvenile Offenders");
        bisacMap.put("LAW029000","LAW / Depositions");
        bisacMap.put("LAW030000","LAW / Dictionaries & Terminology");
        bisacMap.put("LAW031000","LAW / Disability");
        bisacMap.put("LAW094000","LAW / Discrimination");
        bisacMap.put("LAW092000","LAW / Educational Law & Legislation");
        bisacMap.put("LAW107000","LAW / Elder Law");
        bisacMap.put("LAW108000","LAW / Election Law");
        bisacMap.put("LAW032000","LAW / Emigration & Immigration");
        bisacMap.put("LAW033000","LAW / Entertainment");
        bisacMap.put("LAW034000","LAW / Environmental");
        bisacMap.put("LAW101000","LAW / Essays");
        bisacMap.put("LAW035000","LAW / Estates & Trusts");
        bisacMap.put("LAW036000","LAW / Ethics & Professional Responsibility");
        bisacMap.put("LAW037000","LAW / Evidence");
        bisacMap.put("LAW038000","LAW / Family Law / General");
        bisacMap.put("LAW038010","LAW / Family Law / Children");
        bisacMap.put("LAW038020","LAW / Family Law / Divorce & Separation");
        bisacMap.put("LAW038030","LAW / Family Law / Marriage");
        bisacMap.put("LAW041000","LAW / Forensic Science");
        bisacMap.put("LAW043000","LAW / Gender & the Law");
        bisacMap.put("LAW044000","LAW / General Practice");
        bisacMap.put("LAW109000","LAW / Government / General");
        bisacMap.put("LAW039000","LAW / Government / Federal");
        bisacMap.put("LAW089000","LAW / Government / State, Provincial & Municipal");
        bisacMap.put("LAW046000","LAW / Health");
        bisacMap.put("LAW047000","LAW / Housing & Urban Development");
        bisacMap.put("LAW110000","LAW / Indigenous Peoples");
        bisacMap.put("LAW049000","LAW / Insurance");
        bisacMap.put("LAW050000","LAW / Intellectual Property / General");
        bisacMap.put("LAW050010","LAW / Intellectual Property / Copyright");
        bisacMap.put("LAW050020","LAW / Intellectual Property / Patent");
        bisacMap.put("LAW050030","LAW / Intellectual Property / Trademark");
        bisacMap.put("LAW051000","LAW / International");
        bisacMap.put("LAW111000","LAW / Judicial Power");
        bisacMap.put("LAW052000","LAW / Jurisprudence");
        bisacMap.put("LAW053000","LAW / Jury");
        bisacMap.put("LAW054000","LAW / Labor & Employment");
        bisacMap.put("LAW055000","LAW / Land Use");
        bisacMap.put("LAW112000","LAW / Landlord & Tenant");
        bisacMap.put("LAW056000","LAW / Law Office Management");
        bisacMap.put("LAW059000","LAW / Legal Education");
        bisacMap.put("LAW060000","LAW / Legal History");
        bisacMap.put("LAW061000","LAW / Legal Profession");
        bisacMap.put("LAW062000","LAW / Legal Services");
        bisacMap.put("LAW063000","LAW / Legal Writing");
        bisacMap.put("LAW113000","LAW / Liability");
        bisacMap.put("LAW064000","LAW / Litigation");
        bisacMap.put("LAW100000","LAW / Living Trusts");
        bisacMap.put("LAW095000","LAW / Malpractice");
        bisacMap.put("LAW066000","LAW / Maritime");
        bisacMap.put("LAW096000","LAW / Media & the Law");
        bisacMap.put("LAW093000","LAW / Medical Law & Legislation");
        bisacMap.put("LAW067000","LAW / Mental Health");
        bisacMap.put("LAW114000","LAW / Mergers & Acquisitions");
        bisacMap.put("LAW068000","LAW / Military");
        bisacMap.put("LAW069000","LAW / Natural Law");
        bisacMap.put("LAW070000","LAW / Natural Resources");
        bisacMap.put("LAW071000","LAW / Paralegals & Paralegalism");
        bisacMap.put("LAW115000","LAW / Pension Law");
        bisacMap.put("LAW097000","LAW / Personal Injury");
        bisacMap.put("LAW098000","LAW / Practical Guides");
        bisacMap.put("LAW116000","LAW / Privacy");
        bisacMap.put("LAW074000","LAW / Property");
        bisacMap.put("LAW075000","LAW / Public");
        bisacMap.put("LAW076000","LAW / Public Contract");
        bisacMap.put("LAW077000","LAW / Public Utilities");
        bisacMap.put("LAW078000","LAW / Real Estate");
        bisacMap.put("LAW079000","LAW / Reference");
        bisacMap.put("LAW080000","LAW / Remedies & Damages");
        bisacMap.put("LAW081000","LAW / Research");
        bisacMap.put("LAW082000","LAW / Right to Die");
        bisacMap.put("LAW099000","LAW / Science & Technology");
        bisacMap.put("LAW083000","LAW / Securities");
        bisacMap.put("LAW084000","LAW / Sports");
        bisacMap.put("LAW086000","LAW / Taxation");
        bisacMap.put("LAW087000","LAW / Torts");
        bisacMap.put("LAW117000","LAW / Transportation");
        bisacMap.put("LAW088000","LAW / Trial Practice");
        bisacMap.put("LAW090000","LAW / Wills");
        bisacMap.put("LAW091000","LAW / Witnesses");
        bisacMap.put("LCO000000","LITERARY COLLECTIONS / General");
        bisacMap.put("LCO001000","LITERARY COLLECTIONS / African");
        bisacMap.put("LCO002000","LITERARY COLLECTIONS / American / General");
        bisacMap.put("LCO002010","LITERARY COLLECTIONS / American / African American");
        bisacMap.put("LCO003000","LITERARY COLLECTIONS / Ancient & Classical");
        bisacMap.put("LCO004000","LITERARY COLLECTIONS / Asian / General");
        bisacMap.put("LCO004010","LITERARY COLLECTIONS / Asian / Chinese");
        bisacMap.put("LCO004020","LITERARY COLLECTIONS / Asian / Indic");
        bisacMap.put("LCO004030","LITERARY COLLECTIONS / Asian / Japanese");
        bisacMap.put("LCO005000","LITERARY COLLECTIONS / Australian & Oceanian");
        bisacMap.put("LCO006000","LITERARY COLLECTIONS / Canadian");
        bisacMap.put("LCO007000","LITERARY COLLECTIONS / Caribbean & Latin American");
        bisacMap.put("LCO015000","LITERARY COLLECTIONS / Diaries & Journals");
        bisacMap.put("LCO010000","LITERARY COLLECTIONS / Essays");
        bisacMap.put("LCO008000","LITERARY COLLECTIONS / European / General");
        bisacMap.put("LCO008010","LITERARY COLLECTIONS / European / Eastern (see also Russian & Former Soviet Union)");
        bisacMap.put("LCO009000","LITERARY COLLECTIONS / European / English, Irish, Scottish, Welsh");
        bisacMap.put("LCO008020","LITERARY COLLECTIONS / European / French");
        bisacMap.put("LCO008030","LITERARY COLLECTIONS / European / German");
        bisacMap.put("LCO008040","LITERARY COLLECTIONS / European / Italian");
        bisacMap.put("LCO008050","LITERARY COLLECTIONS / European / Scandinavian");
        bisacMap.put("LCO008060","LITERARY COLLECTIONS / European / Spanish & Portuguese");
        bisacMap.put("LCO016000","LITERARY COLLECTIONS / Gay & Lesbian");
        bisacMap.put("LCO011000","LITERARY COLLECTIONS / Letters");
        bisacMap.put("LCO017000","LITERARY COLLECTIONS / Medieval");
        bisacMap.put("LCO012000","LITERARY COLLECTIONS / Middle Eastern");
        bisacMap.put("LCO013000","LITERARY COLLECTIONS / Native American");
        bisacMap.put("LCO014000","LITERARY COLLECTIONS / Russian & Former Soviet Union");
        bisacMap.put("LCO018000","LITERARY COLLECTIONS / Speeches");
        bisacMap.put("LCO019000","LITERARY COLLECTIONS / Women Authors");
        bisacMap.put("LIT000000","LITERARY CRITICISM / General");
        bisacMap.put("LIT004010","LITERARY CRITICISM / African");
        bisacMap.put("LIT004020","LITERARY CRITICISM / American / General");
        bisacMap.put("LIT004040","LITERARY CRITICISM / American / African American");
        bisacMap.put("LIT004030","LITERARY CRITICISM / American / Asian American");
        bisacMap.put("LIT004050","LITERARY CRITICISM / American / Hispanic American");
        bisacMap.put("LIT004190","LITERARY CRITICISM / Ancient & Classical");
        bisacMap.put("LIT008000","LITERARY CRITICISM / Asian / General");
        bisacMap.put("LIT008010","LITERARY CRITICISM / Asian / Chinese");
        bisacMap.put("LIT008020","LITERARY CRITICISM / Asian / Indic");
        bisacMap.put("LIT008030","LITERARY CRITICISM / Asian / Japanese");
        bisacMap.put("LIT004070","LITERARY CRITICISM / Australian & Oceanian");
        bisacMap.put("LIT007000","LITERARY CRITICISM / Books & Reading");
        bisacMap.put("LIT004080","LITERARY CRITICISM / Canadian");
        bisacMap.put("LIT004100","LITERARY CRITICISM / Caribbean & Latin American");
        bisacMap.put("LIT009000","LITERARY CRITICISM / Children's Literature");
        bisacMap.put("LIT017000","LITERARY CRITICISM / Comics & Graphic Novels");
        bisacMap.put("LIT020000","LITERARY CRITICISM / Comparative Literature");
        bisacMap.put("LIT013000","LITERARY CRITICISM / Drama");
        bisacMap.put("LIT004130","LITERARY CRITICISM / European / General");
        bisacMap.put("LIT004110","LITERARY CRITICISM / European / Eastern (see also Russian & Former Soviet Union)");
        bisacMap.put("LIT004120","LITERARY CRITICISM / European / English, Irish, Scottish, Welsh");
        bisacMap.put("LIT004150","LITERARY CRITICISM / European / French");
        bisacMap.put("LIT004170","LITERARY CRITICISM / European / German");
        bisacMap.put("LIT004200","LITERARY CRITICISM / European / Italian");
        bisacMap.put("LIT004250","LITERARY CRITICISM / European / Scandinavian");
        bisacMap.put("LIT004280","LITERARY CRITICISM / European / Spanish & Portuguese");
        bisacMap.put("LIT003000","LITERARY CRITICISM / Feminist");
        bisacMap.put("LIT004160","LITERARY CRITICISM / Gay & Lesbian");
        bisacMap.put("LIT004180","LITERARY CRITICISM / Gothic & Romance");
        bisacMap.put("LIT021000","LITERARY CRITICISM / Horror & Supernatural");
        bisacMap.put("LIT016000","LITERARY CRITICISM / Humor");
        bisacMap.put("LIT004210","LITERARY CRITICISM / Jewish");
        bisacMap.put("LIT011000","LITERARY CRITICISM / Medieval");
        bisacMap.put("LIT004220","LITERARY CRITICISM / Middle Eastern");
        bisacMap.put("LIT004230","LITERARY CRITICISM / Mystery & Detective");
        bisacMap.put("LIT004060","LITERARY CRITICISM / Native American");
        bisacMap.put("LIT014000","LITERARY CRITICISM / Poetry");
        bisacMap.put("LIT012000","LITERARY CRITICISM / Reference");
        bisacMap.put("LIT019000","LITERARY CRITICISM / Renaissance");
        bisacMap.put("LIT004240","LITERARY CRITICISM / Russian & Former Soviet Union");
        bisacMap.put("LIT004260","LITERARY CRITICISM / Science Fiction & Fantasy");
        bisacMap.put("LIT006000","LITERARY CRITICISM / Semiotics & Theory");
        bisacMap.put("LIT015000","LITERARY CRITICISM / Shakespeare");
        bisacMap.put("LIT018000","LITERARY CRITICISM / Short Stories");
        bisacMap.put("LIT004290","LITERARY CRITICISM / Women Authors");
        bisacMap.put("MAT000000","MATHEMATICS / General");
        bisacMap.put("MAT002000","MATHEMATICS / Algebra / General");
        bisacMap.put("MAT002010","MATHEMATICS / Algebra / Abstract");
        bisacMap.put("MAT002030","MATHEMATICS / Algebra / Elementary");
        bisacMap.put("MAT002040","MATHEMATICS / Algebra / Intermediate");
        bisacMap.put("MAT002050","MATHEMATICS / Algebra / Linear");
        bisacMap.put("MAT003000","MATHEMATICS / Applied");
        bisacMap.put("MAT004000","MATHEMATICS / Arithmetic");
        bisacMap.put("MAT005000","MATHEMATICS / Calculus");
        bisacMap.put("MAT036000","MATHEMATICS / Combinatorics");
        bisacMap.put("MAT040000","MATHEMATICS / Complex Analysis");
        bisacMap.put("MAT006000","MATHEMATICS / Counting & Numeration");
        bisacMap.put("MAT007000","MATHEMATICS / Differential Equations / General");
        bisacMap.put("MAT007010","MATHEMATICS / Differential Equations / Ordinary");
        bisacMap.put("MAT007020","MATHEMATICS / Differential Equations / Partial");
        bisacMap.put("MAT008000","MATHEMATICS / Discrete Mathematics");
        bisacMap.put("MAT039000","MATHEMATICS / Essays");
        bisacMap.put("MAT009000","MATHEMATICS / Finite Mathematics");
        bisacMap.put("MAT037000","MATHEMATICS / Functional Analysis");
        bisacMap.put("MAT011000","MATHEMATICS / Game Theory");
        bisacMap.put("MAT012000","MATHEMATICS / Geometry / General");
        bisacMap.put("MAT012010","MATHEMATICS / Geometry / Algebraic");
        bisacMap.put("MAT012020","MATHEMATICS / Geometry / Analytic");
        bisacMap.put("MAT012030","MATHEMATICS / Geometry / Differential");
        bisacMap.put("MAT012040","MATHEMATICS / Geometry / Non-Euclidean");
        bisacMap.put("MAT013000","MATHEMATICS / Graphic Methods");
        bisacMap.put("MAT014000","MATHEMATICS / Group Theory");
        bisacMap.put("MAT015000","MATHEMATICS / History & Philosophy");
        bisacMap.put("MAT016000","MATHEMATICS / Infinity");
        bisacMap.put("MAT017000","MATHEMATICS / Linear & Nonlinear Programming");
        bisacMap.put("MAT018000","MATHEMATICS / Logic");
        bisacMap.put("MAT034000","MATHEMATICS / Mathematical Analysis");
        bisacMap.put("MAT019000","MATHEMATICS / Matrices");
        bisacMap.put("MAT020000","MATHEMATICS / Measurement");
        bisacMap.put("MAT021000","MATHEMATICS / Number Systems");
        bisacMap.put("MAT022000","MATHEMATICS / Number Theory");
        bisacMap.put("MAT041000","MATHEMATICS / Numerical Analysis");
        bisacMap.put("MAT042000","MATHEMATICS / Optimization");
        bisacMap.put("MAT023000","MATHEMATICS / Pre-Calculus");
        bisacMap.put("MAT029000","MATHEMATICS / Probability & Statistics / General");
        bisacMap.put("MAT029010","MATHEMATICS / Probability & Statistics / Bayesian Analysis");
        bisacMap.put("MAT029020","MATHEMATICS / Probability & Statistics / Multivariate Analysis");
        bisacMap.put("MAT029030","MATHEMATICS / Probability & Statistics / Regression Analysis");
        bisacMap.put("MAT029040","MATHEMATICS / Probability & Statistics / Stochastic Processes");
        bisacMap.put("MAT029050","MATHEMATICS / Probability & Statistics / Time Series");
        bisacMap.put("MAT025000","MATHEMATICS / Recreations & Games");
        bisacMap.put("MAT026000","MATHEMATICS / Reference");
        bisacMap.put("MAT027000","MATHEMATICS / Research");
        bisacMap.put("MAT028000","MATHEMATICS / Set Theory");
        bisacMap.put("MAT030000","MATHEMATICS / Study & Teaching");
        bisacMap.put("MAT038000","MATHEMATICS / Topology");
        bisacMap.put("MAT031000","MATHEMATICS / Transformations");
        bisacMap.put("MAT032000","MATHEMATICS / Trigonometry");
        bisacMap.put("MAT033000","MATHEMATICS / Vector Analysis");
        bisacMap.put("MED000000","MEDICAL / General");
        bisacMap.put("MED001000","MEDICAL / Acupuncture");
        bisacMap.put("MED002000","MEDICAL / Administration");
        bisacMap.put("MED022020","MEDICAL / AIDS & HIV");
        bisacMap.put("MED003000","MEDICAL / Allied Health Services / General");
        bisacMap.put("MED003010","MEDICAL / Allied Health Services / Emergency Medical Services");
        bisacMap.put("MED003020","MEDICAL / Allied Health Services / Hypnotherapy");
        bisacMap.put("MED003090","MEDICAL / Allied Health Services / Massage Therapy");
        bisacMap.put("MED003030","MEDICAL / Allied Health Services / Medical Assistants");
        bisacMap.put("MED003040","MEDICAL / Allied Health Services / Medical Technology");
        bisacMap.put("MED003050","MEDICAL / Allied Health Services / Occupational Therapy");
        bisacMap.put("MED003060","MEDICAL / Allied Health Services / Physical Therapy");
        bisacMap.put("MED003070","MEDICAL / Allied Health Services / Radiological & Ultrasound Technology");
        bisacMap.put("MED003080","MEDICAL / Allied Health Services / Respiratory Therapy");
        bisacMap.put("MED004000","MEDICAL / Alternative & Complementary Medicine");
        bisacMap.put("MED005000","MEDICAL / Anatomy");
        bisacMap.put("MED006000","MEDICAL / Anesthesiology");
        bisacMap.put("MED101000","MEDICAL / Atlases");
        bisacMap.put("MED007000","MEDICAL / Audiology & Speech Pathology");
        bisacMap.put("MED111000","MEDICAL / Bariatrics");
        bisacMap.put("MED008000","MEDICAL / Biochemistry");
        bisacMap.put("MED090000","MEDICAL / Biostatistics");
        bisacMap.put("MED009000","MEDICAL / Biotechnology");
        bisacMap.put("MED010000","MEDICAL / Cardiology");
        bisacMap.put("MED011000","MEDICAL / Caregiving");
        bisacMap.put("MED012000","MEDICAL / Chemotherapy");
        bisacMap.put("MED013000","MEDICAL / Chiropractic");
        bisacMap.put("MED014000","MEDICAL / Clinical Medicine");
        bisacMap.put("MED015000","MEDICAL / Critical Care");
        bisacMap.put("MED016000","MEDICAL / Dentistry / General");
        bisacMap.put("MED016010","MEDICAL / Dentistry / Dental Assisting");
        bisacMap.put("MED016020","MEDICAL / Dentistry / Dental Hygiene");
        bisacMap.put("MED016080","MEDICAL / Dentistry / Dental Implants");
        bisacMap.put("MED016060","MEDICAL / Dentistry / Endodontics");
        bisacMap.put("MED016050","MEDICAL / Dentistry / Oral Surgery");
        bisacMap.put("MED016030","MEDICAL / Dentistry / Orthodontics");
        bisacMap.put("MED016040","MEDICAL / Dentistry / Periodontics");
        bisacMap.put("MED016090","MEDICAL / Dentistry / Practice Management");
        bisacMap.put("MED016070","MEDICAL / Dentistry / Prosthodontics");
        bisacMap.put("MED017000","MEDICAL / Dermatology");
        bisacMap.put("MED018000","MEDICAL / Diagnosis");
        bisacMap.put("MED019000","MEDICAL / Diagnostic Imaging");
        bisacMap.put("MED020000","MEDICAL / Dictionaries & Terminology");
        bisacMap.put("MED021000","MEDICAL / Diet Therapy");
        bisacMap.put("MED022000","MEDICAL / Diseases");
        bisacMap.put("MED023000","MEDICAL / Drug Guides");
        bisacMap.put("MED024000","MEDICAL / Education & Training");
        bisacMap.put("MED025000","MEDICAL / Embryology");
        bisacMap.put("MED026000","MEDICAL / Emergency Medicine");
        bisacMap.put("MED027000","MEDICAL / Endocrinology & Metabolism");
        bisacMap.put("MED028000","MEDICAL / Epidemiology");
        bisacMap.put("MED109000","MEDICAL / Essays");
        bisacMap.put("MED050000","MEDICAL / Ethics");
        bisacMap.put("MED112000","MEDICAL / Evidence-Based Medicine");
        bisacMap.put("MED029000","MEDICAL / Family & General Practice");
        bisacMap.put("MED030000","MEDICAL / Forensic Medicine");
        bisacMap.put("MED031000","MEDICAL / Gastroenterology");
        bisacMap.put("MED107000","MEDICAL / Genetics");
        bisacMap.put("MED032000","MEDICAL / Geriatrics");
        bisacMap.put("MED033000","MEDICAL / Gynecology & Obstetrics");
        bisacMap.put("MED034000","MEDICAL / Healing");
        bisacMap.put("MED035000","MEDICAL / Health Care Delivery");
        bisacMap.put("MED036000","MEDICAL / Health Policy");
        bisacMap.put("MED037000","MEDICAL / Health Risk Assessment");
        bisacMap.put("MED038000","MEDICAL / Hematology");
        bisacMap.put("MED114000","MEDICAL / Hepatology");
        bisacMap.put("MED110000","MEDICAL / Histology");
        bisacMap.put("MED039000","MEDICAL / History");
        bisacMap.put("MED040000","MEDICAL / Holistic Medicine");
        bisacMap.put("MED041000","MEDICAL / Home Care");
        bisacMap.put("MED043000","MEDICAL / Hospital Administration & Care");
        bisacMap.put("MED044000","MEDICAL / Immunology");
        bisacMap.put("MED115000","MEDICAL / Infection Control");
        bisacMap.put("MED022090","MEDICAL / Infectious Diseases");
        bisacMap.put("MED108000","MEDICAL / Instruments & Supplies");
        bisacMap.put("MED045000","MEDICAL / Internal Medicine");
        bisacMap.put("MED047000","MEDICAL / Laboratory Medicine");
        bisacMap.put("MED048000","MEDICAL / Lasers in Medicine");
        bisacMap.put("MED113000","MEDICAL / Long-Term Care");
        bisacMap.put("MED049000","MEDICAL / Medicaid & Medicare");
        bisacMap.put("MED051000","MEDICAL / Medical History & Records");
        bisacMap.put("MED102000","MEDICAL / Mental Health");
        bisacMap.put("MED052000","MEDICAL / Microbiology");
        bisacMap.put("MED055000","MEDICAL / Nephrology");
        bisacMap.put("MED056000","MEDICAL / Neurology");
        bisacMap.put("MED057000","MEDICAL / Neuroscience");
        bisacMap.put("MED091000","MEDICAL / Nosology");
        bisacMap.put("MED058000","MEDICAL / Nursing / General");
        bisacMap.put("MED058010","MEDICAL / Nursing / Anesthesia");
        bisacMap.put("MED058020","MEDICAL / Nursing / Assessment & Diagnosis");
        bisacMap.put("MED058030","MEDICAL / Nursing / Critical & Intensive Care");
        bisacMap.put("MED058040","MEDICAL / Nursing / Emergency");
        bisacMap.put("MED058050","MEDICAL / Nursing / Fundamentals & Skills");
        bisacMap.put("MED058060","MEDICAL / Nursing / Gerontology");
        bisacMap.put("MED058070","MEDICAL / Nursing / Home & Community Care");
        bisacMap.put("MED058090","MEDICAL / Nursing / Issues");
        bisacMap.put("MED058100","MEDICAL / Nursing / LPN & LVN");
        bisacMap.put("MED058110","MEDICAL / Nursing / Management & Leadership");
        bisacMap.put("MED058120","MEDICAL / Nursing / Maternity, Perinatal, Women's Health");
        bisacMap.put("MED058220","MEDICAL / Nursing / Medical & Surgical");
        bisacMap.put("MED058130","MEDICAL / Nursing / Mental Health");
        bisacMap.put("MED058140","MEDICAL / Nursing / Nurse & Patient");
        bisacMap.put("MED058150","MEDICAL / Nursing / Nutrition");
        bisacMap.put("MED058160","MEDICAL / Nursing / Oncology & Cancer");
        bisacMap.put("MED058080","MEDICAL / Nursing / Pediatric & Neonatal");
        bisacMap.put("MED058170","MEDICAL / Nursing / Pharmacology");
        bisacMap.put("MED058180","MEDICAL / Nursing / Psychiatric");
        bisacMap.put("MED058190","MEDICAL / Nursing / Reference");
        bisacMap.put("MED058200","MEDICAL / Nursing / Research & Theory");
        bisacMap.put("MED058210","MEDICAL / Nursing / Test Preparation & Review");
        bisacMap.put("MED059000","MEDICAL / Nursing Home Care");
        bisacMap.put("MED060000","MEDICAL / Nutrition");
        bisacMap.put("MED061000","MEDICAL / Occupational & Industrial Medicine");
        bisacMap.put("MED062000","MEDICAL / Oncology");
        bisacMap.put("MED063000","MEDICAL / Ophthalmology");
        bisacMap.put("MED064000","MEDICAL / Optometry");
        bisacMap.put("MED065000","MEDICAL / Orthopedics");
        bisacMap.put("MED092000","MEDICAL / Osteopathy");
        bisacMap.put("MED066000","MEDICAL / Otorhinolaryngology");
        bisacMap.put("MED093000","MEDICAL / Pain Medicine");
        bisacMap.put("MED103000","MEDICAL / Parasitology");
        bisacMap.put("MED067000","MEDICAL / Pathology");
        bisacMap.put("MED068000","MEDICAL / Pathophysiology");
        bisacMap.put("MED094000","MEDICAL / Pediatric Emergencies");
        bisacMap.put("MED069000","MEDICAL / Pediatrics");
        bisacMap.put("MED070000","MEDICAL / Perinatology & Neonatology");
        bisacMap.put("MED071000","MEDICAL / Pharmacology");
        bisacMap.put("MED072000","MEDICAL / Pharmacy");
        bisacMap.put("MED073000","MEDICAL / Physical Medicine & Rehabilitation");
        bisacMap.put("MED074000","MEDICAL / Physician & Patient");
        bisacMap.put("MED104000","MEDICAL / Physicians");
        bisacMap.put("MED075000","MEDICAL / Physiology");
        bisacMap.put("MED100000","MEDICAL / Podiatry");
        bisacMap.put("MED095000","MEDICAL / Practice Management & Reimbursement");
        bisacMap.put("MED076000","MEDICAL / Preventive Medicine");
        bisacMap.put("MED077000","MEDICAL / Prosthesis");
        bisacMap.put("MED105000","MEDICAL / Psychiatry / General");
        bisacMap.put("MED105010","MEDICAL / Psychiatry / Child & Adolescent");
        bisacMap.put("MED105020","MEDICAL / Psychiatry / Psychopharmacology");
        bisacMap.put("MED078000","MEDICAL / Public Health");
        bisacMap.put("MED079000","MEDICAL / Pulmonary & Thoracic Medicine");
        bisacMap.put("MED080000","MEDICAL / Radiology & Nuclear Medicine");
        bisacMap.put("MED081000","MEDICAL / Reference");
        bisacMap.put("MED082000","MEDICAL / Reproductive Medicine & Technology");
        bisacMap.put("MED106000","MEDICAL / Research");
        bisacMap.put("MED083000","MEDICAL / Rheumatology");
        bisacMap.put("MED084000","MEDICAL / Sports Medicine");
        bisacMap.put("MED085000","MEDICAL / Surgery / General");
        bisacMap.put("MED085060","MEDICAL / Surgery / Colon & Rectal");
        bisacMap.put("MED085010","MEDICAL / Surgery / Neurosurgery");
        bisacMap.put("MED085020","MEDICAL / Surgery / Oral & Maxillofacial");
        bisacMap.put("MED085030","MEDICAL / Surgery / Plastic & Cosmetic");
        bisacMap.put("MED085040","MEDICAL / Surgery / Thoracic");
        bisacMap.put("MED085070","MEDICAL / Surgery / Transplant");
        bisacMap.put("MED085050","MEDICAL / Surgery / Vascular");
        bisacMap.put("MED042000","MEDICAL / Terminal Care");
        bisacMap.put("MED086000","MEDICAL / Test Preparation & Review");
        bisacMap.put("MED096000","MEDICAL / Toxicology");
        bisacMap.put("MED087000","MEDICAL / Transportation");
        bisacMap.put("MED097000","MEDICAL / Tropical Medicine");
        bisacMap.put("MED098000","MEDICAL / Ultrasonography");
        bisacMap.put("MED088000","MEDICAL / Urology");
        bisacMap.put("MED089000","MEDICAL / Veterinary Medicine / General");
        bisacMap.put("MED089010","MEDICAL / Veterinary Medicine / Equine");
        bisacMap.put("MED089020","MEDICAL / Veterinary Medicine / Food Animal");
        bisacMap.put("MED089030","MEDICAL / Veterinary Medicine / Small Animal");
        bisacMap.put("MUS000000","MUSIC / General");
        bisacMap.put("MUS004000","MUSIC / Business Aspects");
        bisacMap.put("MUS012000","MUSIC / Discography & Buyer's Guides");
        bisacMap.put("MUS014000","MUSIC / Ethnic");
        bisacMap.put("MUS015000","MUSIC / Ethnomusicology");
        bisacMap.put("MUS049000","MUSIC / Genres & Styles / General");
        bisacMap.put("MUS002000","MUSIC / Genres & Styles / Ballet");
        bisacMap.put("MUS053000","MUSIC / Genres & Styles / Big Band & Swing");
        bisacMap.put("MUS003000","MUSIC / Genres & Styles / Blues");
        bisacMap.put("MUS005000","MUSIC / Genres & Styles / Chamber");
        bisacMap.put("MUS026000","MUSIC / Genres & Styles / Children's");
        bisacMap.put("MUS051000","MUSIC / Genres & Styles / Choral");
        bisacMap.put("MUS006000","MUSIC / Genres & Styles / Classical");
        bisacMap.put("MUS010000","MUSIC / Genres & Styles / Country & Bluegrass");
        bisacMap.put("MUS011000","MUSIC / Genres & Styles / Dance");
        bisacMap.put("MUS013000","MUSIC / Genres & Styles / Electronic");
        bisacMap.put("NAT004000","NATURE / Birdwatching Guides");
        bisacMap.put("MUS017000","MUSIC / Genres & Styles / Folk & Traditional");
        bisacMap.put("MUS019000","MUSIC / Genres & Styles / Heavy Metal");
        bisacMap.put("MUS024000","MUSIC / Genres & Styles / International");
        bisacMap.put("MUS025000","MUSIC / Genres & Styles / Jazz");
        bisacMap.put("MUS036000","MUSIC / Genres & Styles / Latin");
        bisacMap.put("MUS045000","MUSIC / Genres & Styles / Military & Marches");
        bisacMap.put("MUS046000","MUSIC / Genres & Styles / Musicals");
        bisacMap.put("MUS027000","MUSIC / Genres & Styles / New Age");
        bisacMap.put("MUS028000","MUSIC / Genres & Styles / Opera");
        bisacMap.put("MUS029000","MUSIC / Genres & Styles / Pop Vocal");
        bisacMap.put("MUS030000","MUSIC / Genres & Styles / Punk");
        bisacMap.put("MUS031000","MUSIC / Genres & Styles / Rap & Hip Hop");
        bisacMap.put("MUS047000","MUSIC / Genres & Styles / Reggae");
        bisacMap.put("MUS035000","MUSIC / Genres & Styles / Rock");
        bisacMap.put("MUS039000","MUSIC / Genres & Styles / Soul & R 'n B");
        bisacMap.put("MUS020000","MUSIC / History & Criticism");
        bisacMap.put("MUS050000","MUSIC / Individual Composer & Musician");
        bisacMap.put("MUS022000","MUSIC / Instruction & Study / General");
        bisacMap.put("MUS001000","MUSIC / Instruction & Study / Appreciation");
        bisacMap.put("MUS007000","MUSIC / Instruction & Study / Composition");
        bisacMap.put("MUS008000","MUSIC / Instruction & Study / Conducting");
        bisacMap.put("MUS016000","MUSIC / Instruction & Study / Exercises");
        bisacMap.put("MUS038000","MUSIC / Instruction & Study / Songwriting");
        bisacMap.put("MUS040000","MUSIC / Instruction & Study / Techniques");
        bisacMap.put("MUS041000","MUSIC / Instruction & Study / Theory");
        bisacMap.put("MUS042000","MUSIC / Instruction & Study / Voice");
        bisacMap.put("MUS052000","MUSIC / Lyrics");
        bisacMap.put("MUS023000","MUSIC / Musical Instruments / General");
        bisacMap.put("MUS023010","MUSIC / Musical Instruments / Brass");
        bisacMap.put("MUS023060","MUSIC / Musical Instruments / Guitar");
        bisacMap.put("MUS023020","MUSIC / Musical Instruments / Percussion");
        bisacMap.put("MUS023030","MUSIC / Musical Instruments / Piano & Keyboard");
        bisacMap.put("MUS023040","MUSIC / Musical Instruments / Strings");
        bisacMap.put("MUS023050","MUSIC / Musical Instruments / Woodwinds");
        bisacMap.put("MUS037000","MUSIC / Printed Music / General");
        bisacMap.put("MUS037010","MUSIC / Printed Music / Artist Specific");
        bisacMap.put("MUS037020","MUSIC / Printed Music / Band & Orchestra");
        bisacMap.put("MUS037120","MUSIC / Printed Music / Brass");
        bisacMap.put("MUS037030","MUSIC / Printed Music / Choral");
        bisacMap.put("MUS037040","MUSIC / Printed Music / Guitar & Fretted Instruments");
        bisacMap.put("MUS037050","MUSIC / Printed Music / Mixed Collections");
        bisacMap.put("MUS037060","MUSIC / Printed Music / Musicals, Film & TV");
        bisacMap.put("MUS037070","MUSIC / Printed Music / Opera & Classical Scores");
        bisacMap.put("MUS037080","MUSIC / Printed Music / Percussion");
        bisacMap.put("MUS037090","MUSIC / Printed Music / Piano & Keyboard Repertoire");
        bisacMap.put("MUS037100","MUSIC / Printed Music / Piano-Vocal-Guitar");
        bisacMap.put("MUS037130","MUSIC / Printed Music / Strings");
        bisacMap.put("MUS037110","MUSIC / Printed Music / Vocal");
        bisacMap.put("MUS037140","MUSIC / Printed Music / Woodwinds");
        bisacMap.put("MUS032000","MUSIC / Recording & Reproduction");
        bisacMap.put("MUS033000","MUSIC / Reference");
        bisacMap.put("MUS048000","MUSIC / Religious / General");
        bisacMap.put("MUS048010","MUSIC / Religious / Christian");
        bisacMap.put("MUS009000","MUSIC / Religious / Contemporary Christian");
        bisacMap.put("MUS018000","MUSIC / Religious / Gospel");
        bisacMap.put("MUS021000","MUSIC / Religious / Hymns");
        bisacMap.put("MUS048020","MUSIC / Religious / Jewish");
        bisacMap.put("MUS048030","MUSIC / Religious / Muslim");
        bisacMap.put("NAT000000","NATURE / General");
        bisacMap.put("NAT039000","NATURE / Animal Rights");
        bisacMap.put("NAT001000","NATURE / Animals / General");
        bisacMap.put("NAT003000","NATURE / Animals / Bears");
        bisacMap.put("NAT042000","NATURE / Animals / Big Cats");
        bisacMap.put("NAT043000","NATURE / Animals / Birds");
        bisacMap.put("NAT005000","NATURE / Animals / Butterflies & Moths");
        bisacMap.put("NAT007000","NATURE / Animals / Dinosaurs & Prehistoric Creatures");
        bisacMap.put("NAT012000","NATURE / Animals / Fish");
        bisacMap.put("NAT016000","NATURE / Animals / Horses");
        bisacMap.put("NAT017000","NATURE / Animals / Insects & Spiders");
        bisacMap.put("NAT019000","NATURE / Animals / Mammals");
        bisacMap.put("NAT020000","NATURE / Animals / Marine Life");
        bisacMap.put("NAT002000","NATURE / Animals / Primates");
        bisacMap.put("NAT028000","NATURE / Animals / Reptiles & Amphibians");
        bisacMap.put("NAT037000","NATURE / Animals / Wildlife");
        bisacMap.put("NAT044000","NATURE / Animals / Wolves");
        bisacMap.put("NAT009000","NATURE / Earthquakes & Volcanoes");
        bisacMap.put("NAT010000","NATURE / Ecology");
        bisacMap.put("NAT045000","NATURE / Ecosystems & Habitats / General");
        bisacMap.put("NAT045050","NATURE / Ecosystems & Habitats / Coastal Regions & Shorelines");
        bisacMap.put("NAT045010","NATURE / Ecosystems & Habitats / Deserts");
        bisacMap.put("NAT014000","NATURE / Ecosystems & Habitats / Forests & Rainforests");
        bisacMap.put("NAT018000","NATURE / Ecosystems & Habitats / Lakes, Ponds & Swamps");
        bisacMap.put("NAT041000","NATURE / Ecosystems & Habitats / Mountains");
        bisacMap.put("NAT025000","NATURE / Ecosystems & Habitats / Oceans & Seas");
        bisacMap.put("NAT045020","NATURE / Ecosystems & Habitats / Plains & Prairies");
        bisacMap.put("NAT045030","NATURE / Ecosystems & Habitats / Polar Regions");
        bisacMap.put("NAT029000","NATURE / Ecosystems & Habitats / Rivers");
        bisacMap.put("NAT045040","NATURE / Ecosystems & Habitats / Wilderness");
        bisacMap.put("NAT046000","NATURE / Endangered Species");
        bisacMap.put("NAT011000","NATURE / Environmental Conservation & Protection");
        bisacMap.put("NAT024000","NATURE / Essays");
        bisacMap.put("NAT015000","NATURE / Fossils");
        bisacMap.put("NAT023000","NATURE / Natural Disasters");
        bisacMap.put("NAT038000","NATURE / Natural Resources");
        bisacMap.put("NAT026000","NATURE / Plants / General");
        bisacMap.put("NAT047000","NATURE / Plants / Aquatic");
        bisacMap.put("NAT048000","NATURE / Plants / Cacti & Succulents");
        bisacMap.put("NAT013000","NATURE / Plants / Flowers");
        bisacMap.put("NAT022000","NATURE / Plants / Mushrooms");
        bisacMap.put("NAT034000","NATURE / Plants / Trees");
        bisacMap.put("NAT027000","NATURE / Reference");
        bisacMap.put("NAT049000","NATURE / Regional");
        bisacMap.put("NAT030000","NATURE / Rocks & Minerals");
        bisacMap.put("NAT031000","NATURE / Seashells");
        bisacMap.put("NAT032000","NATURE / Seasons");
        bisacMap.put("NAT033000","NATURE / Sky Observation");
        bisacMap.put("NAT036000","NATURE / Weather");
        bisacMap.put("PER000000","PERFORMING ARTS / General");
        bisacMap.put("PER001000","PERFORMING ARTS / Acting & Auditioning");
        bisacMap.put("PER017000","PERFORMING ARTS / Animation");
        bisacMap.put("PER014000","PERFORMING ARTS / Business Aspects");
        bisacMap.put("PER002000","PERFORMING ARTS / Circus");
        bisacMap.put("PER015000","PERFORMING ARTS / Comedy");
        bisacMap.put("PER003000","PERFORMING ARTS / Dance / General");
        bisacMap.put("PER003010","PERFORMING ARTS / Dance / Classical & Ballet");
        bisacMap.put("PER003090","PERFORMING ARTS / Dance / Ballroom");
        bisacMap.put("PER003020","PERFORMING ARTS / Dance / Folk");
        bisacMap.put("PER003100","PERFORMING ARTS / Dance / History & Criticism");
        bisacMap.put("PER003030","PERFORMING ARTS / Dance / Jazz");
        bisacMap.put("PER003040","PERFORMING ARTS / Dance / Modern");
        bisacMap.put("PER003050","PERFORMING ARTS / Dance / Notation");
        bisacMap.put("PER003060","PERFORMING ARTS / Dance / Popular");
        bisacMap.put("PER003070","PERFORMING ARTS / Dance / Reference");
        bisacMap.put("PER003080","PERFORMING ARTS / Dance / Tap");
        bisacMap.put("PER004000","PERFORMING ARTS / Film & Video / General");
        bisacMap.put("PER004010","PERFORMING ARTS / Film & Video / Direction & Production");
        bisacMap.put("PER004020","PERFORMING ARTS / Film & Video / Guides & Reviews");
        bisacMap.put("PER004030","PERFORMING ARTS / Film & Video / History & Criticism");
        bisacMap.put("PER004040","PERFORMING ARTS / Film & Video / Reference");
        bisacMap.put("PER004050","PERFORMING ARTS / Film & Video / Screenwriting");
        bisacMap.put("PER018000","PERFORMING ARTS / Individual Director (see also BIOGRAPHY & AUTOBIOGRAPHY / Entertainment & Performing Arts)");
        bisacMap.put("PER020000","PERFORMING ARTS / Monologues & Scenes");
        bisacMap.put("PER007000","PERFORMING ARTS / Puppets & Puppetry");
        bisacMap.put("PER008000","PERFORMING ARTS / Radio / General");
        bisacMap.put("PER008010","PERFORMING ARTS / Radio / History & Criticism");
        bisacMap.put("PER008020","PERFORMING ARTS / Radio / Reference");
        bisacMap.put("PER009000","PERFORMING ARTS / Reference");
        bisacMap.put("PER016000","PERFORMING ARTS / Screenplays");
        bisacMap.put("PER019000","PERFORMING ARTS / Storytelling");
        bisacMap.put("PER010000","PERFORMING ARTS / Television / General");
        bisacMap.put("PER010010","PERFORMING ARTS / Television / Direction & Production");
        bisacMap.put("PER010020","PERFORMING ARTS / Television / Guides & Reviews");
        bisacMap.put("PER010030","PERFORMING ARTS / Television / History & Criticism");
        bisacMap.put("PER010040","PERFORMING ARTS / Television / Reference");
        bisacMap.put("PER010050","PERFORMING ARTS / Television / Screenwriting");
        bisacMap.put("PER011000","PERFORMING ARTS / Theater / General");
        bisacMap.put("PHO015000","PHOTOGRAPHY / Photojournalism");
        bisacMap.put("PER013000","PERFORMING ARTS / Theater / Broadway & Musical Revue");
        bisacMap.put("PER011010","PERFORMING ARTS / Theater / Direction & Production");
        bisacMap.put("PER011020","PERFORMING ARTS / Theater / History & Criticism");
        bisacMap.put("PER006000","PERFORMING ARTS / Theater / Miming");
        bisacMap.put("PER011030","PERFORMING ARTS / Theater / Playwriting");
        bisacMap.put("PER011040","PERFORMING ARTS / Theater / Stagecraft");
        bisacMap.put("PET000000","PETS / General");
        bisacMap.put("PET002000","PETS / Birds");
        bisacMap.put("PET003000","PETS / Cats / General");
        bisacMap.put("PET003010","PETS / Cats / Breeds");
        bisacMap.put("PET004000","PETS / Dogs / General");
        bisacMap.put("PET004010","PETS / Dogs / Breeds");
        bisacMap.put("PET004020","PETS / Dogs / Training");
        bisacMap.put("PET005000","PETS / Fish & Aquariums");
        bisacMap.put("PET006000","PETS / Horses");
        bisacMap.put("PET006010","PETS / Horses / Riding");
        bisacMap.put("PET010000","PETS / Essays & Narratives");
        bisacMap.put("PET011000","PETS / Rabbits, Mice, Hamsters, Guinea Pigs, etc.");
        bisacMap.put("PET008000","PETS / Reference");
        bisacMap.put("PET009000","PETS / Reptiles, Amphibians & Terrariums");
        bisacMap.put("PHI000000","PHILOSOPHY / General");
        bisacMap.put("PHI001000","PHILOSOPHY / Aesthetics");
        bisacMap.put("PHI028000","PHILOSOPHY / Buddhist");
        bisacMap.put("PHI026000","PHILOSOPHY / Criticism");
        bisacMap.put("PHI003000","PHILOSOPHY / Eastern");
        bisacMap.put("PHI004000","PHILOSOPHY / Epistemology");
        bisacMap.put("PHI035000","PHILOSOPHY / Essays");
        bisacMap.put("PHI005000","PHILOSOPHY / Ethics & Moral Philosophy");
        bisacMap.put("PHI007000","PHILOSOPHY / Free Will & Determinism");
        bisacMap.put("PHI008000","PHILOSOPHY / Good & Evil");
        bisacMap.put("PHI036000","PHILOSOPHY / Hermeneutics");
        bisacMap.put("PHI033000","PHILOSOPHY / Hindu");
        bisacMap.put("PHI009000","PHILOSOPHY / History & Surveys / General");
        bisacMap.put("PHI002000","PHILOSOPHY / History & Surveys / Ancient & Classical");
        bisacMap.put("PHI012000","PHILOSOPHY / History & Surveys / Medieval");
        bisacMap.put("PHI037000","PHILOSOPHY / History & Surveys / Renaissance");
        bisacMap.put("PHI016000","PHILOSOPHY / History & Surveys / Modern");
        bisacMap.put("PHI038000","PHILOSOPHY / Language");
        bisacMap.put("PHI011000","PHILOSOPHY / Logic");
        bisacMap.put("PHI013000","PHILOSOPHY / Metaphysics");
        bisacMap.put("PHI014000","PHILOSOPHY / Methodology");
        bisacMap.put("PHI015000","PHILOSOPHY / Mind & Body");
        bisacMap.put("PHI031000","PHILOSOPHY / Movements / General");
        bisacMap.put("PHI039000","PHILOSOPHY / Movements / Analytic");
        bisacMap.put("PHI040000","PHILOSOPHY / Movements / Critical Theory");
        bisacMap.put("PHI027000","PHILOSOPHY / Movements / Deconstruction");
        bisacMap.put("PHI041000","PHILOSOPHY / Movements / Empiricism");
        bisacMap.put("PHI006000","PHILOSOPHY / Movements / Existentialism");
        bisacMap.put("PHI010000","PHILOSOPHY / Movements / Humanism");
        bisacMap.put("PHI042000","PHILOSOPHY / Movements / Idealism");
        bisacMap.put("PHI018000","PHILOSOPHY / Movements / Phenomenology");
        bisacMap.put("PHI043000","PHILOSOPHY / Movements / Post-Structuralism");
        bisacMap.put("PHI020000","PHILOSOPHY / Movements / Pragmatism");
        bisacMap.put("PHI032000","PHILOSOPHY / Movements / Rationalism");
        bisacMap.put("PHI044000","PHILOSOPHY / Movements / Realism");
        bisacMap.put("PHI029000","PHILOSOPHY / Movements / Structuralism");
        bisacMap.put("PHI030000","PHILOSOPHY / Movements / Utilitarianism");
        bisacMap.put("PHI019000","PHILOSOPHY / Political");
        bisacMap.put("PHI021000","PHILOSOPHY / Reference");
        bisacMap.put("PHI022000","PHILOSOPHY / Religious");
        bisacMap.put("PHI034000","PHILOSOPHY / Social");
        bisacMap.put("PHI023000","PHILOSOPHY / Taoist");
        bisacMap.put("PHI025000","PHILOSOPHY / Zen");
        bisacMap.put("PHO000000","PHOTOGRAPHY / General");
        bisacMap.put("PHO025000","PHOTOGRAPHY / Annuals");
        bisacMap.put("PHO003000","PHOTOGRAPHY / Business Aspects");
        bisacMap.put("PHO004000","PHOTOGRAPHY / Collections, Catalogs, Exhibitions / General");
        bisacMap.put("PHO004010","PHOTOGRAPHY / Collections, Catalogs, Exhibitions / Group Shows");
        bisacMap.put("PHO004020","PHOTOGRAPHY / Collections, Catalogs, Exhibitions / Permanent Collections");
        bisacMap.put("PHO021000","PHOTOGRAPHY / Commercial");
        bisacMap.put("PHO005000","PHOTOGRAPHY / Criticism");
        bisacMap.put("PHO010000","PHOTOGRAPHY / History");
        bisacMap.put("PHO011000","PHOTOGRAPHY / Individual Photographers / General");
        bisacMap.put("PHO011010","PHOTOGRAPHY / Individual Photographers / Artists' Books");
        bisacMap.put("PHO011020","PHOTOGRAPHY / Individual Photographers / Essays");
        bisacMap.put("PHO011030","PHOTOGRAPHY / Individual Photographers / Monographs");
        bisacMap.put("PHO014000","PHOTOGRAPHY / Photoessays & Documentaries");
        bisacMap.put("PHO017000","PHOTOGRAPHY / Reference");
        bisacMap.put("PHO023000","PHOTOGRAPHY / Subjects & Themes / General");
        bisacMap.put("PHO023010","PHOTOGRAPHY / Subjects & Themes / Aerial");
        bisacMap.put("PHO001000","PHOTOGRAPHY / Subjects & Themes / Architectural & Industrial");
        bisacMap.put("PHO023070","PHOTOGRAPHY / Subjects & Themes / Celebrations & Events");
        bisacMap.put("PHO023080","PHOTOGRAPHY / Subjects & Themes / Celebrity");
        bisacMap.put("PHO023020","PHOTOGRAPHY / Subjects & Themes / Children");
        bisacMap.put("PHO023030","PHOTOGRAPHY / Subjects & Themes / Erotica");
        bisacMap.put("PHO009000","PHOTOGRAPHY / Subjects & Themes / Fashion");
        bisacMap.put("PHO023100","PHOTOGRAPHY / Subjects & Themes / Historical");
        bisacMap.put("PHO023040","PHOTOGRAPHY / Subjects & Themes / Landscapes");
        bisacMap.put("PHO023090","PHOTOGRAPHY / Subjects & Themes / Lifestyles");
        bisacMap.put("PHO023050","PHOTOGRAPHY / Subjects & Themes / Nudes");
        bisacMap.put("PHO013000","PHOTOGRAPHY / Subjects & Themes / Plants & Animals");
        bisacMap.put("PHO016000","PHOTOGRAPHY / Subjects & Themes / Portraits");
        bisacMap.put("PHO019000","PHOTOGRAPHY / Subjects & Themes / Regional (see also TRAVEL / Pictorials)");
        bisacMap.put("PHO023060","PHOTOGRAPHY / Subjects & Themes / Sports");
        bisacMap.put("PHO018000","PHOTOGRAPHY / Techniques / General");
        bisacMap.put("PHO022000","PHOTOGRAPHY / Techniques / Cinematography & Videography");
        bisacMap.put("PHO020000","PHOTOGRAPHY / Techniques / Color");
        bisacMap.put("PHO006000","PHOTOGRAPHY / Techniques / Darkroom");
        bisacMap.put("PHO024000","PHOTOGRAPHY / Techniques / Digital (see also COMPUTERS / Digital Media / Photography)");
        bisacMap.put("PHO007000","PHOTOGRAPHY / Techniques / Equipment");
        bisacMap.put("PHO012000","PHOTOGRAPHY / Techniques / Lighting");
        bisacMap.put("POE000000","POETRY / General");
        bisacMap.put("POE007000","POETRY / African");
        bisacMap.put("POE005010","POETRY / American / General");
        bisacMap.put("POE005050","POETRY / American / African American");
        bisacMap.put("POE005060","POETRY / American / Asian American");
        bisacMap.put("POE005070","POETRY / American / Hispanic American");
        bisacMap.put("POE008000","POETRY / Ancient & Classical");
        bisacMap.put("POE001000","POETRY / Anthologies (multiple authors)");
        bisacMap.put("POE009000","POETRY / Asian / General");
        bisacMap.put("POE009010","POETRY / Asian / Chinese");
        bisacMap.put("POE009020","POETRY / Asian / Japanese");
        bisacMap.put("POE010000","POETRY / Australian & Oceanian");
        bisacMap.put("POE011000","POETRY / Canadian");
        bisacMap.put("POE012000","POETRY / Caribbean & Latin American");
        bisacMap.put("POE014000","POETRY / Epic");
        bisacMap.put("POE005030","POETRY / European / General");
        bisacMap.put("POE005020","POETRY / European / English, Irish, Scottish, Welsh");
        bisacMap.put("POE017000","POETRY / European / French");
        bisacMap.put("PEO018000","POETRY / European / German");
        bisacMap.put("POE019000","POETRY / European / Italian");
        bisacMap.put("POE020000","POETRY / European / Spanish & Portuguese");
        bisacMap.put("POE021000","POETRY / Gay & Lesbian");
        bisacMap.put("POE022000","POETRY / Medieval");
        bisacMap.put("POE013000","POETRY / Middle Eastern");
        bisacMap.put("POE015000","POETRY / Native American");
        bisacMap.put("POE016000","POETRY / Russian & Former Soviet Union");
        bisacMap.put("POE023000","POETRY / Subjects & Themes / General");
        bisacMap.put("POE023010","POETRY / Subjects & Themes / Death");
        bisacMap.put("POE003000","POETRY / Subjects & Themes / Inspirational & Religious");
        bisacMap.put("POE023020","POETRY / Subjects & Themes / Love");
        bisacMap.put("POE023030","POETRY / Subjects & Themes / Nature");
        bisacMap.put("POE023040","POETRY / Subjects & Themes / Places");
        bisacMap.put("POE024000","POETRY / Women Authors");
        bisacMap.put("POL000000","POLITICAL SCIENCE / General");
        bisacMap.put("POL040000","POLITICAL SCIENCE / American Government / General");
        bisacMap.put("POL040010","POLITICAL SCIENCE / American Government / Executive Branch");
        bisacMap.put("POL040030","POLITICAL SCIENCE / American Government / Judicial Branch");
        bisacMap.put("POL006000","POLITICAL SCIENCE / American Government / Legislative Branch");
        bisacMap.put("POL040040","POLITICAL SCIENCE / American Government / Local");
        bisacMap.put("POL030000","POLITICAL SCIENCE / American Government / National");
        bisacMap.put("POL020000","POLITICAL SCIENCE / American Government / State & Provincial");
        bisacMap.put("POL039000","POLITICAL SCIENCE / Censorship");
        bisacMap.put("POL003000","POLITICAL SCIENCE / Civics & Citizenship");
        bisacMap.put("POL004000","POLITICAL SCIENCE / Civil Rights");
        bisacMap.put("POL045000","POLITICAL SCIENCE / Colonialism & Post-Colonialism");
        bisacMap.put("REF010000","REFERENCE / Encyclopedias");
        bisacMap.put("POL046000","POLITICAL SCIENCE / Commentary & Opinion");
        bisacMap.put("POL009000","POLITICAL SCIENCE / Comparative Politics");
        bisacMap.put("POL022000","POLITICAL SCIENCE / Constitutions");
        bisacMap.put("POL032000","POLITICAL SCIENCE / Essays");
        bisacMap.put("POL061000","POLITICAL SCIENCE / Genocide & War Crimes");
        bisacMap.put("POL062000","POLITICAL SCIENCE / Geopolitics");
        bisacMap.put("POL033000","POLITICAL SCIENCE / Globalization");
        bisacMap.put("POL010000","POLITICAL SCIENCE / History & Theory");
        bisacMap.put("POL035010","POLITICAL SCIENCE / Human Rights");
        bisacMap.put("POL047000","POLITICAL SCIENCE / Imperialism");
        bisacMap.put("POL036000","POLITICAL SCIENCE / Intelligence & Espionage");
        bisacMap.put("POL048000","POLITICAL SCIENCE / Intergovernmental Organizations");
        bisacMap.put("POL011000","POLITICAL SCIENCE / International Relations / General");
        bisacMap.put("POL001000","POLITICAL SCIENCE / International Relations / Arms Control");
        bisacMap.put("POL011010","POLITICAL SCIENCE / International Relations / Diplomacy");
        bisacMap.put("POL011020","POLITICAL SCIENCE / International Relations / Trade & Tariffs");
        bisacMap.put("POL021000","POLITICAL SCIENCE / International Relations / Treaties");
        bisacMap.put("POL013000","POLITICAL SCIENCE / Labor & Industrial Relations");
        bisacMap.put("POL014000","POLITICAL SCIENCE / Law Enforcement");
        bisacMap.put("POL041000","POLITICAL SCIENCE / NGOs (Non-Governmental Organizations)");
        bisacMap.put("POL034000","POLITICAL SCIENCE / Peace");
        bisacMap.put("POL023000","POLITICAL SCIENCE / Political Economy");
        bisacMap.put("POL035000","POLITICAL SCIENCE / Political Freedom");
        bisacMap.put("POL042000","POLITICAL SCIENCE / Political Ideologies / General");
        bisacMap.put("POL042010","POLITICAL SCIENCE / Political Ideologies / Anarchism");
        bisacMap.put("POL005000","POLITICAL SCIENCE / Political Ideologies / Communism, Post-Communism & Socialism");
        bisacMap.put("POL042020","POLITICAL SCIENCE / Political Ideologies / Conservatism & Liberalism");
        bisacMap.put("POL007000","POLITICAL SCIENCE / Political Ideologies / Democracy");
        bisacMap.put("POL042030","POLITICAL SCIENCE / Political Ideologies / Fascism & Totalitarianism");
        bisacMap.put("POL031000","POLITICAL SCIENCE / Political Ideologies / Nationalism & Patriotism");
        bisacMap.put("POL042040","POLITICAL SCIENCE / Political Ideologies / Radicalism");
        bisacMap.put("POL016000","POLITICAL SCIENCE / Political Process / General");
        bisacMap.put("POL008000","POLITICAL SCIENCE / Political Process / Elections");
        bisacMap.put("POL025000","POLITICAL SCIENCE / Political Process / Leadership");
        bisacMap.put("POL043000","POLITICAL SCIENCE / Political Process / Political Advocacy");
        bisacMap.put("POL015000","POLITICAL SCIENCE / Political Process / Political Parties");
        bisacMap.put("POL049000","POLITICAL SCIENCE / Propaganda");
        bisacMap.put("POL017000","POLITICAL SCIENCE / Public Affairs & Administration");
        bisacMap.put("POL028000","POLITICAL SCIENCE / Public Policy / General");
        bisacMap.put("POL002000","POLITICAL SCIENCE / Public Policy / City Planning & Urban Development");
        bisacMap.put("POL038000","POLITICAL SCIENCE / Public Policy / Cultural Policy");
        bisacMap.put("POL050000","POLITICAL SCIENCE / Public Policy / Communication Policy");
        bisacMap.put("POL024000","POLITICAL SCIENCE / Public Policy / Economic Policy");
        bisacMap.put("POL044000","POLITICAL SCIENCE / Public Policy / Environmental Policy");
        bisacMap.put("POL026000","POLITICAL SCIENCE / Public Policy / Regional Planning");
        bisacMap.put("POL063000","POLITICAL SCIENCE / Public Policy / Science & Technology Policy");
        bisacMap.put("POL029000","POLITICAL SCIENCE / Public Policy / Social Policy");
        bisacMap.put("POL027000","POLITICAL SCIENCE / Public Policy / Social Security");
        bisacMap.put("POL019000","POLITICAL SCIENCE / Public Policy / Social Services & Welfare");
        bisacMap.put("POL018000","POLITICAL SCIENCE / Reference");
        bisacMap.put("POL012000","POLITICAL SCIENCE / Security (National & International)");
        bisacMap.put("POL037000","POLITICAL SCIENCE / Terrorism");
        bisacMap.put("POL051000","POLITICAL SCIENCE / Utopias");
        bisacMap.put("POL052000","POLITICAL SCIENCE / Women in Politics");
        bisacMap.put("POL040020","POLITICAL SCIENCE / World / General");
        bisacMap.put("POL053000","POLITICAL SCIENCE / World / African");
        bisacMap.put("POL054000","POLITICAL SCIENCE / World / Asian");
        bisacMap.put("POL055000","POLITICAL SCIENCE / World / Australian & Oceanian");
        bisacMap.put("POL056000","POLITICAL SCIENCE / World / Canadian");
        bisacMap.put("POL057000","POLITICAL SCIENCE / World / Caribbean & Latin American");
        bisacMap.put("POL058000","POLITICAL SCIENCE / World / European");
        bisacMap.put("POL059000","POLITICAL SCIENCE / World / Middle Eastern");
        bisacMap.put("POL060000","POLITICAL SCIENCE / World / Russian & Former Soviet Union");
        bisacMap.put("POL501000","political SCIENCE / Government / U.S. Government");
        bisacMap.put("PSY000000","PSYCHOLOGY / General");
        bisacMap.put("PSY003000","PSYCHOLOGY / Applied Psychology");
        bisacMap.put("PSY042000","PSYCHOLOGY / Assessment, Testing & Measurement");
        bisacMap.put("PSY007000","PSYCHOLOGY / Clinical Psychology");
        bisacMap.put("PSY008000","PSYCHOLOGY / Cognitive Psychology");
        bisacMap.put("PSY034000","PSYCHOLOGY / Creative Ability");
        bisacMap.put("PSY039000","PSYCHOLOGY / Developmental / General");
        bisacMap.put("PSY002000","PSYCHOLOGY / Developmental / Adolescent");
        bisacMap.put("PSY043000","PSYCHOLOGY / Developmental / Adulthood & Aging");
        bisacMap.put("PSY004000","PSYCHOLOGY / Developmental / Child");
        bisacMap.put("PSY044000","PSYCHOLOGY / Developmental / Lifespan Development");
        bisacMap.put("PSY012000","PSYCHOLOGY / Education & Training");
        bisacMap.put("PSY013000","PSYCHOLOGY / Emotions");
        bisacMap.put("PSY050000","PSYCHOLOGY / Ethnopsychology");
        bisacMap.put("PSY040000","PSYCHOLOGY / Experimental Psychology");
        bisacMap.put("PSY014000","PSYCHOLOGY / Forensic Psychology");
        bisacMap.put("PSY015000","PSYCHOLOGY / History");
        bisacMap.put("PSY016000","PSYCHOLOGY / Human Sexuality");
        bisacMap.put("PSY035000","PSYCHOLOGY / Hypnotism");
        bisacMap.put("PSY021000","PSYCHOLOGY / Industrial & Organizational Psychology");
        bisacMap.put("PSY017000","PSYCHOLOGY / Interpersonal Relations");
        bisacMap.put("PSY036000","PSYCHOLOGY / Mental Health");
        bisacMap.put("PSY018000","PSYCHOLOGY / Mental Illness");
        bisacMap.put("PSY045000","PSYCHOLOGY / Movements / General");
        bisacMap.put("PSY045010","PSYCHOLOGY / Movements / Behaviorism");
        bisacMap.put("PSY045040","PSYCHOLOGY / Movements / Existential");
        bisacMap.put("PSY045050","PSYCHOLOGY / Movements / Gestalt");
        bisacMap.put("PSY045020","PSYCHOLOGY / Movements / Humanism");
        bisacMap.put("PSY045060","PSYCHOLOGY / Movements / Jungian");
        bisacMap.put("PSY026000","PSYCHOLOGY / Movements / Psychoanalysis");
        bisacMap.put("PSY045030","PSYCHOLOGY / Movements / Transpersonal");
        bisacMap.put("PSY020000","PSYCHOLOGY / Neuropsychology");
        bisacMap.put("PSY023000","PSYCHOLOGY / Personality");
        bisacMap.put("PSY024000","PSYCHOLOGY / Physiological Psychology");
        bisacMap.put("PSY046000","PSYCHOLOGY / Practice Management");
        bisacMap.put("PSY022000","PSYCHOLOGY / Psychopathology / General");
        bisacMap.put("PSY038000","PSYCHOLOGY / Psychopathology / Addiction");
        bisacMap.put("PSY022060","PSYCHOLOGY / Psychopathology / Anxieties & Phobias");
        bisacMap.put("PSY022010","PSYCHOLOGY / Psychopathology / Attention-Deficit Disorder (ADD-ADHD)");
        bisacMap.put("PSY022020","PSYCHOLOGY / Psychopathology / Autism Spectrum Disorders");
        bisacMap.put("PSY022030","PSYCHOLOGY / Psychopathology / Bipolar Disorder");
        bisacMap.put("PSY009000","PSYCHOLOGY / Psychopathology / Compulsive Behavior");
        bisacMap.put("PSY049000","PSYCHOLOGY / Psychopathology / Depression");
        bisacMap.put("PSY022070","PSYCHOLOGY / Psychopathology / Dissociative Identity Disorder");
        bisacMap.put("PSY011000","PSYCHOLOGY / Psychopathology / Eating Disorders");
        bisacMap.put("PSY022040","PSYCHOLOGY / Psychopathology / Post-Traumatic Stress Disorder (PTSD)");
        bisacMap.put("PSY022050","PSYCHOLOGY / Psychopathology / Schizophrenia");
        bisacMap.put("PSY028000","PSYCHOLOGY / Psychotherapy / General");
        bisacMap.put("PSY006000","PSYCHOLOGY / Psychotherapy / Child & Adolescent");
        bisacMap.put("PSY010000","PSYCHOLOGY / Psychotherapy / Counseling");
        bisacMap.put("PSY041000","PSYCHOLOGY / Psychotherapy / Couples & Family");
        bisacMap.put("PSY048000","PSYCHOLOGY / Psychotherapy / Group");
        bisacMap.put("PSY029000","PSYCHOLOGY / Reference");
        bisacMap.put("PSY030000","PSYCHOLOGY / Research & Methodology");
        bisacMap.put("PSY031000","PSYCHOLOGY / Social Psychology");
        bisacMap.put("PSY032000","PSYCHOLOGY / Statistics");
        bisacMap.put("PSY037000","PSYCHOLOGY / Suicide");
        bisacMap.put("REF000000","REFERENCE / General");
        bisacMap.put("REF001000","REFERENCE / Almanacs");
        bisacMap.put("REF002000","REFERENCE / Atlases, Gazetteers & Maps (see also TRAVEL / Maps & Road Atlases)");
        bisacMap.put("REF004000","REFERENCE / Bibliographies & Indexes");
        bisacMap.put("REF006000","REFERENCE / Catalogs");
        bisacMap.put("REF030000","REFERENCE / Consumer Guides");
        bisacMap.put("REF007000","REFERENCE / Curiosities & Wonders");
        bisacMap.put("REF008000","REFERENCE / Dictionaries");
        bisacMap.put("REF009000","REFERENCE / Directories");
        bisacMap.put("REF011000","REFERENCE / Etiquette");
        bisacMap.put("REF013000","REFERENCE / Genealogy & Heraldry");
        bisacMap.put("REF028000","REFERENCE / Handbooks & Manuals");
        bisacMap.put("REF015000","REFERENCE / Personal & Practical Guides");
        bisacMap.put("REF018000","REFERENCE / Questions & Answers");
        bisacMap.put("REF019000","REFERENCE / Quotations");
        bisacMap.put("REF020000","REFERENCE / Research");
        bisacMap.put("REF022000","REFERENCE / Thesauri");
        bisacMap.put("REF023000","REFERENCE / Trivia");
        bisacMap.put("REF024000","REFERENCE / Weddings");
        bisacMap.put("REF025000","REFERENCE / Word Lists");
        bisacMap.put("REF026000","REFERENCE / Writing Skills");
        bisacMap.put("REF027000","REFERENCE / Yearbooks & Annuals");
        bisacMap.put("REL000000","RELIGION / General");
        bisacMap.put("REL001000","RELIGION / Agnosticism");
        bisacMap.put("REL114000","RELIGION / Ancient");
        bisacMap.put("REL072000","RELIGION / Antiquities & Archaeology");
        bisacMap.put("REL004000","RELIGION / Atheism");
        bisacMap.put("REL005000","RELIGION / Baha'i");
        bisacMap.put("REL006020","RELIGION / Biblical Biography / General");
        bisacMap.put("REL006030","RELIGION / Biblical Biography / Old Testament");
        bisacMap.put("REL006040","RELIGION / Biblical Biography / New Testament");
        bisacMap.put("REL006050","RELIGION / Biblical Commentary / General");
        bisacMap.put("REL006060","RELIGION / Biblical Commentary / Old Testament");
        bisacMap.put("REL006070","RELIGION / Biblical Commentary / New Testament");
        bisacMap.put("REL006080","RELIGION / Biblical Criticism & Interpretation / General");
        bisacMap.put("REL006090","RELIGION / Biblical Criticism & Interpretation / Old Testament");
        bisacMap.put("REL006100","RELIGION / Biblical Criticism & Interpretation / New Testament");
        bisacMap.put("REL006110","RELIGION / Biblical Meditations / General");
        bisacMap.put("REL006120","RELIGION / Biblical Meditations / Old Testament");
        bisacMap.put("REL006130","RELIGION / Biblical Meditations / New Testament");
        bisacMap.put("REL006160","RELIGION / Biblical Reference / General");
        bisacMap.put("REL006650","RELIGION / Biblical Reference / Atlases");
        bisacMap.put("REL006660","RELIGION / Biblical Reference / Concordances");
        bisacMap.put("REL006670","RELIGION / Biblical Reference / Dictionaries & Encyclopedias");
        bisacMap.put("REL006680","RELIGION / Biblical Reference / Handbooks");
        bisacMap.put("REL006410","RELIGION / Biblical Reference / Language Study");
        bisacMap.put("REL006150","RELIGION / Biblical Reference / Quotations");
        bisacMap.put("REL006000","RELIGION / Biblical Studies / General");
        bisacMap.put("REL006700","RELIGION / Biblical Studies / Bible Study Guides");
        bisacMap.put("REL006400","RELIGION / Biblical Studies / Exegesis & Hermeneutics");
        bisacMap.put("REL006630","RELIGION / Biblical Studies / History & Culture");
        bisacMap.put("REL006710","RELIGION / Biblical Studies / Jesus, the Gospels & Acts");
        bisacMap.put("REL006210","RELIGION / Biblical Studies / Old Testament");
        bisacMap.put("REL006220","RELIGION / Biblical Studies / New Testament");
        bisacMap.put("REL006720","RELIGION / Biblical Studies / Paul's Letters");
        bisacMap.put("REL006140","RELIGION / Biblical Studies / Prophecy");
        bisacMap.put("REL006730","RELIGION / Biblical Studies / Prophets");
        bisacMap.put("REL006740","RELIGION / Biblical Studies / Wisdom Literature");
        bisacMap.put("REL115000","RELIGION / Blasphemy, Heresy & Apostasy");
        bisacMap.put("REL007000","RELIGION / Buddhism / General (see also PHILOSOPHY / Buddhist)");
        bisacMap.put("REL007010","RELIGION / Buddhism / History");
        bisacMap.put("REL007020","RELIGION / Buddhism / Rituals & Practice");
        bisacMap.put("REL007030","RELIGION / Buddhism / Sacred Writings");
        bisacMap.put("REL007040","RELIGION / Buddhism / Theravada");
        bisacMap.put("REL007050","RELIGION / Buddhism / Tibetan");
        bisacMap.put("REL092000","RELIGION / Buddhism / Zen (see also PHILOSOPHY / Zen)");
        bisacMap.put("REL108000","RELIGION / Christian Church / General");
        bisacMap.put("REL014000","RELIGION / Christian Church / Administration");
        bisacMap.put("REL008000","RELIGION / Christian Church / Canon & Ecclesiastical Law");
        bisacMap.put("REL108010","RELIGION / Christian Church / Growth");
        bisacMap.put("REL108020","RELIGION / Christian Church / History");
        bisacMap.put("REL108030","RELIGION / Christian Church / Leadership");
        bisacMap.put("REL011000","RELIGION / Christian Education / General");
        bisacMap.put("REL095000","RELIGION / Christian Education / Adult");
        bisacMap.put("REL091000","RELIGION / Christian Education / Children & Youth");
        bisacMap.put("REL012000","RELIGION / Christian Life / General");
        bisacMap.put("REL012010","RELIGION / Christian Life / Death, Grief, Bereavement");
        bisacMap.put("REL012020","RELIGION / Christian Life / Devotional");
        bisacMap.put("REL012030","RELIGION / Christian Life / Family");
        bisacMap.put("REL012040","RELIGION / Christian Life / Inspirational");
        bisacMap.put("REL012050","RELIGION / Christian Life / Love & Marriage");
        bisacMap.put("REL012060","RELIGION / Christian Life / Men's Issues");
        bisacMap.put("REL012070","RELIGION / Christian Life / Personal Growth");
        bisacMap.put("REL012080","RELIGION / Christian Life / Prayer");
        bisacMap.put("REL012090","RELIGION / Christian Life / Professional Growth");
        bisacMap.put("REL012100","RELIGION / Christian Life / Relationships");
        bisacMap.put("REL012110","RELIGION / Christian Life / Social Issues");
        bisacMap.put("REL012120","RELIGION / Christian Life / Spiritual Growth");
        bisacMap.put("REL099000","RELIGION / Christian Life / Spiritual Warfare");
        bisacMap.put("REL063000","RELIGION / Christian Life / Stewardship & Giving");
        bisacMap.put("REL012130","RELIGION / Christian Life / Women's Issues");
        bisacMap.put("REL109000","RELIGION / Christian Ministry / General");
        bisacMap.put("REL109010","RELIGION / Christian Ministry / Adult");
        bisacMap.put("REL109020","RELIGION / Christian Ministry / Children");
        bisacMap.put("REL050000","RELIGION / Christian Ministry / Counseling & Recovery");
        bisacMap.put("REL023000","RELIGION / Christian Ministry / Discipleship");
        bisacMap.put("REL030000","RELIGION / Christian Ministry / Evangelism");
        bisacMap.put("REL045000","RELIGION / Christian Ministry / Missions");
        bisacMap.put("REL074000","RELIGION / Christian Ministry / Pastoral Resources");
        bisacMap.put("REL080000","RELIGION / Christian Ministry / Preaching");
        bisacMap.put("REL109030","RELIGION / Christian Ministry / Youth");
        bisacMap.put("REL055000","RELIGION / Christian Rituals & Practice / General");
        bisacMap.put("REL055010","RELIGION / Christian Rituals & Practice / Sacraments");
        bisacMap.put("REL055020","RELIGION / Christian Rituals & Practice / Worship & Liturgy");
        bisacMap.put("REL067000","RELIGION / Christian Theology / General");
        bisacMap.put("REL067010","RELIGION / Christian Theology / Angelology & Demonology");
        bisacMap.put("REL067020","RELIGION / Christian Theology / Anthropology");
        bisacMap.put("REL067030","RELIGION / Christian Theology / Apologetics");
        bisacMap.put("REL067040","RELIGION / Christian Theology / Christology");
        bisacMap.put("REL067050","RELIGION / Christian Theology / Ecclesiology");
        bisacMap.put("REL067060","RELIGION / Christian Theology / Eschatology");
        bisacMap.put("REL067070","RELIGION / Christian Theology / Ethics");
        bisacMap.put("REL067080","RELIGION / Christian Theology / History");
        bisacMap.put("REL067120","RELIGION / Christian Theology / Liberation");
        bisacMap.put("REL104000","RELIGION / Christian Theology / Mariology");
        bisacMap.put("REL067090","RELIGION / Christian Theology / Pneumatology");
        bisacMap.put("REL067130","RELIGION / Christian Theology / Process");
        bisacMap.put("REL067100","RELIGION / Christian Theology / Soteriology");
        bisacMap.put("REL067110","RELIGION / Christian Theology / Systematic");
        bisacMap.put("REL070000","RELIGION / Christianity / General");
        bisacMap.put("REL002000","RELIGION / Christianity / Amish");
        bisacMap.put("REL003000","RELIGION / Christianity / Anglican");
        bisacMap.put("REL073000","RELIGION / Christianity / Baptist");
        bisacMap.put("REL093000","RELIGION / Christianity / Calvinist");
        bisacMap.put("REL009000","RELIGION / Christianity / Catechisms");
        bisacMap.put("REL010000","RELIGION / Christianity / Catholic");
        bisacMap.put("REL083000","RELIGION / Christianity / Christian Science");
        bisacMap.put("REL046000","RELIGION / Christianity / Church of Jesus Christ of Latter-day Saints (Mormon)");
        bisacMap.put("REL094000","RELIGION / Christianity / Denominations");
        bisacMap.put("REL027000","RELIGION / Christianity / Episcopalian");
        bisacMap.put("REL015000","RELIGION / Christianity / History");
        bisacMap.put("REL096000","RELIGION / Christianity / Jehovah's Witnesses");
        bisacMap.put("REL013000","RELIGION / Christianity / Literature & the Arts");
        bisacMap.put("REL082000","RELIGION / Christianity / Lutheran");
        bisacMap.put("REL043000","RELIGION / Christianity / Mennonite");
        bisacMap.put("REL044000","RELIGION / Christianity / Methodist");
        bisacMap.put("REL049000","RELIGION / Christianity / Orthodox");
        bisacMap.put("REL079000","RELIGION / Christianity / Pentecostal & Charismatic");
        bisacMap.put("REL097000","RELIGION / Christianity / Presbyterian");
        bisacMap.put("REL053000","RELIGION / Christianity / Protestant");
        bisacMap.put("REL088000","RELIGION / Christianity / Quaker");
        bisacMap.put("REL110000","RELIGION / Christianity / Saints & Sainthood");
        bisacMap.put("REL102000","RELIGION / Theology");
        bisacMap.put("REL098000","RELIGION / Christianity / Seventh-Day Adventist");
        bisacMap.put("REL059000","RELIGION / Christianity / Shaker");
        bisacMap.put("REL111000","RELIGION / Christianity / United Church of Christ");
        bisacMap.put("REL081000","RELIGION / Clergy");
        bisacMap.put("REL017000","RELIGION / Comparative Religion");
        bisacMap.put("REL018000","RELIGION / Confucianism");
        bisacMap.put("REL019000","RELIGION / Counseling");
        bisacMap.put("REL020000","RELIGION / Cults");
        bisacMap.put("REL021000","RELIGION / Deism");
        bisacMap.put("REL100000","RELIGION / Demonology & Satanism");
        bisacMap.put("REL022000","RELIGION / Devotional");
        bisacMap.put("REL024000","RELIGION / Eastern");
        bisacMap.put("REL107000","RELIGION / Eckankar");
        bisacMap.put("REL025000","RELIGION / Ecumenism");
        bisacMap.put("REL026000","RELIGION / Education");
        bisacMap.put("REL085000","RELIGION / Eschatology");
        bisacMap.put("REL113000","RELIGION / Essays");
        bisacMap.put("REL028000","RELIGION / Ethics");
        bisacMap.put("REL029000","RELIGION / Ethnic & Tribal");
        bisacMap.put("REL077000","RELIGION / Faith");
        bisacMap.put("REL078000","RELIGION / Fundamentalism");
        bisacMap.put("REL112000","RELIGION / Gnosticism");
        bisacMap.put("REL032000","RELIGION / Hinduism / General");
        bisacMap.put("REL032010","RELIGION / Hinduism / History");
        bisacMap.put("REL032020","RELIGION / Hinduism / Rituals & Practice");
        bisacMap.put("REL032030","RELIGION / Hinduism / Sacred Writings");
        bisacMap.put("REL032040","RELIGION / Hinduism / Theology");
        bisacMap.put("REL033000","RELIGION / History");
        bisacMap.put("REL034000","RELIGION / Holidays / General");
        bisacMap.put("REL034010","RELIGION / Holidays / Christian");
        bisacMap.put("REL034020","RELIGION / Holidays / Christmas & Advent");
        bisacMap.put("REL034030","RELIGION / Holidays / Easter & Lent");
        bisacMap.put("REL034040","RELIGION / Holidays / Jewish");
        bisacMap.put("REL034050","RELIGION / Holidays / Other");
        bisacMap.put("REL036000","RELIGION / Inspirational");
        bisacMap.put("REL016000","RELIGION / Institutions & Organizations");
        bisacMap.put("REL037000","RELIGION / Islam / General");
        bisacMap.put("REL037010","RELIGION / Islam / History");
        bisacMap.put("REL041000","RELIGION / Islam / Koran & Sacred Writings");
        bisacMap.put("REL037020","RELIGION / Islam / Law");
        bisacMap.put("REL037030","RELIGION / Islam / Rituals & Practice");
        bisacMap.put("REL037040","RELIGION / Islam / Shi'a");
        bisacMap.put("REL090000","RELIGION / Islam / Sufi");
        bisacMap.put("REL037050","RELIGION / Islam / Sunni");
        bisacMap.put("REL037060","RELIGION / Islam / Theology");
        bisacMap.put("REL038000","RELIGION / Jainism");
        bisacMap.put("REL040000","RELIGION / Judaism / General");
        bisacMap.put("REL040050","RELIGION / Judaism / Conservative");
        bisacMap.put("REL040030","RELIGION / Judaism / History");
        bisacMap.put("REL040060","RELIGION / Judaism / Kabbalah & Mysticism");
        bisacMap.put("REL040070","RELIGION / Judaism / Orthodox");
        bisacMap.put("REL040080","RELIGION / Judaism / Reform");
        bisacMap.put("REL040010","RELIGION / Judaism / Rituals & Practice");
        bisacMap.put("REL040040","RELIGION / Judaism / Sacred Writings");
        bisacMap.put("REL064000","RELIGION / Judaism / Talmud");
        bisacMap.put("REL040090","RELIGION / Judaism / Theology");
        bisacMap.put("REL071000","RELIGION / Leadership");
        bisacMap.put("REL042000","RELIGION / Meditations");
        bisacMap.put("REL101000","RELIGION / Messianic Judaism");
        bisacMap.put("REL086000","RELIGION / Monasticism");
        bisacMap.put("REL047000","RELIGION / Mysticism");
        bisacMap.put("REL117000","RELIGION / Paganism & Neo-Paganism");
        bisacMap.put("REL051000","RELIGION / Philosophy");
        bisacMap.put("REL087000","RELIGION / Prayer");
        bisacMap.put("REL052000","RELIGION / Prayerbooks / General");
        bisacMap.put("REL052010","RELIGION / Prayerbooks / Christian");
        bisacMap.put("REL052030","RELIGION / Prayerbooks / Islamic");
        bisacMap.put("REL052020","RELIGION / Prayerbooks / Jewish");
        bisacMap.put("REL075000","RELIGION / Psychology of Religion");
        bisacMap.put("REL054000","RELIGION / Reference");
        bisacMap.put("REL106000","RELIGION / Religion & Science");
        bisacMap.put("REL084000","RELIGION / Religion, Politics & State");
        bisacMap.put("REL116000","RELIGION / Religious Intolerance, Persecution & Conflict");
        bisacMap.put("REL089000","RELIGION / Scientology");
        bisacMap.put("REL058000","RELIGION / Sermons / General");
        bisacMap.put("REL058010","RELIGION / Sermons / Christian");
        bisacMap.put("REL058020","RELIGION / Sermons / Jewish");
        bisacMap.put("REL105000","RELIGION / Sexuality & Gender Studies");
        bisacMap.put("REL060000","RELIGION / Shintoism");
        bisacMap.put("REL061000","RELIGION / Sikhism");
        bisacMap.put("REL062000","RELIGION / Spirituality");
        bisacMap.put("REL065000","RELIGION / Taoism (see also PHILOSOPHY / Taoist)");
        bisacMap.put("REL066000","RELIGION / Theism");
        bisacMap.put("REL068000","RELIGION / Theosophy");
        bisacMap.put("REL103000","RELIGION / Unitarian Universalism");
        bisacMap.put("REL118000","RELIGION / Wicca (see also BODY, MIND & SPIRIT / Witchcraft)");
        bisacMap.put("REL069000","RELIGION / Zoroastrianism");
        bisacMap.put("SCI000000","SCIENCE / General");
        bisacMap.put("SCI001000","SCIENCE / Acoustics & Sound");
        bisacMap.put("SCI003000","SCIENCE / Applied Sciences");
        bisacMap.put("SCI004000","SCIENCE / Astronomy");
        bisacMap.put("SCI010000","SCIENCE / Biotechnology");
        bisacMap.put("SCI012000","SCIENCE / Chaotic Behavior in Systems");
        bisacMap.put("SCI013000","SCIENCE / Chemistry / General");
        bisacMap.put("SCI013010","SCIENCE / Chemistry / Analytic");
        bisacMap.put("SCI013020","SCIENCE / Chemistry / Clinical");
        bisacMap.put("SCI013070","SCIENCE / Chemistry / Computational & Molecular Modeling");
        bisacMap.put("SCI013080","SCIENCE / Chemistry / Environmental (see also Environmental Science)");
        bisacMap.put("SCI013060","SCIENCE / Chemistry / Industrial & Technical");
        bisacMap.put("SCI013030","SCIENCE / Chemistry / Inorganic");
        bisacMap.put("SCI013040","SCIENCE / Chemistry / Organic");
        bisacMap.put("SCI013050","SCIENCE / Chemistry / Physical & Theoretical");
        bisacMap.put("SCI013090","SCIENCE / Chemistry / Toxicology");
        bisacMap.put("SCI090000","SCIENCE / Cognitive Science");
        bisacMap.put("SCI015000","SCIENCE / Cosmology");
        bisacMap.put("SCI019000","SCIENCE / Earth Sciences / General");
        bisacMap.put("SCI030000","SCIENCE / Earth Sciences / Geography");
        bisacMap.put("SCI031000","SCIENCE / Earth Sciences / Geology");
        bisacMap.put("SCI081000","SCIENCE / Earth Sciences / Hydrology");
        bisacMap.put("SCI083000","SCIENCE / Earth Sciences / Limnology");
        bisacMap.put("SCI042000","SCIENCE / Earth Sciences / Meteorology & Climatology");
        bisacMap.put("SCI048000","SCIENCE / Earth Sciences / Mineralogy");
        bisacMap.put("SCI052000","SCIENCE / Earth Sciences / Oceanography");
        bisacMap.put("SCI091000","SCIENCE / Earth Sciences / Sedimentology & Stratigraphy");
        bisacMap.put("SCI082000","SCIENCE / Earth Sciences / Seismology & Volcanism");
        bisacMap.put("SCI023000","SCIENCE / Electron Microscopes & Microscopy");
        bisacMap.put("SCI024000","SCIENCE / Energy");
        bisacMap.put("SCI026000","SCIENCE / Environmental Science (see also Chemistry / Environmental)");
        bisacMap.put("SCI080000","SCIENCE / Essays");
        bisacMap.put("SCI028000","SCIENCE / Experiments & Projects");
        bisacMap.put("SCI092000","SCIENCE / Global Warming & Climate Change");
        bisacMap.put("SCI033000","SCIENCE / Gravity");
        bisacMap.put("SCI034000","SCIENCE / History");
        bisacMap.put("SCI093000","SCIENCE / Laboratory Techniques");
        bisacMap.put("SCI086000","SCIENCE / Life Sciences / General");
        bisacMap.put("SCI056000","SCIENCE / Life Sciences / Anatomy & Physiology (see also Life Sciences / Human Anatomy & Physiology)");
        bisacMap.put("SCI006000","SCIENCE / Life Sciences / Bacteriology");
        bisacMap.put("SCI007000","SCIENCE / Life Sciences / Biochemistry");
        bisacMap.put("SCI088000","SCIENCE / Life Sciences / Biological Diversity");
        bisacMap.put("SCI008000","SCIENCE / Life Sciences / Biology");
        bisacMap.put("SCI009000","SCIENCE / Life Sciences / Biophysics");
        bisacMap.put("SCI011000","SCIENCE / Life Sciences / Botany");
        bisacMap.put("SCI017000","SCIENCE / Life Sciences / Cell Biology");
        bisacMap.put("SCI072000","SCIENCE / Life Sciences / Developmental Biology");
        bisacMap.put("SCI020000","SCIENCE / Life Sciences / Ecology");
        bisacMap.put("SCI027000","SCIENCE / Life Sciences / Evolution");
        bisacMap.put("SCI029000","SCIENCE / Life Sciences / Genetics & Genomics");
        bisacMap.put("SCI073000","SCIENCE / Life Sciences / Horticulture");
        bisacMap.put("SCI036000","SCIENCE / Life Sciences / Human Anatomy & Physiology");
        bisacMap.put("SCI039000","SCIENCE / Life Sciences / Marine Biology");
        bisacMap.put("SCI045000","SCIENCE / Life Sciences / Microbiology");
        bisacMap.put("SCI049000","SCIENCE / Life Sciences / Molecular Biology");
        bisacMap.put("SCI094000","SCIENCE / Life Sciences / Mycology");
        bisacMap.put("SCI089000","SCIENCE / Life Sciences / Neuroscience");
        bisacMap.put("SCI087000","SCIENCE / Life Sciences / Taxonomy");
        bisacMap.put("SCI099000","SCIENCE / Life Sciences / Virology");
        bisacMap.put("SCI070000","SCIENCE / Life Sciences / Zoology / General");
        bisacMap.put("SCI025000","SCIENCE / Life Sciences / Zoology / Entomology");
        bisacMap.put("SCI070010","SCIENCE / Life Sciences / Zoology / Ichthyology & Herpetology");
        bisacMap.put("SCI070020","SCIENCE / Life Sciences / Zoology / Invertebrates");
        bisacMap.put("SCI070030","SCIENCE / Life Sciences / Zoology / Mammals");
        bisacMap.put("SCI070040","SCIENCE / Life Sciences / Zoology / Ornithology");
        bisacMap.put("SCI070050","SCIENCE / Life Sciences / Zoology / Primatology");
        bisacMap.put("SCI041000","SCIENCE / Mechanics / General");
        bisacMap.put("SCI084000","SCIENCE / Mechanics / Aerodynamics");
        bisacMap.put("SCI018000","SCIENCE / Mechanics / Dynamics");
        bisacMap.put("SCI085000","SCIENCE / Mechanics / Fluids");
        bisacMap.put("SCI095000","SCIENCE / Mechanics / Hydrodynamics");
        bisacMap.put("SCI096000","SCIENCE / Mechanics / Solids");
        bisacMap.put("SCI079000","SCIENCE / Mechanics / Statics");
        bisacMap.put("SCI065000","SCIENCE / Mechanics / Thermodynamics");
        bisacMap.put("SCI047000","SCIENCE / Microscopes & Microscopy");
        bisacMap.put("SCI050000","SCIENCE / Nanoscience");
        bisacMap.put("SCI100000","SCIENCE / Natural History");
        bisacMap.put("SCI054000","SCIENCE / Paleontology");
        bisacMap.put("SCI075000","SCIENCE / Philosophy & Social Aspects");
        bisacMap.put("SCI055000","SCIENCE / Physics / General");
        bisacMap.put("SCI005000","SCIENCE / Physics / Astrophysics");
        bisacMap.put("SCI074000","SCIENCE / Physics / Atomic & Molecular");
        bisacMap.put("SCI077000","SCIENCE / Physics / Condensed Matter");
        bisacMap.put("SCI016000","SCIENCE / Physics / Crystallography");
        bisacMap.put("SCI021000","SCIENCE / Physics / Electricity");
        bisacMap.put("SCI022000","SCIENCE / Physics / Electromagnetism");
        bisacMap.put("SCI032000","SCIENCE / Physics / Geophysics");
        bisacMap.put("SCI038000","SCIENCE / Physics / Magnetism");
        bisacMap.put("SCI040000","SCIENCE / Physics / Mathematical & Computational");
        bisacMap.put("SCI051000","SCIENCE / Physics / Nuclear");
        bisacMap.put("SCI053000","SCIENCE / Physics / Optics & Light");
        bisacMap.put("SCI097000","SCIENCE / Physics / Polymer");
        bisacMap.put("SCI057000","SCIENCE / Physics / Quantum Theory");
        bisacMap.put("SCI061000","SCIENCE / Physics / Relativity");
        bisacMap.put("SCI058000","SCIENCE / Radiation");
        bisacMap.put("SCI059000","SCIENCE / Radiology");
        bisacMap.put("SCI060000","SCIENCE / Reference");
        bisacMap.put("SCI043000","SCIENCE / Research & Methodology");
        bisacMap.put("SCI076000","SCIENCE / Scientific Instruments");
        bisacMap.put("SCI098000","SCIENCE / Space Science");
        bisacMap.put("SCI078000","SCIENCE / Spectroscopy & Spectrum Analysis");
        bisacMap.put("SCI063000","SCIENCE / Study & Teaching");
        bisacMap.put("SCI064000","SCIENCE / System Theory");
        bisacMap.put("SCI066000","SCIENCE / Time");
        bisacMap.put("SCI067000","SCIENCE / Waves & Wave Mechanics");
        bisacMap.put("SCI068000","SCIENCE / Weights & Measures");
        bisacMap.put("SEL000000","SELF-HELP / General");
        bisacMap.put("SEL001000","SELF-HELP / Abuse");
        bisacMap.put("SEL003000","SELF-HELP / Adult Children of Substance Abusers");
        bisacMap.put("SEL004000","SELF-HELP / Affirmations");
        bisacMap.put("SEL005000","SELF-HELP / Aging");
        bisacMap.put("SEL033000","SELF-HELP / Anger Management (see also FAMILY & RELATIONSHIPS / Anger)");
        bisacMap.put("SEL036000","SELF-HELP / Anxieties & Phobias");
        bisacMap.put("SEL008000","SELF-HELP / Codependency");
        bisacMap.put("SEL009000","SELF-HELP / Creativity");
        bisacMap.put("SEL010000","SELF-HELP / Death, Grief, Bereavement");
        bisacMap.put("SEL011000","SELF-HELP / Depression");
        bisacMap.put("SEL012000","SELF-HELP / Dreams");
        bisacMap.put("SEL014000","SELF-HELP / Eating Disorders");
        bisacMap.put("SEL038000","SELF-HELP / Fashion & Style");
        bisacMap.put("SEL039000","SELF-HELP / Green Lifestyle");
        bisacMap.put("SEL015000","SELF-HELP / Handwriting Analysis");
        bisacMap.put("SEL018000","SELF-HELP / Inner Child");
        bisacMap.put("SEL019000","SELF-HELP / Meditations");
        bisacMap.put("SEL020000","SELF-HELP / Mood Disorders");
        bisacMap.put("SEL021000","SELF-HELP / Motivational & Inspirational");
        bisacMap.put("SEL037000","SELF-HELP / Neuro-Linguistic Programming (NLP)");
        bisacMap.put("SEL031000","SELF-HELP / Personal Growth / General");
        bisacMap.put("SEL016000","SELF-HELP / Personal Growth / Happiness");
        bisacMap.put("SEL030000","SELF-HELP / Personal Growth / Memory Improvement");
        bisacMap.put("SEL023000","SELF-HELP / Personal Growth / Self-Esteem");
        bisacMap.put("SEL027000","SELF-HELP / Personal Growth / Success");
        bisacMap.put("SEL017000","SELF-HELP / Self-Hypnosis");
        bisacMap.put("SEL034000","SELF-HELP / Sexual Instruction");
        bisacMap.put("SEL032000","SELF-HELP / Spiritual");
        bisacMap.put("SEL024000","SELF-HELP / Stress Management");
        bisacMap.put("SEL026000","SELF-HELP / Substance Abuse & Addictions / General");
        bisacMap.put("SEL006000","SELF-HELP / Substance Abuse & Addictions / Alcoholism");
        bisacMap.put("SEL013000","SELF-HELP / Substance Abuse & Addictions / Drug Dependence");
        bisacMap.put("SEL026010","SELF-HELP / Substance Abuse & Addictions / Tobacco");
        bisacMap.put("SEL035000","SELF-HELP / Time Management");
        bisacMap.put("SEL029000","SELF-HELP / Twelve-Step Programs");
        bisacMap.put("SOC000000","SOCIAL SCIENCE / General");
        bisacMap.put("SOC046000","SOCIAL SCIENCE / Abortion & Birth Control");
        bisacMap.put("SOC055000","SOCIAL SCIENCE / Agriculture & Food");
        bisacMap.put("SOC002000","SOCIAL SCIENCE / Anthropology / General");
        bisacMap.put("SOC002010","SOCIAL SCIENCE / Anthropology / Cultural");
        bisacMap.put("SOC002020","SOCIAL SCIENCE / Anthropology / Physical");
        bisacMap.put("SOC003000","SOCIAL SCIENCE / Archaeology");
        bisacMap.put("SOC056000","SOCIAL SCIENCE / Black Studies (Global)");
        bisacMap.put("SOC061000","SOCIAL SCIENCE / Body Language & Nonverbal Communication");
        bisacMap.put("SOC047000","SOCIAL SCIENCE / Children's Studies");
        bisacMap.put("SOC058000","SOCIAL SCIENCE / Conspiracy Theories");
        bisacMap.put("SOC004000","SOCIAL SCIENCE / Criminology");
        bisacMap.put("SOC005000","SOCIAL SCIENCE / Customs & Traditions");
        bisacMap.put("SOC036000","SOCIAL SCIENCE / Death & Dying");
        bisacMap.put("SOC006000","SOCIAL SCIENCE / Demography");
        bisacMap.put("SOC042000","SOCIAL SCIENCE / Developing & Emerging Countries");
        bisacMap.put("SOC040000","SOCIAL SCIENCE / Disasters & Disaster Relief");
        bisacMap.put("SOC057000","SOCIAL SCIENCE / Disease & Health Issues");
        bisacMap.put("SOC031000","SOCIAL SCIENCE / Discrimination & Race Relations");
        bisacMap.put("SOC007000","SOCIAL SCIENCE / Emigration & Immigration");
        bisacMap.put("SOC041000","SOCIAL SCIENCE / Essays");
        bisacMap.put("SOC008000","SOCIAL SCIENCE / Ethnic Studies / General");
        bisacMap.put("SOC001000","SOCIAL SCIENCE / Ethnic Studies / African American Studies");
        bisacMap.put("SOC043000","SOCIAL SCIENCE / Ethnic Studies / Asian American Studies");
        bisacMap.put("SOC044000","SOCIAL SCIENCE / Ethnic Studies / Hispanic American Studies");
        bisacMap.put("SOC021000","SOCIAL SCIENCE / Ethnic Studies / Native American Studies");
        bisacMap.put("SOC010000","SOCIAL SCIENCE / Feminism & Feminist Theory");
        bisacMap.put("SOC011000","SOCIAL SCIENCE / Folklore & Mythology");
        bisacMap.put("SOC038000","SOCIAL SCIENCE / Freemasonry & Secret Societies");
        bisacMap.put("SOC037000","SOCIAL SCIENCE / Future Studies");
        bisacMap.put("SOC012000","SOCIAL SCIENCE / Gay Studies");
        bisacMap.put("SOC032000","SOCIAL SCIENCE / Gender Studies");
        bisacMap.put("SOC013000","SOCIAL SCIENCE / Gerontology");
        bisacMap.put("SOC014000","SOCIAL SCIENCE / Holidays (non-religious)");
        bisacMap.put("SOC015000","SOCIAL SCIENCE / Human Geography");
        bisacMap.put("SOC016000","SOCIAL SCIENCE / Human Services");
        bisacMap.put("SOC062000","SOCIAL SCIENCE / Indigenous Studies");
        bisacMap.put("SOC048000","SOCIAL SCIENCE / Islamic Studies");
        bisacMap.put("SOC049000","SOCIAL SCIENCE / Jewish Studies");
        bisacMap.put("SOC017000","SOCIAL SCIENCE / Lesbian Studies");
        bisacMap.put("SOC052000","SOCIAL SCIENCE / Media Studies");
        bisacMap.put("SOC018000","SOCIAL SCIENCE / Men's Studies");
        bisacMap.put("SOC019000","SOCIAL SCIENCE / Methodology");
        bisacMap.put("SOC020000","SOCIAL SCIENCE / Minority Studies");
        bisacMap.put("SOC030000","SOCIAL SCIENCE / Penology");
        bisacMap.put("SOC029000","SOCIAL SCIENCE / People with Disabilities");
        bisacMap.put("SOC033000","SOCIAL SCIENCE / Philanthropy & Charity");
        bisacMap.put("SOC022000","SOCIAL SCIENCE / Popular Culture");
        bisacMap.put("SOC034000","SOCIAL SCIENCE / Pornography");
        bisacMap.put("SOC045000","SOCIAL SCIENCE / Poverty & Homelessness");
        bisacMap.put("SOC059000","SOCIAL SCIENCE / Prostitution & Sex Trade");
        bisacMap.put("SOC023000","SOCIAL SCIENCE / Reference");
        bisacMap.put("SOC053000","SOCIAL SCIENCE / Regional Studies");
        bisacMap.put("SOC024000","SOCIAL SCIENCE / Research");
        bisacMap.put("SOC060000","SOCIAL SCIENCE / Sexual Abuse & Harassment");
        bisacMap.put("SOC054000","SOCIAL SCIENCE / Slavery");
        bisacMap.put("SOC050000","SOCIAL SCIENCE / Social Classes");
        bisacMap.put("SOC025000","SOCIAL SCIENCE / Social Work");
        bisacMap.put("SOC026000","SOCIAL SCIENCE / Sociology / General");
        bisacMap.put("SOC026010","SOCIAL SCIENCE / Sociology / Marriage & Family");
        bisacMap.put("SOC026020","SOCIAL SCIENCE / Sociology / Rural");
        bisacMap.put("SOC026030","SOCIAL SCIENCE / Sociology / Urban");
        bisacMap.put("SOC039000","SOCIAL SCIENCE / Sociology of Religion");
        bisacMap.put("SOC027000","SOCIAL SCIENCE / Statistics");
        bisacMap.put("SOC051000","SOCIAL SCIENCE / Violence in Society");
        bisacMap.put("SOC035000","SOCIAL SCIENCE / Volunteer Work");
        bisacMap.put("SOC028000","SOCIAL SCIENCE / Women's Studies");
        bisacMap.put("SPO000000","SPORTS & RECREATION / General");
        bisacMap.put("SPO001000","SPORTS & RECREATION / Air Sports");
        bisacMap.put("SPO002000","SPORTS & RECREATION / Archery");
        bisacMap.put("TRV003070","TRAVEL / Asia / Southwest");
        bisacMap.put("SPO003000","SPORTS & RECREATION / Baseball / General");
        bisacMap.put("SPO003020","SPORTS & RECREATION / Baseball / Essays & Writings");
        bisacMap.put("SPO003030","SPORTS & RECREATION / Baseball / History");
        bisacMap.put("SPO003040","SPORTS & RECREATION / Baseball / Statistics");
        bisacMap.put("SPO004000","SPORTS & RECREATION / Basketball");
        bisacMap.put("SPO005000","SPORTS & RECREATION / Boating");
        bisacMap.put("SPO006000","SPORTS & RECREATION / Bodybuilding & Weight Training");
        bisacMap.put("SPO007000","SPORTS & RECREATION / Bowling");
        bisacMap.put("SPO008000","SPORTS & RECREATION / Boxing");
        bisacMap.put("SPO068000","SPORTS & RECREATION / Business Aspects");
        bisacMap.put("SPO009000","SPORTS & RECREATION / Camping");
        bisacMap.put("SPO010000","SPORTS & RECREATION / Canoeing");
        bisacMap.put("SPO070000","SPORTS & RECREATION / Cheerleading");
        bisacMap.put("SPO061000","SPORTS & RECREATION / Coaching / General");
        bisacMap.put("SPO003010","SPORTS & RECREATION / Coaching / Baseball");
        bisacMap.put("SPO061010","SPORTS & RECREATION / Coaching / Basketball");
        bisacMap.put("SPO061020","SPORTS & RECREATION / Coaching / Football");
        bisacMap.put("SPO061030","SPORTS & RECREATION / Coaching / Soccer");
        bisacMap.put("SPO054000","SPORTS & RECREATION / Cricket");
        bisacMap.put("SPO011000","SPORTS & RECREATION / Cycling");
        bisacMap.put("SPO062000","SPORTS & RECREATION / Dog Racing");
        bisacMap.put("SPO057000","SPORTS & RECREATION / Equestrian");
        bisacMap.put("SPO063000","SPORTS & RECREATION / Equipment & Supplies");
        bisacMap.put("SPO012000","SPORTS & RECREATION / Essays");
        bisacMap.put("SPO064000","SPORTS & RECREATION / Extreme Sports");
        bisacMap.put("SPO071000","SPORTS & RECREATION / Fencing");
        bisacMap.put("SPO073000","SPORTS & RECREATION / Field Hockey");
        bisacMap.put("SPO014000","SPORTS & RECREATION / Fishing");
        bisacMap.put("SPO015000","SPORTS & RECREATION / Football");
        bisacMap.put("SPO016000","SPORTS & RECREATION / Golf");
        bisacMap.put("SPO017000","SPORTS & RECREATION / Gymnastics");
        bisacMap.put("SPO018000","SPORTS & RECREATION / Hiking");
        bisacMap.put("SPO019000","SPORTS & RECREATION / History");
        bisacMap.put("SPO020000","SPORTS & RECREATION / Hockey");
        bisacMap.put("SPO021000","SPORTS & RECREATION / Horse Racing");
        bisacMap.put("SPO022000","SPORTS & RECREATION / Hunting");
        bisacMap.put("SPO023000","SPORTS & RECREATION / Ice & Figure Skating");
        bisacMap.put("SPO024000","SPORTS & RECREATION / Juggling");
        bisacMap.put("SPO025000","SPORTS & RECREATION / Kayaking");
        bisacMap.put("SPO026000","SPORTS & RECREATION / Lacrosse");
        bisacMap.put("SPO027000","SPORTS & RECREATION / Martial Arts & Self-Defense");
        bisacMap.put("SPO028000","SPORTS & RECREATION / Motor Sports");
        bisacMap.put("SPO029000","SPORTS & RECREATION / Mountaineering");
        bisacMap.put("SPO058000","SPORTS & RECREATION / Olympics");
        bisacMap.put("SPO030000","SPORTS & RECREATION / Outdoor Skills");
        bisacMap.put("SPO055000","SPORTS & RECREATION / Polo");
        bisacMap.put("SPO060000","SPORTS & RECREATION / Pool, Billiards, Snooker");
        bisacMap.put("SPO031000","SPORTS & RECREATION / Racket Sports");
        bisacMap.put("SPO032000","SPORTS & RECREATION / Racquetball");
        bisacMap.put("SPO033000","SPORTS & RECREATION / Reference");
        bisacMap.put("SPO065000","SPORTS & RECREATION / Rodeos");
        bisacMap.put("SPO034000","SPORTS & RECREATION / Roller & In-Line Skating");
        bisacMap.put("SPO056000","SPORTS & RECREATION / Rugby");
        bisacMap.put("SPO035000","SPORTS & RECREATION / Running & Jogging");
        bisacMap.put("SPO036000","SPORTS & RECREATION / Sailing");
        bisacMap.put("SPO059000","SPORTS & RECREATION / Scuba & Snorkeling");
        bisacMap.put("SPO037000","SPORTS & RECREATION / Shooting");
        bisacMap.put("SPO038000","SPORTS & RECREATION / Skateboarding");
        bisacMap.put("SPO039000","SPORTS & RECREATION / Skiing");
        bisacMap.put("SPO072000","SPORTS & RECREATION / Snowboarding");
        bisacMap.put("SPO040000","SPORTS & RECREATION / Soccer");
        bisacMap.put("SPO066000","SPORTS & RECREATION / Sociology of Sports");
        bisacMap.put("SPO067000","SPORTS & RECREATION / Softball");
        bisacMap.put("SPO041000","SPORTS & RECREATION / Sports Psychology");
        bisacMap.put("SPO042000","SPORTS & RECREATION / Squash");
        bisacMap.put("SPO069000","SPORTS & RECREATION / Surfing");
        bisacMap.put("SPO043000","SPORTS & RECREATION / Swimming & Diving");
        bisacMap.put("SPO044000","SPORTS & RECREATION / Table Tennis");
        bisacMap.put("SPO045000","SPORTS & RECREATION / Tennis");
        bisacMap.put("SPO046000","SPORTS & RECREATION / Track & Field");
        bisacMap.put("SPO047000","SPORTS & RECREATION / Training");
        bisacMap.put("SPO048000","SPORTS & RECREATION / Triathlon");
        bisacMap.put("SPO049000","SPORTS & RECREATION / Volleyball");
        bisacMap.put("SPO050000","SPORTS & RECREATION / Walking");
        bisacMap.put("SPO051000","SPORTS & RECREATION / Water Sports");
        bisacMap.put("SPO052000","SPORTS & RECREATION / Winter Sports");
        bisacMap.put("SPO053000","SPORTS & RECREATION / Wrestling");
        bisacMap.put("STU000000","STUDY AIDS / General");
        bisacMap.put("STU001000","STUDY AIDS / ACT");
        bisacMap.put("STU002000","STUDY AIDS / Advanced Placement");
        bisacMap.put("STU003000","STUDY AIDS / Armed Forces");
        bisacMap.put("STU034000","STUDY AIDS / Bar Exam");
        bisacMap.put("STU004000","STUDY AIDS / Book Notes (see also JUVENILE NONFICTION / Study Aids / Book Notes)");
        bisacMap.put("STU006000","STUDY AIDS / Citizenship");
        bisacMap.put("STU007000","STUDY AIDS / Civil Service");
        bisacMap.put("STU008000","STUDY AIDS / CLEP (College-Level Examination Program)");
        bisacMap.put("STU009000","STUDY AIDS / College Entrance");
        bisacMap.put("STU010000","STUDY AIDS / College Guides");
        bisacMap.put("STU011000","STUDY AIDS / CPA (Certified Public Accountant)");
        bisacMap.put("STU031000","STUDY AIDS / Financial Aid");
        bisacMap.put("STU012000","STUDY AIDS / GED (General Educational Development Tests)");
        bisacMap.put("STU013000","STUDY AIDS / GMAT (Graduate Management Admission Test)");
        bisacMap.put("STU015000","STUDY AIDS / Graduate School Guides");
        bisacMap.put("STU016000","STUDY AIDS / GRE (Graduate Record Examination)");
        bisacMap.put("STU025000","STUDY AIDS / High School Entrance");
        bisacMap.put("STU017000","STUDY AIDS / LSAT (Law School Admission Test)");
        bisacMap.put("STU018000","STUDY AIDS / MAT (Miller Analogies Test)");
        bisacMap.put("STU032000","STUDY AIDS / MCAT (Medical College Admission Test)");
        bisacMap.put("STU019000","STUDY AIDS / NTE (National Teacher Examinations)");
        bisacMap.put("STU021000","STUDY AIDS / Professional");
        bisacMap.put("STU033000","STUDY AIDS / PSAT & NMSQT (National Merit Scholarship Qualifying Test)");
        bisacMap.put("STU022000","STUDY AIDS / Regents");
        bisacMap.put("STU024000","STUDY AIDS / SAT");
        bisacMap.put("STU026000","STUDY AIDS / Study Guides");
        bisacMap.put("STU027000","STUDY AIDS / Tests");
        bisacMap.put("STU028000","STUDY AIDS / TOEFL (Test of English as a Foreign Language)");
        bisacMap.put("STU029000","STUDY AIDS / Vocational");
        bisacMap.put("TEC000000","TECHNOLOGY & ENGINEERING / General");
        bisacMap.put("TEC001000","TECHNOLOGY & ENGINEERING / Acoustics & Sound");
        bisacMap.put("TEC002000","TECHNOLOGY & ENGINEERING / Aeronautics & Astronautics");
        bisacMap.put("TEC003000","TECHNOLOGY & ENGINEERING / Agriculture / General");
        bisacMap.put("TEC003080","TECHNOLOGY & ENGINEERING / Agriculture / Agronomy / General");
        bisacMap.put("TEC003030","TECHNOLOGY & ENGINEERING / Agriculture / Agronomy / Crop Science");
        bisacMap.put("TEC003060","TECHNOLOGY & ENGINEERING / Agriculture / Agronomy / Soil Science");
        bisacMap.put("TEC003020","TECHNOLOGY & ENGINEERING / Agriculture / Animal Husbandry");
        bisacMap.put("TEC003100","TECHNOLOGY & ENGINEERING / Agriculture / Beekeeping");
        bisacMap.put("TEC003040","TECHNOLOGY & ENGINEERING / Agriculture / Forestry");
        bisacMap.put("TEC003050","TECHNOLOGY & ENGINEERING / Agriculture / Irrigation");
        bisacMap.put("TEC003090","TECHNOLOGY & ENGINEERING / Agriculture / Organic");
        bisacMap.put("TEC003070","TECHNOLOGY & ENGINEERING / Agriculture / Sustainable Agriculture");
        bisacMap.put("TEC003010","TECHNOLOGY & ENGINEERING / Agriculture / Tropical Agriculture");
        bisacMap.put("TEC004000","TECHNOLOGY & ENGINEERING / Automation");
        bisacMap.put("TEC009090","TECHNOLOGY & ENGINEERING / Automotive");
        bisacMap.put("TEC059000","TECHNOLOGY & ENGINEERING / Biomedical");
        bisacMap.put("TEC048000","TECHNOLOGY & ENGINEERING / Cartography");
        bisacMap.put("TEC009010","TECHNOLOGY & ENGINEERING / Chemical & Biochemical");
        bisacMap.put("TEC009020","TECHNOLOGY & ENGINEERING / Civil / General");
        bisacMap.put("TEC009100","TECHNOLOGY & ENGINEERING / Civil / Bridges");
        bisacMap.put("TEC009110","TECHNOLOGY & ENGINEERING / Civil / Dams & Reservoirs");
        bisacMap.put("TEC009120","TECHNOLOGY & ENGINEERING / Civil / Earthquake");
        bisacMap.put("TEC009130","TECHNOLOGY & ENGINEERING / Civil / Flood Control");
        bisacMap.put("TEC009140","TECHNOLOGY & ENGINEERING / Civil / Highway & Traffic");
        bisacMap.put("TEC009150","TECHNOLOGY & ENGINEERING / Civil / Soil & Rock");
        bisacMap.put("TEC009160","TECHNOLOGY & ENGINEERING / Civil / Transport");
        bisacMap.put("TEC005000","TECHNOLOGY & ENGINEERING / Construction / General");
        bisacMap.put("TEC005010","TECHNOLOGY & ENGINEERING / Construction / Carpentry");
        bisacMap.put("TEC005020","TECHNOLOGY & ENGINEERING / Construction / Contracting");
        bisacMap.put("TEC005030","TECHNOLOGY & ENGINEERING / Construction / Electrical");
        bisacMap.put("TEC005040","TECHNOLOGY & ENGINEERING / Construction / Estimating");
        bisacMap.put("TEC005050","TECHNOLOGY & ENGINEERING / Construction / Heating, Ventilation & Air Conditioning");
        bisacMap.put("TEC005060","TECHNOLOGY & ENGINEERING / Construction / Masonry");
        bisacMap.put("TEC005070","TECHNOLOGY & ENGINEERING / Construction / Plumbing");
        bisacMap.put("TEC005080","TECHNOLOGY & ENGINEERING / Construction / Roofing");
        bisacMap.put("TEC006000","TECHNOLOGY & ENGINEERING / Drafting & Mechanical Drawing");
        bisacMap.put("TEC007000","TECHNOLOGY & ENGINEERING / Electrical");
        bisacMap.put("TEC008000","TECHNOLOGY & ENGINEERING / Electronics / General");
        bisacMap.put("TEC008010","TECHNOLOGY & ENGINEERING / Electronics / Circuits / General");
        bisacMap.put("TEC008020","TECHNOLOGY & ENGINEERING / Electronics / Circuits / Integrated");
        bisacMap.put("TEC008030","TECHNOLOGY & ENGINEERING / Electronics / Circuits / Logic");
        bisacMap.put("TEC008050","TECHNOLOGY & ENGINEERING / Electronics / Circuits / VLSI & ULSI");
        bisacMap.put("TEC008060","TECHNOLOGY & ENGINEERING / Electronics / Digital");
        bisacMap.put("TEC008070","TECHNOLOGY & ENGINEERING / Electronics / Microelectronics");
        bisacMap.put("TEC008080","TECHNOLOGY & ENGINEERING / Electronics / Optoelectronics");
        bisacMap.put("TEC008090","TECHNOLOGY & ENGINEERING / Electronics / Semiconductors");
        bisacMap.put("TEC008100","TECHNOLOGY & ENGINEERING / Electronics / Solid State");
        bisacMap.put("TEC008110","TECHNOLOGY & ENGINEERING / Electronics / Transistors");
        bisacMap.put("TEC065000","TECHNOLOGY & ENGINEERING / Emergency Management");
        bisacMap.put("TEC009000","TECHNOLOGY & ENGINEERING / Engineering (General)");
        bisacMap.put("TEC010000","TECHNOLOGY & ENGINEERING / Environmental / General");
        bisacMap.put("TEC010010","TECHNOLOGY & ENGINEERING / Environmental / Pollution Control");
        bisacMap.put("TEC010020","TECHNOLOGY & ENGINEERING / Environmental / Waste Management");
        bisacMap.put("TEC010030","TECHNOLOGY & ENGINEERING / Environmental / Water Supply");
        bisacMap.put("TEC011000","TECHNOLOGY & ENGINEERING / Fiber Optics");
        bisacMap.put("TEC045000","TECHNOLOGY & ENGINEERING / Fire Science");
        bisacMap.put("TEC049000","TECHNOLOGY & ENGINEERING / Fisheries & Aquaculture");
        bisacMap.put("TEC012000","TECHNOLOGY & ENGINEERING / Food Science");
        bisacMap.put("TEC013000","TECHNOLOGY & ENGINEERING / Fracture Mechanics");
        bisacMap.put("TEC056000","TECHNOLOGY & ENGINEERING / History");
        bisacMap.put("TEC050000","TECHNOLOGY & ENGINEERING / Holography");
        bisacMap.put("TEC014000","TECHNOLOGY & ENGINEERING / Hydraulics");
        bisacMap.put("TEC015000","TECHNOLOGY & ENGINEERING / Imaging Systems");
        bisacMap.put("TEC016000","TECHNOLOGY & ENGINEERING / Industrial Design / General");
        bisacMap.put("TEC016010","TECHNOLOGY & ENGINEERING / Industrial Design / Packaging");
        bisacMap.put("TEC016020","TECHNOLOGY & ENGINEERING / Industrial Design / Product");
        bisacMap.put("TEC009060","TECHNOLOGY & ENGINEERING / Industrial Engineering");
        bisacMap.put("TEC017000","TECHNOLOGY & ENGINEERING / Industrial Health & Safety");
        bisacMap.put("TEC018000","TECHNOLOGY & ENGINEERING / Industrial Technology");
        bisacMap.put("TEC057000","TECHNOLOGY & ENGINEERING / Inventions");
        bisacMap.put("TEC019000","TECHNOLOGY & ENGINEERING / Lasers & Photonics");
        bisacMap.put("TEC046000","TECHNOLOGY & ENGINEERING / Machinery");
        bisacMap.put("TEC020000","TECHNOLOGY & ENGINEERING / Manufacturing");
        bisacMap.put("TEC060000","TECHNOLOGY & ENGINEERING / Marine & Naval");
        bisacMap.put("TEC021000","TECHNOLOGY & ENGINEERING / Materials Science");
        bisacMap.put("TEC022000","TECHNOLOGY & ENGINEERING / Measurement");
        bisacMap.put("TEC009070","TECHNOLOGY & ENGINEERING / Mechanical");
        bisacMap.put("TEC023000","TECHNOLOGY & ENGINEERING / Metallurgy");
        bisacMap.put("TEC024000","TECHNOLOGY & ENGINEERING / Microwaves");
        bisacMap.put("TEC025000","TECHNOLOGY & ENGINEERING / Military Science");
        bisacMap.put("TEC026000","TECHNOLOGY & ENGINEERING / Mining");
        bisacMap.put("TEC061000","TECHNOLOGY & ENGINEERING / Mobile & Wireless Communications");
        bisacMap.put("TEC027000","TECHNOLOGY & ENGINEERING / Nanotechnology & MEMS");
        bisacMap.put("TEC029000","TECHNOLOGY & ENGINEERING / Operations Research");
        bisacMap.put("TEC030000","TECHNOLOGY & ENGINEERING / Optics");
        bisacMap.put("TEC058000","TECHNOLOGY & ENGINEERING / Pest Control");
        bisacMap.put("TEC047000","TECHNOLOGY & ENGINEERING / Petroleum");
        bisacMap.put("TEC031000","TECHNOLOGY & ENGINEERING / Power Resources / General");
        bisacMap.put("TEC031010","TECHNOLOGY & ENGINEERING / Power Resources / Alternative & Renewable");
        bisacMap.put("TEC031020","TECHNOLOGY & ENGINEERING / Power Resources / Electrical");
        bisacMap.put("TEC031030","TECHNOLOGY & ENGINEERING / Power Resources / Fossil Fuels");
        bisacMap.put("TEC028000","TECHNOLOGY & ENGINEERING / Power Resources / Nuclear");
        bisacMap.put("TEC062000","TECHNOLOGY & ENGINEERING / Project Management");
        bisacMap.put("TEC032000","TECHNOLOGY & ENGINEERING / Quality Control");
        bisacMap.put("TEC033000","TECHNOLOGY & ENGINEERING / Radar");
        bisacMap.put("TEC034000","TECHNOLOGY & ENGINEERING / Radio");
        bisacMap.put("TEC035000","TECHNOLOGY & ENGINEERING / Reference");
        bisacMap.put("TEC036000","TECHNOLOGY & ENGINEERING / Remote Sensing & Geographic Information Systems");
        bisacMap.put("TEC066000","TECHNOLOGY & ENGINEERING / Research");
        bisacMap.put("TEC037000","TECHNOLOGY & ENGINEERING / Robotics");
        bisacMap.put("TEC064000","TECHNOLOGY & ENGINEERING / Sensors");
        bisacMap.put("TEC067000","TECHNOLOGY & ENGINEERING / Signals & Signal Processing");
        bisacMap.put("TEC052000","TECHNOLOGY & ENGINEERING / Social Aspects");
        bisacMap.put("TEC063000","TECHNOLOGY & ENGINEERING / Structural");
        bisacMap.put("TEC039000","TECHNOLOGY & ENGINEERING / Superconductors & Superconductivity");
        bisacMap.put("TEC054000","TECHNOLOGY & ENGINEERING / Surveying");
        bisacMap.put("TEC040000","TECHNOLOGY & ENGINEERING / Technical & Manufacturing Industries & Trades");
        bisacMap.put("TEC044000","TECHNOLOGY & ENGINEERING / Technical Writing");
        bisacMap.put("TEC041000","TECHNOLOGY & ENGINEERING / Telecommunications");
        bisacMap.put("TEC043000","TECHNOLOGY & ENGINEERING / Television & Video");
        bisacMap.put("TEC055000","TECHNOLOGY & ENGINEERING / Textiles & Polymers");
        bisacMap.put("TEC068000","TECHNOLOGY & ENGINEERING / Tribology");
        bisacMap.put("TRA000000","TRANSPORTATION / General");
        bisacMap.put("TRA001000","TRANSPORTATION / Automotive / General");
        bisacMap.put("TRA001010","TRANSPORTATION / Automotive / Antique & Classic");
        bisacMap.put("TRA001020","TRANSPORTATION / Automotive / Buyer's Guides");
        bisacMap.put("TRA001030","TRANSPORTATION / Automotive / Customizing");
        bisacMap.put("TRA001050","TRANSPORTATION / Automotive / History");
        bisacMap.put("TRA001060","TRANSPORTATION / Automotive / Pictorial");
        bisacMap.put("TRA001140","TRANSPORTATION / Automotive / Repair & Maintenance");
        bisacMap.put("TRA001150","TRANSPORTATION / Automotive / Trucks");
        bisacMap.put("TRA002000","TRANSPORTATION / Aviation / General");
        bisacMap.put("TRA002040","TRANSPORTATION / Aviation / Commercial");
        bisacMap.put("TRA002010","TRANSPORTATION / Aviation / History");
        bisacMap.put("TRA002050","TRANSPORTATION / Aviation / Piloting & Flight Instruction");
        bisacMap.put("TRA002030","TRANSPORTATION / Aviation / Repair & Maintenance");
        bisacMap.put("TRA010000","TRANSPORTATION / Bicycles");
        bisacMap.put("TRA003000","TRANSPORTATION / Motorcycles / General");
        bisacMap.put("TRA003010","TRANSPORTATION / Motorcycles / History");
        bisacMap.put("TRA003020","TRANSPORTATION / Motorcycles / Pictorial");
        bisacMap.put("TRA003030","TRANSPORTATION / Motorcycles / Repair & Maintenance");
        bisacMap.put("TRA008000","TRANSPORTATION / Navigation");
        bisacMap.put("TRA009000","TRANSPORTATION / Public Transportation");
        bisacMap.put("TRA004000","TRANSPORTATION / Railroads / General");
        bisacMap.put("TRA004010","TRANSPORTATION / Railroads / History");
        bisacMap.put("TRA004020","TRANSPORTATION / Railroads / Pictorial");
        bisacMap.put("TRA006000","TRANSPORTATION / Ships & Shipbuilding / General");
        bisacMap.put("TRA006010","TRANSPORTATION / Ships & Shipbuilding / History");
        bisacMap.put("TRA006020","TRANSPORTATION / Ships & Shipbuilding / Pictorial");
        bisacMap.put("TRA006030","TRANSPORTATION / Ships & Shipbuilding / Repair & Maintenance");
        bisacMap.put("TRV000000","TRAVEL / General");
        bisacMap.put("TRV002000","TRAVEL / Africa / General");
        bisacMap.put("TRV002010","TRAVEL / Africa / Central");
        bisacMap.put("TRV002020","TRAVEL / Africa / East");
        bisacMap.put("TRV002030","TRAVEL / Africa / Kenya");
        bisacMap.put("TRV002040","TRAVEL / Africa / Morocco");
        bisacMap.put("TRV002050","TRAVEL / Africa / North");
        bisacMap.put("TRV002060","TRAVEL / Africa / Republic of South Africa");
        bisacMap.put("TRV002070","TRAVEL / Africa / South");
        bisacMap.put("TRV002080","TRAVEL / Africa / West");
        bisacMap.put("TRV029000","TRAVEL / Amusement & Theme Parks");
        bisacMap.put("TRV003000","TRAVEL / Asia / General");
        bisacMap.put("TRV003010","TRAVEL / Asia / Central");
        bisacMap.put("TRV003020","TRAVEL / Asia / China");
        bisacMap.put("TRV003030","TRAVEL / Asia / Far East");
        bisacMap.put("TRV003040","TRAVEL / Asia / India & South Asia");
        bisacMap.put("TRV003050","TRAVEL / Asia / Japan");
        bisacMap.put("TRV003060","TRAVEL / Asia / Southeast");
        bisacMap.put("TRV004000","TRAVEL / Australia & Oceania");
        bisacMap.put("TRV005000","TRAVEL / Bed & Breakfast");
        bisacMap.put("TRV033000","TRAVEL / Budget");
        bisacMap.put("TRV006000","TRAVEL / Canada / General");
        bisacMap.put("TRV006010","TRAVEL / Canada / Atlantic Provinces (NB, NF, NS, PE)");
        bisacMap.put("TRV006020","TRAVEL / Canada / Ontario (ON)");
        bisacMap.put("TRV006030","TRAVEL / Canada / Prairie Provinces (MB, SK)");
        bisacMap.put("TRV006060","TRAVEL / Canada / Quebec (QC)");
        bisacMap.put("TRV006040","TRAVEL / Canada / Territories & Nunavut (NT, NU, YT)");
        bisacMap.put("TRV006050","TRAVEL / Canada / Western Provinces (AB, BC)");
        bisacMap.put("TRV007000","TRAVEL / Caribbean & West Indies");
        bisacMap.put("TRV008000","TRAVEL / Central America");
        bisacMap.put("TRV028000","TRAVEL / Cruises");
        bisacMap.put("TRV010000","TRAVEL / Essays & Travelogues");
        bisacMap.put("TRV009000","TRAVEL / Europe / General");
        bisacMap.put("TRV009010","TRAVEL / Europe / Austria");
        bisacMap.put("TRV009020","TRAVEL / Europe / Benelux Countries (Belgium, Netherlands, Luxembourg)");
        bisacMap.put("TRV009160","TRAVEL / Europe / Cyprus");
        bisacMap.put("TRV009030","TRAVEL / Europe / Denmark");
        bisacMap.put("TRV009040","TRAVEL / Europe / Eastern");
        bisacMap.put("TRV009050","TRAVEL / Europe / France");
        bisacMap.put("TRV009060","TRAVEL / Europe / Germany");
        bisacMap.put("TRV009070","TRAVEL / Europe / Great Britain");
        bisacMap.put("TRV009080","TRAVEL / Europe / Greece");
        bisacMap.put("TRV009090","TRAVEL / Europe / Iceland & Greenland");
        bisacMap.put("TRV009100","TRAVEL / Europe / Ireland");
        bisacMap.put("TRV009110","TRAVEL / Europe / Italy");
        bisacMap.put("TRV009120","TRAVEL / Europe / Scandinavia (Finland, Norway, Sweden)");
        bisacMap.put("TRV009130","TRAVEL / Europe / Spain & Portugal");
        bisacMap.put("TRV009140","TRAVEL / Europe / Switzerland");
        bisacMap.put("TRV009150","TRAVEL / Europe / Western");
        bisacMap.put("TRV012000","TRAVEL / Former Soviet Republics");
        bisacMap.put("TRV034000","TRAVEL / Hikes & Walks");
        bisacMap.put("TRV013000","TRAVEL / Hotels, Inns & Hostels");
        bisacMap.put("TRV027000","TRAVEL / Maps & Road Atlases (see also REFERENCE / Atlases, Gazetteers & Maps)");
        bisacMap.put("TRV014000","TRAVEL / Mexico");
        bisacMap.put("TRV015000","TRAVEL / Middle East / General");
        bisacMap.put("TRV015010","TRAVEL / Middle East / Egypt");
        bisacMap.put("TRV015020","TRAVEL / Middle East / Israel");
        bisacMap.put("TRV015030","TRAVEL / Middle East / Turkey");
        bisacMap.put("TRV016000","TRAVEL / Museums, Tours, Points of Interest");
        bisacMap.put("TRV017000","TRAVEL / North America");
        bisacMap.put("TRV018000","TRAVEL / Parks & Campgrounds");
        bisacMap.put("TRV019000","TRAVEL / Pictorials (see also PHOTOGRAPHY / Subjects & Themes / Regional)");
        bisacMap.put("TRV020000","TRAVEL / Polar Regions");
        bisacMap.put("TRV035000","TRAVEL / Rail Travel");
        bisacMap.put("TRV021000","TRAVEL / Reference");
        bisacMap.put("TRV030000","TRAVEL / Resorts & Spas");
        bisacMap.put("TRV022000","TRAVEL / Restaurants");
        bisacMap.put("TRV031000","TRAVEL / Road Travel");
        bisacMap.put("TRV023000","TRAVEL / Russia");
        bisacMap.put("TRV032000","TRAVEL / Shopping");
        bisacMap.put("TRV024000","TRAVEL / South America / General");
        bisacMap.put("TRV024010","TRAVEL / South America / Argentina");
        bisacMap.put("TRV024020","TRAVEL / South America / Brazil");
        bisacMap.put("TRV024030","TRAVEL / South America / Chile & Easter Island");
        bisacMap.put("TRV024040","TRAVEL / South America / Ecuador & Galapagos Islands");
        bisacMap.put("TRV024050","TRAVEL / South America / Peru");
        bisacMap.put("TRV026000","TRAVEL / Special Interest / General");
        bisacMap.put("TRV001000","TRAVEL / Special Interest / Adventure");
        bisacMap.put("TRV026010","TRAVEL / Special Interest / Business");
        bisacMap.put("TRV026020","TRAVEL / Special Interest / Ecotourism");
        bisacMap.put("TRV011000","TRAVEL / Special Interest / Family");
        bisacMap.put("TRV026070","TRAVEL / Special Interest / Gay & Lesbian");
        bisacMap.put("TRV026030","TRAVEL / Special Interest / Handicapped");
        bisacMap.put("TRV026090","TRAVEL / Special Interest / Literary");
        bisacMap.put("TRV026040","TRAVEL / Special Interest / Pets");
        bisacMap.put("TRV026060","TRAVEL / Special Interest / Religious");
        bisacMap.put("TRV026050","TRAVEL / Special Interest / Senior");
        bisacMap.put("TRV026080","TRAVEL / Special Interest / Sports");
        bisacMap.put("TRV025000","TRAVEL / United States / General");
        bisacMap.put("TRV025010","TRAVEL / United States / Midwest / General");
        bisacMap.put("TRV025020","TRAVEL / United States / Midwest / East North Central (IL, IN, MI, OH, WI)");
        bisacMap.put("TRV025030","TRAVEL / United States / Midwest / West North Central (IA, KS, MN, MO, ND, NE, SD)");
        bisacMap.put("TRV025040","TRAVEL / United States / Northeast / General");
        bisacMap.put("TRV025050","TRAVEL / United States / Northeast / Middle Atlantic (NJ, NY, PA)");
        bisacMap.put("TRV025060","TRAVEL / United States / Northeast / New England (CT, MA, ME, NH, RI, VT)");
        bisacMap.put("TRV025070","TRAVEL / United States / South / General");
        bisacMap.put("TRV025080","TRAVEL / United States / South / East South Central (AL, KY, MS, TN)");
        bisacMap.put("TRV025090","TRAVEL / United States / South / South Atlantic (DC, DE, FL, GA, MD, NC, SC, VA, WV)");
        bisacMap.put("TRV025100","TRAVEL / United States / South / West South Central (AR, LA, OK, TX)");
        bisacMap.put("TRV025110","TRAVEL / United States / West / General");
        bisacMap.put("TRV025120","TRAVEL / United States / West / Mountain (AZ, CO, ID, MT, NM, NV, UT, WY)");
        bisacMap.put("TRV025130","TRAVEL / United States / West / Pacific (AK, CA, HI, OR, WA)");
        bisacMap.put("TRU000000","TRUE CRIME / General");
        bisacMap.put("TRU001000","TRUE CRIME / Espionage");
        bisacMap.put("TRU004000","TRUE CRIME / Hoaxes & Deceptions");
        bisacMap.put("TRU002000","TRUE CRIME / Murder / General");
        bisacMap.put("TRU002010","TRUE CRIME / Murder / Serial Killers");
        bisacMap.put("TRU003000","TRUE CRIME / Organized Crime");
        bisacMap.put("TRU005000","TRUE CRIME / White Collar Crime");
    }
    public static String getBISACNameByBISACCode(String bisacCode) {
        return bisacMap.get(bisacCode);
    }
}
